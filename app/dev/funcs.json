[
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                68
            ],
            "filename": "add.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000003",
                "name": "createMathOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createMathOperation",
        "longname": "createMathOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Adds two numbers.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {number} augend The first number in an addition.\n * @param {number} addend The second number in an addition.\n * @author sum\n * @returns {number} The sum of an addition.\n * @example\n *\n * add(6, 4);\n * // => 10\n */",
        "meta": {
            "range": [
                402,
                486
            ],
            "filename": "add.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000011",
                "name": "add",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Adds two numbers.",
        "scope": "static",
        "memberof": "_",
        "since": "3.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The first number in an addition.",
                "name": "augend"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The second number in an addition.",
                "name": "addend"
            }
        ],
        "author": [
            "sum"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The sum of an addition."
            }
        ],
        "examples": [
            "add(6, 4);\n// => 10"
        ],
        "name": "add",
        "longname": "_.add",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                489,
                509
            ],
            "filename": "add.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000025",
                "name": "module.exports",
                "type": "Identifier",
                "value": "add",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "after.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000033",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                92,
                131
            ],
            "filename": "after.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000041",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `before`; this method creates a function that invokes\n * `function` once it's called `calls_before` or more times.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {number} calls_before The number of calls before something happens.\n * @param {function_to_restrict} function A javascript function.\n * @author function\n * @returns {restricted_function} A restricted function.\n * @example\n *\n * var saves = ['profile', 'settings'];\n *\n * var done = after(saves.length, function() {\n *   console.log('done saving!');\n * });\n *\n * forEach(saves, function(type) {\n *   asyncSave({ 'type': type, 'complete': done });\n * });\n * // => Logs 'done saving!' after the two async saves have completed.\n */",
        "meta": {
            "range": [
                877,
                1099
            ],
            "filename": "after.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000044",
                "name": "after",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "n",
                    "func"
                ]
            },
            "vars": {
                "n": "_.after~n",
                "": null
            }
        },
        "description": "The opposite of `before`; this method creates a function that invokes\n`function` once it's called `calls_before` or more times.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of calls before something happens.",
                "name": "calls_before"
            },
            {
                "type": {
                    "names": [
                        "function_to_restrict"
                    ]
                },
                "description": "A javascript function.",
                "name": "function"
            }
        ],
        "author": [
            "function"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "restricted_function"
                    ]
                },
                "description": "A restricted function."
            }
        ],
        "examples": [
            "var saves = ['profile', 'settings'];\n\nvar done = after(saves.length, function() {\n  console.log('done saving!');\n});\n\nforEach(saves, function(type) {\n  asyncSave({ 'type': type, 'complete': done });\n});\n// => Logs 'done saving!' after the two async saves have completed."
        ],
        "name": "after",
        "longname": "_.after",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                986,
                1002
            ],
            "filename": "after.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000060",
                "name": "n",
                "type": "CallExpression",
                "funcscope": "_.after",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.after~n",
        "kind": "member",
        "memberof": "_.after",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1101,
                1123
            ],
            "filename": "after.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000082",
                "name": "module.exports",
                "type": "Identifier",
                "value": "after",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                2488
            ],
            "filename": "array.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000090",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                48
            ],
            "filename": "array.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000095",
                "name": "chunk",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "module.exports.chunk",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                83
            ],
            "filename": "array.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000099",
                "name": "compact",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "compact",
        "longname": "module.exports.compact",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                87,
                116
            ],
            "filename": "array.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000103",
                "name": "concat",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "concat",
        "longname": "module.exports.concat",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                120,
                157
            ],
            "filename": "array.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000107",
                "name": "difference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "module.exports.difference",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                161,
                202
            ],
            "filename": "array.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000111",
                "name": "differenceBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "differenceBy",
        "longname": "module.exports.differenceBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                206,
                251
            ],
            "filename": "array.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000115",
                "name": "differenceWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "differenceWith",
        "longname": "module.exports.differenceWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                255,
                280
            ],
            "filename": "array.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000119",
                "name": "drop",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "drop",
        "longname": "module.exports.drop",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                284,
                319
            ],
            "filename": "array.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000123",
                "name": "dropRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dropRight",
        "longname": "module.exports.dropRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                323,
                368
            ],
            "filename": "array.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000127",
                "name": "dropRightWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dropRightWhile",
        "longname": "module.exports.dropRightWhile",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                372,
                407
            ],
            "filename": "array.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000131",
                "name": "dropWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dropWhile",
        "longname": "module.exports.dropWhile",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                411,
                436
            ],
            "filename": "array.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000135",
                "name": "fill",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fill",
        "longname": "module.exports.fill",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                440,
                475
            ],
            "filename": "array.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000139",
                "name": "findIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findIndex",
        "longname": "module.exports.findIndex",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                479,
                522
            ],
            "filename": "array.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000143",
                "name": "findLastIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findLastIndex",
        "longname": "module.exports.findLastIndex",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                526,
                553
            ],
            "filename": "array.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000147",
                "name": "first",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "module.exports.first",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                557,
                588
            ],
            "filename": "array.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000151",
                "name": "flatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatten",
        "longname": "module.exports.flatten",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                592,
                631
            ],
            "filename": "array.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000155",
                "name": "flattenDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flattenDeep",
        "longname": "module.exports.flattenDeep",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                635,
                676
            ],
            "filename": "array.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000159",
                "name": "flattenDepth",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flattenDepth",
        "longname": "module.exports.flattenDepth",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                680,
                715
            ],
            "filename": "array.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000163",
                "name": "fromPairs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fromPairs",
        "longname": "module.exports.fromPairs",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                719,
                744
            ],
            "filename": "array.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000167",
                "name": "head",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "head",
        "longname": "module.exports.head",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                748,
                779
            ],
            "filename": "array.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000171",
                "name": "indexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "indexOf",
        "longname": "module.exports.indexOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                783,
                814
            ],
            "filename": "array.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000175",
                "name": "initial",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "initial",
        "longname": "module.exports.initial",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                818,
                859
            ],
            "filename": "array.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000179",
                "name": "intersection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "intersection",
        "longname": "module.exports.intersection",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                863,
                908
            ],
            "filename": "array.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000183",
                "name": "intersectionBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "intersectionBy",
        "longname": "module.exports.intersectionBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                912,
                961
            ],
            "filename": "array.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000187",
                "name": "intersectionWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "intersectionWith",
        "longname": "module.exports.intersectionWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                965,
                990
            ],
            "filename": "array.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000191",
                "name": "join",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "join",
        "longname": "module.exports.join",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                994,
                1019
            ],
            "filename": "array.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000195",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "module.exports.last",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1023,
                1062
            ],
            "filename": "array.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000199",
                "name": "lastIndexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lastIndexOf",
        "longname": "module.exports.lastIndexOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1066,
                1089
            ],
            "filename": "array.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000203",
                "name": "nth",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nth",
        "longname": "module.exports.nth",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1093,
                1118
            ],
            "filename": "array.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000207",
                "name": "pull",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pull",
        "longname": "module.exports.pull",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1122,
                1153
            ],
            "filename": "array.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000211",
                "name": "pullAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pullAll",
        "longname": "module.exports.pullAll",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1157,
                1192
            ],
            "filename": "array.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000215",
                "name": "pullAllBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pullAllBy",
        "longname": "module.exports.pullAllBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1196,
                1235
            ],
            "filename": "array.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000219",
                "name": "pullAllWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pullAllWith",
        "longname": "module.exports.pullAllWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1239,
                1268
            ],
            "filename": "array.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000223",
                "name": "pullAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pullAt",
        "longname": "module.exports.pullAt",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1272,
                1301
            ],
            "filename": "array.js",
            "lineno": 35,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000227",
                "name": "remove",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "remove",
        "longname": "module.exports.remove",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1305,
                1336
            ],
            "filename": "array.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000231",
                "name": "reverse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reverse",
        "longname": "module.exports.reverse",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1340,
                1367
            ],
            "filename": "array.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000235",
                "name": "slice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "slice",
        "longname": "module.exports.slice",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1371,
                1410
            ],
            "filename": "array.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000239",
                "name": "sortedIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedIndex",
        "longname": "module.exports.sortedIndex",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1414,
                1457
            ],
            "filename": "array.js",
            "lineno": 39,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000243",
                "name": "sortedIndexBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedIndexBy",
        "longname": "module.exports.sortedIndexBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1461,
                1504
            ],
            "filename": "array.js",
            "lineno": 40,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000247",
                "name": "sortedIndexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedIndexOf",
        "longname": "module.exports.sortedIndexOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1508,
                1555
            ],
            "filename": "array.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000251",
                "name": "sortedLastIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedLastIndex",
        "longname": "module.exports.sortedLastIndex",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1559,
                1610
            ],
            "filename": "array.js",
            "lineno": 42,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000255",
                "name": "sortedLastIndexBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedLastIndexBy",
        "longname": "module.exports.sortedLastIndexBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1614,
                1665
            ],
            "filename": "array.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000259",
                "name": "sortedLastIndexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedLastIndexOf",
        "longname": "module.exports.sortedLastIndexOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1669,
                1706
            ],
            "filename": "array.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000263",
                "name": "sortedUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedUniq",
        "longname": "module.exports.sortedUniq",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1710,
                1751
            ],
            "filename": "array.js",
            "lineno": 45,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000267",
                "name": "sortedUniqBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortedUniqBy",
        "longname": "module.exports.sortedUniqBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1755,
                1780
            ],
            "filename": "array.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000271",
                "name": "tail",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tail",
        "longname": "module.exports.tail",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1784,
                1809
            ],
            "filename": "array.js",
            "lineno": 47,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000275",
                "name": "take",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "take",
        "longname": "module.exports.take",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1813,
                1848
            ],
            "filename": "array.js",
            "lineno": 48,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000279",
                "name": "takeRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "takeRight",
        "longname": "module.exports.takeRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1852,
                1897
            ],
            "filename": "array.js",
            "lineno": 49,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000283",
                "name": "takeRightWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "takeRightWhile",
        "longname": "module.exports.takeRightWhile",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1901,
                1936
            ],
            "filename": "array.js",
            "lineno": 50,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000287",
                "name": "takeWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "takeWhile",
        "longname": "module.exports.takeWhile",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1940,
                1967
            ],
            "filename": "array.js",
            "lineno": 51,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000291",
                "name": "union",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "union",
        "longname": "module.exports.union",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1971,
                2002
            ],
            "filename": "array.js",
            "lineno": 52,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000295",
                "name": "unionBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unionBy",
        "longname": "module.exports.unionBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2006,
                2041
            ],
            "filename": "array.js",
            "lineno": 53,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000299",
                "name": "unionWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unionWith",
        "longname": "module.exports.unionWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2045,
                2070
            ],
            "filename": "array.js",
            "lineno": 54,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000303",
                "name": "uniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "uniq",
        "longname": "module.exports.uniq",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2074,
                2103
            ],
            "filename": "array.js",
            "lineno": 55,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000307",
                "name": "uniqBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "uniqBy",
        "longname": "module.exports.uniqBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2107,
                2140
            ],
            "filename": "array.js",
            "lineno": 56,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000311",
                "name": "uniqWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "uniqWith",
        "longname": "module.exports.uniqWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2144,
                2171
            ],
            "filename": "array.js",
            "lineno": 57,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000315",
                "name": "unzip",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unzip",
        "longname": "module.exports.unzip",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2175,
                2210
            ],
            "filename": "array.js",
            "lineno": 58,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000319",
                "name": "unzipWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unzipWith",
        "longname": "module.exports.unzipWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2214,
                2245
            ],
            "filename": "array.js",
            "lineno": 59,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000323",
                "name": "without",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "without",
        "longname": "module.exports.without",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2249,
                2272
            ],
            "filename": "array.js",
            "lineno": 60,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000327",
                "name": "xor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "xor",
        "longname": "module.exports.xor",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2276,
                2303
            ],
            "filename": "array.js",
            "lineno": 61,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000331",
                "name": "xorBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "xorBy",
        "longname": "module.exports.xorBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2307,
                2338
            ],
            "filename": "array.js",
            "lineno": 62,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000335",
                "name": "xorWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "xorWith",
        "longname": "module.exports.xorWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2342,
                2365
            ],
            "filename": "array.js",
            "lineno": 63,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000339",
                "name": "zip",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "zip",
        "longname": "module.exports.zip",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2369,
                2404
            ],
            "filename": "array.js",
            "lineno": 64,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000343",
                "name": "zipObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "zipObject",
        "longname": "module.exports.zipObject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2408,
                2451
            ],
            "filename": "array.js",
            "lineno": 65,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000347",
                "name": "zipObjectDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "zipObjectDeep",
        "longname": "module.exports.zipObjectDeep",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2455,
                2486
            ],
            "filename": "array.js",
            "lineno": 66,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000351",
                "name": "zipWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "zipWith",
        "longname": "module.exports.zipWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "ary.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000358",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                127,
                146
            ],
            "filename": "ary.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000366",
                "name": "WRAP_ARY_FLAG",
                "type": "Literal",
                "value": 128
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_ARY_FLAG",
        "longname": "WRAP_ARY_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func`, with up to `n` arguments,\n * ignoring any additional arguments.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */",
        "meta": {
            "range": [
                662,
                857
            ],
            "filename": "ary.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000369",
                "name": "ary",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "n": "_.ary~n"
            }
        },
        "description": "Creates a function that invokes `func`, with up to `n` arguments,\nignoring any additional arguments.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to cap arguments for.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "func.length",
                "description": "The arity cap.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new capped function."
            }
        ],
        "examples": [
            "_.map(['6', '8', '10'], _.ary(parseInt, 1));\n// => [6, 8, 10]"
        ],
        "name": "ary",
        "longname": "_.ary",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                695,
                720
            ],
            "filename": "ary.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000376",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "_.ary",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.ary~n",
        "kind": "member",
        "memberof": "_.ary",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                724,
                765
            ],
            "filename": "ary.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000383",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "_.ary",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.ary~n",
        "kind": "member",
        "memberof": "_.ary",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                859,
                879
            ],
            "filename": "ary.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000406",
                "name": "module.exports",
                "type": "Identifier",
                "value": "ary",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "assign.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000414",
                "name": "assignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignValue",
        "longname": "assignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                102
            ],
            "filename": "assign.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000419",
                "name": "copyObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyObject",
        "longname": "copyObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                160
            ],
            "filename": "assign.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000424",
                "name": "createAssigner",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAssigner",
        "longname": "createAssigner",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                164,
                202
            ],
            "filename": "assign.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000429",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                206,
                254
            ],
            "filename": "assign.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000434",
                "name": "isPrototype",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isPrototype",
        "longname": "isPrototype",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                258,
                282
            ],
            "filename": "assign.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000439",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                348,
                378
            ],
            "filename": "assign.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000447",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                434,
                477
            ],
            "filename": "assign.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000453",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */",
        "meta": {
            "range": [
                1285,
                1579
            ],
            "filename": "assign.js",
            "lineno": 48,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000459",
                "name": "assign",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Assigns own enumerable string keyed properties of source objects to the\ndestination object. Source objects are applied from left to right.\nSubsequent sources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object` and is loosely based on\n[`Object.assign`](https://mdn.io/Object/assign).",
        "scope": "static",
        "memberof": "_",
        "since": "0.10.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.assignIn"
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assign({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'c': 3 }"
        ],
        "name": "assign",
        "longname": "_.assign",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1461,
                1464
            ],
            "filename": "assign.js",
            "lineno": 53,
            "columnno": 11,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000487",
                "name": "key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1582,
                1605
            ],
            "filename": "assign.js",
            "lineno": 60,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000508",
                "name": "module.exports",
                "type": "Identifier",
                "value": "assign",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "assignIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000516",
                "name": "copyObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyObject",
        "longname": "copyObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "assignIn.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000521",
                "name": "createAssigner",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAssigner",
        "longname": "createAssigner",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                140
            ],
            "filename": "assignIn.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000526",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */",
        "meta": {
            "range": [
                804,
                905
            ],
            "filename": "assignIn.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000534",
                "name": "assignIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.assign` except that it iterates over own and\ninherited source properties.\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "alias": "extend",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.assign"
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assignIn({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }"
        ],
        "name": "extend",
        "longname": "_.extend",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                908,
                933
            ],
            "filename": "assignIn.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000551",
                "name": "module.exports",
                "type": "Identifier",
                "value": "assignIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "assignInWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000559",
                "name": "copyObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyObject",
        "longname": "copyObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "assignInWith.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000564",
                "name": "createAssigner",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAssigner",
        "longname": "createAssigner",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                140
            ],
            "filename": "assignInWith.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000569",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */",
        "meta": {
            "range": [
                1112,
                1251
            ],
            "filename": "assignInWith.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000577",
                "name": "assignInWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.assignIn` except that it accepts `customizer`\nwhich is invoked to produce the assigned values. If `customizer` returns\n`undefined`, assignment is handled by the method instead. The `customizer`\nis invoked with five arguments: (objValue, srcValue, key, object, source).\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "alias": "extendWith",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize assigned values.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.assignWith"
        ],
        "examples": [
            "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n\nvar defaults = _.partialRight(_.assignInWith, customizer);\n\ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }"
        ],
        "name": "extendWith",
        "longname": "_.extendWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1254,
                1283
            ],
            "filename": "assignInWith.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000597",
                "name": "module.exports",
                "type": "Identifier",
                "value": "assignInWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "assignWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000605",
                "name": "copyObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyObject",
        "longname": "copyObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "assignWith.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000610",
                "name": "createAssigner",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAssigner",
        "longname": "createAssigner",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                136
            ],
            "filename": "assignWith.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000615",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.assign` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignInWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */",
        "meta": {
            "range": [
                1085,
                1220
            ],
            "filename": "assignWith.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000623",
                "name": "assignWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.assign` except that it accepts `customizer`\nwhich is invoked to produce the assigned values. If `customizer` returns\n`undefined`, assignment is handled by the method instead. The `customizer`\nis invoked with five arguments: (objValue, srcValue, key, object, source).\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize assigned values.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.assignInWith"
        ],
        "examples": [
            "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n\nvar defaults = _.partialRight(_.assignWith, customizer);\n\ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }"
        ],
        "name": "assignWith",
        "longname": "_.assignWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1223,
                1250
            ],
            "filename": "assignWith.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000643",
                "name": "module.exports",
                "type": "Identifier",
                "value": "assignWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "at.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000651",
                "name": "baseAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAt",
        "longname": "baseAt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                88
            ],
            "filename": "at.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000656",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of values corresponding to `paths` of `object`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Array} Returns the picked values.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _.at(object, ['a[0].b.c', 'a[1]']);\n * // => [3, 4]\n */",
        "meta": {
            "range": [
                545,
                566
            ],
            "filename": "at.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000664",
                "name": "at",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of values corresponding to `paths` of `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "1.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "string",
                        "Array.<string>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The property paths to pick.",
                "name": "paths"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the picked values."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\n_.at(object, ['a[0].b.c', 'a[1]']);\n// => [3, 4]"
        ],
        "name": "at",
        "longname": "_.at",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                569,
                588
            ],
            "filename": "at.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000670",
                "name": "module.exports",
                "type": "Identifier",
                "value": "at",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "attempt.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000678",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44,
                86
            ],
            "filename": "attempt.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000683",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                90,
                120
            ],
            "filename": "attempt.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000688",
                "name": "isError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isError",
        "longname": "isError",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {function} function The function to attempt.\n * @param {function_arguments} [function_arguments] The arguments to invoke a function with.\n * @author function_result\n * @returns {result_or_error} A function's result.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */",
        "meta": {
            "range": [
                831,
                986
            ],
            "filename": "attempt.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000696",
                "name": "attempt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Attempts to invoke `func`, returning either the result or the caught error\nobject. Any additional arguments are provided to `func` when it's invoked.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to attempt.",
                "name": "function"
            },
            {
                "type": {
                    "names": [
                        "function_arguments"
                    ]
                },
                "optional": true,
                "description": "The arguments to invoke a function with.",
                "name": "function_arguments"
            }
        ],
        "author": [
            "function_result"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "result_or_error"
                    ]
                },
                "description": "A function's result."
            }
        ],
        "examples": [
            "// Avoid throwing errors for invalid selectors.\nvar elements = _.attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '>_>');\n\nif (_.isError(elements)) {\n  elements = [];\n}"
        ],
        "name": "attempt",
        "longname": "_.attempt",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                989,
                1013
            ],
            "filename": "attempt.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000723",
                "name": "module.exports",
                "type": "Identifier",
                "value": "attempt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "before.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000731",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                92,
                131
            ],
            "filename": "before.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000739",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `function`, with the `this` binding and arguments\n * of the created function, while it's called less than `calls_after` times. Subsequent\n * calls to the created function return the result of the last `function` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} calls_after The number of calls before something stop happening..\n * @param {function_to_restrict} function A javascript function.\n * @author function\n * @returns {restricted_function} A restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */",
        "meta": {
            "range": [
                826,
                1132
            ],
            "filename": "before.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000742",
                "name": "before",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "n",
                    "func"
                ]
            },
            "vars": {
                "result": "_.before~result",
                "n": "_.before~n",
                "": null
            }
        },
        "description": "Creates a function that invokes `function`, with the `this` binding and arguments\nof the created function, while it's called less than `calls_after` times. Subsequent\ncalls to the created function return the result of the last `function` invocation.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of calls before something stop happening..",
                "name": "calls_after"
            },
            {
                "type": {
                    "names": [
                        "function_to_restrict"
                    ]
                },
                "description": "A javascript function.",
                "name": "function"
            }
        ],
        "author": [
            "function"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "restricted_function"
                    ]
                },
                "description": "A restricted function."
            }
        ],
        "examples": [
            "jQuery(element).on('click', _.before(5, addContactToList));\n// => Allows adding up to 4 contacts to the list."
        ],
        "name": "before",
        "longname": "_.before",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                859,
                865
            ],
            "filename": "before.js",
            "lineno": 27,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000748",
                "name": "result"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.before~result",
        "kind": "member",
        "memberof": "_.before",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                950,
                966
            ],
            "filename": "before.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000761",
                "name": "n",
                "type": "CallExpression",
                "funcscope": "_.before",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.before~n",
        "kind": "member",
        "memberof": "_.before",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1015,
                1051
            ],
            "filename": "before.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000776",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1083,
                1099
            ],
            "filename": "before.js",
            "lineno": 37,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000790",
                "name": "func",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "<anonymous>~func",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1134,
                1157
            ],
            "filename": "before.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000796",
                "name": "module.exports",
                "type": "Identifier",
                "value": "before",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "bind.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000804",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                96
            ],
            "filename": "bind.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000809",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                100,
                144
            ],
            "filename": "bind.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000814",
                "name": "getHolder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getHolder",
        "longname": "getHolder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                148,
                202
            ],
            "filename": "bind.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000819",
                "name": "replaceHolders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replaceHolders",
        "longname": "replaceHolders",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                279,
                297
            ],
            "filename": "bind.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000827",
                "name": "WRAP_BIND_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_BIND_FLAG",
        "longname": "WRAP_BIND_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                301,
                323
            ],
            "filename": "bind.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000830",
                "name": "WRAP_PARTIAL_FLAG",
                "type": "Literal",
                "value": 32
            }
        },
        "undocumented": true,
        "name": "WRAP_PARTIAL_FLAG",
        "longname": "WRAP_PARTIAL_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */",
        "meta": {
            "range": [
                1381,
                1655
            ],
            "filename": "bind.js",
            "lineno": 47,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000834",
                "name": "bind",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes `func` with the `this` binding of `thisArg`\nand `partials` prepended to the arguments it receives.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\nproperty of bound functions.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to bind.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The `this` binding of `func`.",
                "name": "thisArg"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to be partially applied.",
                "name": "partials"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new bound function."
            }
        ],
        "examples": [
            "function greet(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n}\n\nvar object = { 'user': 'fred' };\n\nvar bound = _.bind(greet, object, 'hi');\nbound('!');\n// => 'hi fred!'\n\n// Bound with placeholders.\nvar bound = _.bind(greet, object, _, '!');\nbound('hi');\n// => 'hi fred!'"
        ],
        "name": "bind",
        "longname": "_.bind",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1439,
                1463
            ],
            "filename": "bind.js",
            "lineno": 48,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000844",
                "name": "bitmask",
                "type": "Identifier",
                "value": "WRAP_BIND_FLAG"
            }
        },
        "undocumented": true,
        "name": "bitmask",
        "longname": "<anonymous>~bitmask",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1498,
                1549
            ],
            "filename": "bind.js",
            "lineno": 50,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000853",
                "name": "holders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "holders",
        "longname": "<anonymous>~holders",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1555,
                1583
            ],
            "filename": "bind.js",
            "lineno": 51,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000862",
                "name": "bitmask",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "WRAP_PARTIAL_FLAG",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bitmask",
        "longname": "<anonymous>~bitmask",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1690,
                1711
            ],
            "filename": "bind.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000874",
                "name": "bind.placeholder",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.bind.placeholder",
        "kind": "member",
        "memberof": "_.bind",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1714,
                1735
            ],
            "filename": "bind.js",
            "lineno": 59,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000880",
                "name": "module.exports",
                "type": "Identifier",
                "value": "bind",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "bindAll.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000888",
                "name": "arrayEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEach",
        "longname": "arrayEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                108
            ],
            "filename": "bindAll.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000893",
                "name": "baseAssignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssignValue",
        "longname": "baseAssignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                136
            ],
            "filename": "bindAll.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000898",
                "name": "bind",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bind",
        "longname": "bind",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                182
            ],
            "filename": "bindAll.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000903",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                186,
                222
            ],
            "filename": "bindAll.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000908",
                "name": "toKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toKey",
        "longname": "toKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method.\n *\n * **Note:** This method doesn't set the \"length\" property of bound functions.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} methodNames The object method names to bind.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'click': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view, ['click']);\n * jQuery(element).on('click', view.click);\n * // => Logs 'clicked docs' when clicked.\n */",
        "meta": {
            "range": [
                939,
                1139
            ],
            "filename": "bindAll.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000916",
                "name": "bindAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Binds methods of an object to the object itself, overwriting the existing\nmethod.\n\n**Note:** This method doesn't set the \"length\" property of bound functions.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to bind and assign the bound methods to.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "string",
                        "Array.<string>"
                    ]
                },
                "variable": true,
                "description": "The object method names to bind.",
                "name": "methodNames"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "var view = {\n  'label': 'docs',\n  'click': function() {\n    console.log('clicked ' + this.label);\n  }\n};\n\n_.bindAll(view, ['click']);\njQuery(element).on('click', view.click);\n// => Logs 'clicked docs' when clicked."
        ],
        "name": "bindAll",
        "longname": "_.bindAll",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1035,
                1051
            ],
            "filename": "bindAll.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000932",
                "name": "key",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1142,
                1166
            ],
            "filename": "bindAll.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000951",
                "name": "module.exports",
                "type": "Identifier",
                "value": "bindAll",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "bindKey.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000959",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                96
            ],
            "filename": "bindKey.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000964",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                100,
                144
            ],
            "filename": "bindKey.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000969",
                "name": "getHolder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getHolder",
        "longname": "getHolder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                148,
                202
            ],
            "filename": "bindKey.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000974",
                "name": "replaceHolders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replaceHolders",
        "longname": "replaceHolders",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                279,
                297
            ],
            "filename": "bindKey.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000982",
                "name": "WRAP_BIND_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_BIND_FLAG",
        "longname": "WRAP_BIND_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                301,
                323
            ],
            "filename": "bindKey.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000985",
                "name": "WRAP_BIND_KEY_FLAG",
                "type": "Literal",
                "value": 2
            }
        },
        "undocumented": true,
        "name": "WRAP_BIND_KEY_FLAG",
        "longname": "WRAP_BIND_KEY_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                327,
                349
            ],
            "filename": "bindKey.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000988",
                "name": "WRAP_PARTIAL_FLAG",
                "type": "Literal",
                "value": 32
            }
        },
        "undocumented": true,
        "name": "WRAP_PARTIAL_FLAG",
        "longname": "WRAP_PARTIAL_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes the method at `object[key]` with `partials`\n * prepended to the arguments it receives.\n *\n * This method differs from `_.bind` by allowing bound functions to reference\n * methods that may be redefined or don't yet exist. See\n * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n * for more details.\n *\n * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Function\n * @param {Object} object The object to invoke the method on.\n * @param {string} key The key of the method.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var object = {\n *   'user': 'fred',\n *   'greet': function(greeting, punctuation) {\n *     return greeting + ' ' + this.user + punctuation;\n *   }\n * };\n *\n * var bound = _.bindKey(object, 'greet', 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * object.greet = function(greeting, punctuation) {\n *   return greeting + 'ya ' + this.user + punctuation;\n * };\n *\n * bound('!');\n * // => 'hiya fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bindKey(object, 'greet', _, '!');\n * bound('hi');\n * // => 'hiya fred!'\n */",
        "meta": {
            "range": [
                1727,
                2024
            ],
            "filename": "bindKey.js",
            "lineno": 58,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100000992",
                "name": "bindKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes the method at `object[key]` with `partials`\nprepended to the arguments it receives.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist. See\n[Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
        "scope": "static",
        "memberof": "_",
        "since": "0.10.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to invoke the method on.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The key of the method.",
                "name": "key"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to be partially applied.",
                "name": "partials"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new bound function."
            }
        ],
        "examples": [
            "var object = {\n  'user': 'fred',\n  'greet': function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\n\nvar bound = _.bindKey(object, 'greet', 'hi');\nbound('!');\n// => 'hi fred!'\n\nobject.greet = function(greeting, punctuation) {\n  return greeting + 'ya ' + this.user + punctuation;\n};\n\nbound('!');\n// => 'hiya fred!'\n\n// Bound with placeholders.\nvar bound = _.bindKey(object, 'greet', _, '!');\nbound('hi');\n// => 'hiya fred!'"
        ],
        "name": "bindKey",
        "longname": "_.bindKey",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1786,
                1831
            ],
            "filename": "bindKey.js",
            "lineno": 59,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001002",
                "name": "bitmask",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bitmask",
        "longname": "<anonymous>~bitmask",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1866,
                1920
            ],
            "filename": "bindKey.js",
            "lineno": 61,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001013",
                "name": "holders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "holders",
        "longname": "<anonymous>~holders",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1926,
                1954
            ],
            "filename": "bindKey.js",
            "lineno": 62,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001022",
                "name": "bitmask",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "WRAP_PARTIAL_FLAG",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bitmask",
        "longname": "<anonymous>~bitmask",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2059,
                2083
            ],
            "filename": "bindKey.js",
            "lineno": 68,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001034",
                "name": "bindKey.placeholder",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.bindKey.placeholder",
        "kind": "member",
        "memberof": "_.bindKey",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2086,
                2110
            ],
            "filename": "bindKey.js",
            "lineno": 70,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001040",
                "name": "module.exports",
                "type": "Identifier",
                "value": "bindKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "camelCase.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001048",
                "name": "capitalize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "capitalize",
        "longname": "capitalize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44,
                102
            ],
            "filename": "camelCase.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001053",
                "name": "createCompounder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCompounder",
        "longname": "createCompounder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} string  A sequence of characters.\n * @author string\n * @returns {camel_cased} A camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */",
        "meta": {
            "range": [
                559,
                704
            ],
            "filename": "camelCase.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001061",
                "name": "camelCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A sequence of characters.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "camel_cased"
                    ]
                },
                "description": "A camel cased string."
            }
        ],
        "examples": [
            "_.camelCase('Foo Bar');\n// => 'fooBar'\n\n_.camelCase('--foo-bar--');\n// => 'fooBar'\n\n_.camelCase('__FOO_BAR__');\n// => 'fooBar'"
        ],
        "name": "camelCase",
        "longname": "_.camelCase",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                622,
                647
            ],
            "filename": "camelCase.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001071",
                "name": "word",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "word",
        "longname": "<anonymous>~word",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                707,
                733
            ],
            "filename": "camelCase.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001087",
                "name": "module.exports",
                "type": "Identifier",
                "value": "camelCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} string The string to capitalize.\n * @author string\n * @returns {capitalized} A capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */",
        "meta": {
            "range": [
                356,
                554
            ],
            "filename": "capitalize.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001096",
                "name": "capitalize",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            },
            "vars": {
                "str": "_.capitalize~str",
                "i": "_.capitalize~i",
                "str[undefined]": "_.capitalize~str.undefined]"
            }
        },
        "description": "Converts the first character of `string` to upper case and the remaining\nto lower case.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to capitalize.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "capitalized"
                    ]
                },
                "description": "A capitalized string."
            }
        ],
        "examples": [
            "_.capitalize('FRED');\n// => 'Fred'"
        ],
        "name": "capitalize",
        "longname": "_.capitalize",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                385,
                419
            ],
            "filename": "capitalize.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001101",
                "name": "str",
                "type": "CallExpression",
                "funcscope": "_.capitalize",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "str",
        "longname": "_.capitalize~str",
        "kind": "member",
        "memberof": "_.capitalize",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                432,
                437
            ],
            "filename": "capitalize.js",
            "lineno": 21,
            "columnno": 11,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001113",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "_.capitalize~i",
        "kind": "member",
        "memberof": "_.capitalize",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                466,
                523
            ],
            "filename": "capitalize.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001125",
                "name": "str[undefined]",
                "type": "BinaryExpression",
                "funcscope": "_.capitalize",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "_.capitalize~str.undefined]",
        "kind": "member",
        "memberof": "_.capitalize~str",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                556,
                583
            ],
            "filename": "capitalize.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001154",
                "name": "module.exports",
                "type": "Identifier",
                "value": "capitalize",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                34
            ],
            "filename": "castArray.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001162",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */",
        "meta": {
            "range": [
                612,
                753
            ],
            "filename": "castArray.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001169",
                "name": "castArray",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "value": "_.castArray~value"
            }
        },
        "description": "Casts `value` as an array if it's not one.",
        "scope": "static",
        "memberof": "_",
        "since": "4.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to inspect.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the cast array."
            }
        ],
        "examples": [
            "_.castArray(1);\n// => [1]\n\n_.castArray({ 'a': 1 });\n// => [{ 'a': 1 }]\n\n_.castArray('abc');\n// => ['abc']\n\n_.castArray(null);\n// => [null]\n\n_.castArray(undefined);\n// => [undefined]\n\n_.castArray();\n// => []\n\nvar array = [1, 2, 3];\nconsole.log(_.castArray(array) === array);\n// => true"
        ],
        "name": "castArray",
        "longname": "_.castArray",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                687,
                707
            ],
            "filename": "castArray.js",
            "lineno": 42,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001181",
                "name": "value",
                "type": "MemberExpression",
                "value": "arguments[0]"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.castArray~value",
        "kind": "member",
        "memberof": "_.castArray",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                755,
                781
            ],
            "filename": "castArray.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001195",
                "name": "module.exports",
                "type": "Identifier",
                "value": "castArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "ceil.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001203",
                "name": "createRound",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRound",
        "longname": "createRound",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes `number` rounded up to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number  A mathematical object used to count, measure, and label.\n * @param {number} precision A precision to round to.\n * @author round_number\n * @returns {up} A rounded number.\n * @example\n *\n * _.ceil(4.006);\n * // => 5\n *\n * _.ceil(6.004, 2);\n * // => 6.01\n *\n * _.ceil(6040, -2);\n * // => 6100\n */",
        "meta": {
            "range": [
                511,
                537
            ],
            "filename": "ceil.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001211",
                "name": "ceil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Computes `number` rounded up to `precision`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.10.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "A mathematical object used to count, measure, and label.",
                "name": "number"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "A precision to round to.",
                "name": "precision"
            }
        ],
        "author": [
            "round_number"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "up"
                    ]
                },
                "description": "A rounded number."
            }
        ],
        "examples": [
            "_.ceil(4.006);\n// => 5\n\n_.ceil(6.004, 2);\n// => 6.01\n\n_.ceil(6040, -2);\n// => 6100"
        ],
        "name": "ceil",
        "longname": "_.ceil",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                540,
                561
            ],
            "filename": "ceil.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001217",
                "name": "module.exports",
                "type": "Identifier",
                "value": "ceil",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                39
            ],
            "filename": "chain.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001225",
                "name": "lodash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lodash",
        "longname": "lodash",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n * chain sequences enabled. The result of such sequences must be unwrapped\n * with `_#value`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Seq\n * @param {*} value The value to wrap.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36 },\n *   { 'user': 'fred',    'age': 40 },\n *   { 'user': 'pebbles', 'age': 1 }\n * ];\n *\n * var youngest = _\n *   .chain(users)\n *   .sortBy('age')\n *   .map(function(o) {\n *     return o.user + ' is ' + o.age;\n *   })\n *   .head()\n *   .value();\n * // => 'pebbles is 1'\n */",
        "meta": {
            "range": [
                741,
                840
            ],
            "filename": "chain.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001232",
                "name": "chain",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "result": "_.chain~result",
                "result.__chain__": "_.chain~result.__chain__"
            }
        },
        "description": "Creates a `lodash` wrapper instance that wraps `value` with explicit method\nchain sequences enabled. The result of such sequences must be unwrapped\nwith `_#value`.",
        "scope": "static",
        "memberof": "_",
        "since": "1.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to wrap.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'age': 36 },\n  { 'user': 'fred',    'age': 40 },\n  { 'user': 'pebbles', 'age': 1 }\n];\n\nvar youngest = _\n  .chain(users)\n  .sortBy('age')\n  .map(function(o) {\n    return o.user + ' is ' + o.age;\n  })\n  .head()\n  .value();\n// => 'pebbles is 1'"
        ],
        "name": "chain",
        "longname": "_.chain",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                771,
                793
            ],
            "filename": "chain.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001237",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.chain~result",
        "kind": "member",
        "memberof": "_.chain",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                797,
                820
            ],
            "filename": "chain.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001243",
                "name": "result.__chain__",
                "type": "Literal",
                "funcscope": "_.chain",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__chain__",
        "longname": "_.chain~result.__chain__",
        "kind": "member",
        "memberof": "_.chain~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                842,
                864
            ],
            "filename": "chain.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001251",
                "name": "module.exports",
                "type": "Identifier",
                "value": "chain",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "chunk.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001259",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "chunk.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001264",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                148
            ],
            "filename": "chunk.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001269",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                259,
                281
            ],
            "filename": "chunk.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001277",
                "name": "nativeCeil",
                "type": "MemberExpression",
                "value": "Math.ceil"
            }
        },
        "undocumented": true,
        "name": "nativeCeil",
        "longname": "nativeCeil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                287,
                307
            ],
            "filename": "chunk.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001282",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {array} array Arrays are list-like objects whose prototype has methods to perform traversal and mutation operations.\n * @param {number} chunk A piece of something.\n * @author array\n * @returns {array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */",
        "meta": {
            "range": [
                946,
                1429
            ],
            "filename": "chunk.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001287",
                "name": "chunk",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "size",
                    "guard"
                ]
            },
            "vars": {
                "size": "_.chunk~size",
                "length": "_.chunk~length",
                "index": "_.chunk~result.undefined].index",
                "resIndex": "_.chunk~resIndex",
                "result": "_.chunk~result",
                "result[undefined]": "_.chunk~result.undefined]"
            }
        },
        "description": "Creates an array of elements split into groups the length of `size`.\nIf `array` can't be split evenly, the final chunk will be the remaining\nelements.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Arrays are list-like objects whose prototype has methods to perform traversal and mutation operations.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "A piece of something.",
                "name": "chunk"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the new array of chunks."
            }
        ],
        "examples": [
            "_.chunk(['a', 'b', 'c', 'd'], 2);\n// => [['a', 'b'], ['c', 'd']]\n\n_.chunk(['a', 'b', 'c', 'd'], 3);\n// => [['a', 'b', 'c'], ['d']]"
        ],
        "name": "chunk",
        "longname": "_.chunk",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1062,
                1070
            ],
            "filename": "chunk.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001306",
                "name": "size",
                "type": "Literal",
                "funcscope": "_.chunk",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "_.chunk~size",
        "kind": "member",
        "memberof": "_.chunk",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1087,
                1123
            ],
            "filename": "chunk.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001311",
                "name": "size",
                "type": "CallExpression",
                "funcscope": "_.chunk",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "_.chunk~size",
        "kind": "member",
        "memberof": "_.chunk",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1135,
                1176
            ],
            "filename": "chunk.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001320",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.chunk~length",
        "kind": "member",
        "memberof": "_.chunk",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1232,
                1241
            ],
            "filename": "chunk.js",
            "lineno": 42,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001341",
                "name": "index",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.chunk~index",
        "kind": "member",
        "memberof": "_.chunk",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1249,
                1261
            ],
            "filename": "chunk.js",
            "lineno": 43,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001344",
                "name": "resIndex",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "resIndex",
        "longname": "_.chunk~resIndex",
        "kind": "member",
        "memberof": "_.chunk",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1269,
                1310
            ],
            "filename": "chunk.js",
            "lineno": 44,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001347",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.chunk~result",
        "kind": "member",
        "memberof": "_.chunk",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1344,
                1405
            ],
            "filename": "chunk.js",
            "lineno": 47,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001362",
                "name": "result[undefined]",
                "type": "CallExpression",
                "funcscope": "_.chunk",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "_.chunk~result.undefined]",
        "kind": "member",
        "memberof": "_.chunk~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1390,
                1403
            ],
            "filename": "chunk.js",
            "lineno": 47,
            "columnno": 50,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001371",
                "name": "index",
                "type": "Identifier",
                "funcscope": "_.chunk",
                "value": "size",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.chunk~result.undefined].index",
        "kind": "member",
        "memberof": "_.chunk~result.undefined]",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1431,
                1453
            ],
            "filename": "chunk.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001377",
                "name": "module.exports",
                "type": "Identifier",
                "value": "chunk",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "clamp.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001385",
                "name": "baseClamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClamp",
        "longname": "baseClamp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                86
            ],
            "filename": "clamp.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001390",
                "name": "toNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "toNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @author number\n * @returns {clamped} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */",
        "meta": {
            "range": [
                532,
                905
            ],
            "filename": "clamp.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001397",
                "name": "clamp",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "number",
                    "lower",
                    "upper"
                ]
            },
            "vars": {
                "upper": "_.clamp~upper",
                "lower": "_.clamp~lower"
            }
        },
        "description": "Clamps `number` within the inclusive `lower` and `upper` bounds.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Number",
                "value": "Number"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to clamp.",
                "name": "number"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The lower bound.",
                "name": "lower"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The upper bound.",
                "name": "upper"
            }
        ],
        "author": [
            "number"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "clamped"
                    ]
                },
                "description": "Returns the clamped number."
            }
        ],
        "examples": [
            "_.clamp(-10, -5, 5);\n// => -5\n\n_.clamp(10, -5, 5);\n// => 5"
        ],
        "name": "clamp",
        "longname": "_.clamp",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                604,
                617
            ],
            "filename": "clamp.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001409",
                "name": "upper",
                "type": "Identifier",
                "funcscope": "_.clamp",
                "value": "lower",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.clamp~upper",
        "kind": "member",
        "memberof": "_.clamp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                623,
                640
            ],
            "filename": "clamp.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001413",
                "name": "lower",
                "type": "Identifier",
                "funcscope": "_.clamp",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.clamp~lower",
        "kind": "member",
        "memberof": "_.clamp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                679,
                702
            ],
            "filename": "clamp.js",
            "lineno": 32,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001422",
                "name": "upper",
                "type": "CallExpression",
                "funcscope": "_.clamp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.clamp~upper",
        "kind": "member",
        "memberof": "_.clamp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                708,
                743
            ],
            "filename": "clamp.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001428",
                "name": "upper",
                "type": "ConditionalExpression",
                "funcscope": "_.clamp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.clamp~upper",
        "kind": "member",
        "memberof": "_.clamp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                782,
                805
            ],
            "filename": "clamp.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001442",
                "name": "lower",
                "type": "CallExpression",
                "funcscope": "_.clamp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.clamp~lower",
        "kind": "member",
        "memberof": "_.clamp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                811,
                846
            ],
            "filename": "clamp.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001448",
                "name": "lower",
                "type": "ConditionalExpression",
                "funcscope": "_.clamp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.clamp~lower",
        "kind": "member",
        "memberof": "_.clamp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                907,
                929
            ],
            "filename": "clamp.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001465",
                "name": "module.exports",
                "type": "Identifier",
                "value": "clamp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "clone.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001473",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                115,
                137
            ],
            "filename": "clone.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001481",
                "name": "CLONE_SYMBOLS_FLAG",
                "type": "Literal",
                "value": 4
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_SYMBOLS_FLAG",
        "longname": "CLONE_SYMBOLS_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */",
        "meta": {
            "range": [
                991,
                1063
            ],
            "filename": "clone.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001484",
                "name": "clone",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Creates a shallow clone of `value`.\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\nand supports cloning arrays, array buffers, booleans, date objects, maps,\nnumbers, `Object` objects, regexes, sets, strings, symbols, and typed\narrays. The own enumerable properties of `arguments` objects are cloned\nas plain objects. An empty object is returned for uncloneable values such\nas error objects, functions, DOM nodes, and WeakMaps.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to clone.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the cloned value."
            }
        ],
        "see": [
            "_.cloneDeep"
        ],
        "examples": [
            "var objects = [{ 'a': 1 }, { 'b': 2 }];\n\nvar shallow = _.clone(objects);\nconsole.log(shallow[0] === objects[0]);\n// => true"
        ],
        "name": "clone",
        "longname": "_.clone",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1065,
                1087
            ],
            "filename": "clone.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001494",
                "name": "module.exports",
                "type": "Identifier",
                "value": "clone",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "cloneDeep.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001502",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                115,
                134
            ],
            "filename": "cloneDeep.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001510",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                162
            ],
            "filename": "cloneDeep.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001513",
                "name": "CLONE_SYMBOLS_FLAG",
                "type": "Literal",
                "value": 4
            }
        },
        "undocumented": true,
        "name": "CLONE_SYMBOLS_FLAG",
        "longname": "CLONE_SYMBOLS_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */",
        "meta": {
            "range": [
                579,
                673
            ],
            "filename": "cloneDeep.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001516",
                "name": "cloneDeep",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "This method is like `_.clone` except that it recursively clones `value`.",
        "scope": "static",
        "memberof": "_",
        "since": "1.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to recursively clone.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the deep cloned value."
            }
        ],
        "see": [
            "_.clone"
        ],
        "examples": [
            "var objects = [{ 'a': 1 }, { 'b': 2 }];\n\nvar deep = _.cloneDeep(objects);\nconsole.log(deep[0] === objects[0]);\n// => false"
        ],
        "name": "cloneDeep",
        "longname": "_.cloneDeep",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                675,
                701
            ],
            "filename": "cloneDeep.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001528",
                "name": "module.exports",
                "type": "Identifier",
                "value": "cloneDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "cloneDeepWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001536",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                115,
                134
            ],
            "filename": "cloneDeepWith.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001544",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                162
            ],
            "filename": "cloneDeepWith.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001547",
                "name": "CLONE_SYMBOLS_FLAG",
                "type": "Literal",
                "value": 4
            }
        },
        "undocumented": true,
        "name": "CLONE_SYMBOLS_FLAG",
        "longname": "CLONE_SYMBOLS_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */",
        "meta": {
            "range": [
                841,
                1036
            ],
            "filename": "cloneDeepWith.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001550",
                "name": "cloneDeepWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "customizer"
                ]
            },
            "vars": {
                "customizer": "_.cloneDeepWith~customizer"
            }
        },
        "description": "This method is like `_.cloneWith` except that it recursively clones `value`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to recursively clone.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize cloning.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the deep cloned value."
            }
        ],
        "see": [
            "_.cloneWith"
        ],
        "examples": [
            "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(true);\n  }\n}\n\nvar el = _.cloneDeepWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 20"
        ],
        "name": "cloneDeepWith",
        "longname": "_.cloneDeepWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                887,
                956
            ],
            "filename": "cloneDeepWith.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001556",
                "name": "customizer",
                "type": "ConditionalExpression",
                "funcscope": "_.cloneDeepWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "customizer",
        "longname": "_.cloneDeepWith~customizer",
        "kind": "member",
        "memberof": "_.cloneDeepWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1038,
                1068
            ],
            "filename": "cloneDeepWith.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001574",
                "name": "module.exports",
                "type": "Identifier",
                "value": "cloneDeepWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "cloneWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001582",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                115,
                137
            ],
            "filename": "cloneWith.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001590",
                "name": "CLONE_SYMBOLS_FLAG",
                "type": "Literal",
                "value": 4
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_SYMBOLS_FLAG",
        "longname": "CLONE_SYMBOLS_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.clone` except that it accepts `customizer` which\n * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n * cloning is handled by the method instead. The `customizer` is invoked with\n * up to four arguments; (value [, index|key, object, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeepWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * }\n *\n * var el = _.cloneWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 0\n */",
        "meta": {
            "range": [
                1015,
                1188
            ],
            "filename": "cloneWith.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001593",
                "name": "cloneWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "customizer"
                ]
            },
            "vars": {
                "customizer": "_.cloneWith~customizer"
            }
        },
        "description": "This method is like `_.clone` except that it accepts `customizer` which\nis invoked to produce the cloned value. If `customizer` returns `undefined`,\ncloning is handled by the method instead. The `customizer` is invoked with\nup to four arguments; (value [, index|key, object, stack]).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to clone.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize cloning.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the cloned value."
            }
        ],
        "see": [
            "_.cloneDeepWith"
        ],
        "examples": [
            "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(false);\n  }\n}\n\nvar el = _.cloneWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 0"
        ],
        "name": "cloneWith",
        "longname": "_.cloneWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1057,
                1126
            ],
            "filename": "cloneWith.js",
            "lineno": 40,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001599",
                "name": "customizer",
                "type": "ConditionalExpression",
                "funcscope": "_.cloneWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "customizer",
        "longname": "_.cloneWith~customizer",
        "kind": "member",
        "memberof": "_.cloneWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1190,
                1216
            ],
            "filename": "cloneWith.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001615",
                "name": "module.exports",
                "type": "Identifier",
                "value": "cloneWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                1007
            ],
            "filename": "collection.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001623",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                52
            ],
            "filename": "collection.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001628",
                "name": "countBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "countBy",
        "longname": "module.exports.countBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                81
            ],
            "filename": "collection.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001632",
                "name": "each",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "each",
        "longname": "module.exports.each",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                85,
                120
            ],
            "filename": "collection.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001636",
                "name": "eachRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "eachRight",
        "longname": "module.exports.eachRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                124,
                151
            ],
            "filename": "collection.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001640",
                "name": "every",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "every",
        "longname": "module.exports.every",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                155,
                184
            ],
            "filename": "collection.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001644",
                "name": "filter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "filter",
        "longname": "module.exports.filter",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                188,
                213
            ],
            "filename": "collection.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001648",
                "name": "find",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "find",
        "longname": "module.exports.find",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                217,
                250
            ],
            "filename": "collection.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001652",
                "name": "findLast",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findLast",
        "longname": "module.exports.findLast",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                285
            ],
            "filename": "collection.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001656",
                "name": "flatMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatMap",
        "longname": "module.exports.flatMap",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                289,
                328
            ],
            "filename": "collection.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001660",
                "name": "flatMapDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatMapDeep",
        "longname": "module.exports.flatMapDeep",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                332,
                373
            ],
            "filename": "collection.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001664",
                "name": "flatMapDepth",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatMapDepth",
        "longname": "module.exports.flatMapDepth",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                377,
                408
            ],
            "filename": "collection.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001668",
                "name": "forEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "forEach",
        "longname": "module.exports.forEach",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                412,
                453
            ],
            "filename": "collection.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001672",
                "name": "forEachRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "forEachRight",
        "longname": "module.exports.forEachRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                457,
                488
            ],
            "filename": "collection.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001676",
                "name": "groupBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "groupBy",
        "longname": "module.exports.groupBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                492,
                525
            ],
            "filename": "collection.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001680",
                "name": "includes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "includes",
        "longname": "module.exports.includes",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                529,
                564
            ],
            "filename": "collection.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001684",
                "name": "invokeMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "invokeMap",
        "longname": "module.exports.invokeMap",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                568,
                595
            ],
            "filename": "collection.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001688",
                "name": "keyBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keyBy",
        "longname": "module.exports.keyBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                599,
                622
            ],
            "filename": "collection.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001692",
                "name": "map",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "module.exports.map",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                626,
                657
            ],
            "filename": "collection.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001696",
                "name": "orderBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "orderBy",
        "longname": "module.exports.orderBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                661,
                696
            ],
            "filename": "collection.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001700",
                "name": "partition",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "partition",
        "longname": "module.exports.partition",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                700,
                729
            ],
            "filename": "collection.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001704",
                "name": "reduce",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reduce",
        "longname": "module.exports.reduce",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                733,
                772
            ],
            "filename": "collection.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001708",
                "name": "reduceRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reduceRight",
        "longname": "module.exports.reduceRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                776,
                805
            ],
            "filename": "collection.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001712",
                "name": "reject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reject",
        "longname": "module.exports.reject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                809,
                838
            ],
            "filename": "collection.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001716",
                "name": "sample",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sample",
        "longname": "module.exports.sample",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                842,
                879
            ],
            "filename": "collection.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001720",
                "name": "sampleSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sampleSize",
        "longname": "module.exports.sampleSize",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                883,
                914
            ],
            "filename": "collection.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001724",
                "name": "shuffle",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "shuffle",
        "longname": "module.exports.shuffle",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                918,
                943
            ],
            "filename": "collection.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001728",
                "name": "size",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "module.exports.size",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                947,
                972
            ],
            "filename": "collection.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001732",
                "name": "some",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "some",
        "longname": "module.exports.some",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                976,
                1005
            ],
            "filename": "collection.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001736",
                "name": "sortBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sortBy",
        "longname": "module.exports.sortBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "commit.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001743",
                "name": "LodashWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LodashWrapper",
        "longname": "LodashWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Executes the chain sequence and returns the wrapped result.\n *\n * @name commit\n * @memberOf _\n * @since 3.2.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2];\n * var wrapped = _(array).push(3);\n *\n * console.log(array);\n * // => [1, 2]\n *\n * wrapped = wrapped.commit();\n * console.log(array);\n * // => [1, 2, 3]\n *\n * wrapped.last();\n * // => 3\n *\n * console.log(array);\n * // => [1, 2, 3]\n */",
        "meta": {
            "filename": "commit.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Executes the chain sequence and returns the wrapped result.",
        "name": "commit",
        "memberof": "_",
        "since": "3.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "var array = [1, 2];\nvar wrapped = _(array).push(3);\n\nconsole.log(array);\n// => [1, 2]\n\nwrapped = wrapped.commit();\nconsole.log(array);\n// => [1, 2, 3]\n\nwrapped.last();\n// => 3\n\nconsole.log(array);\n// => [1, 2, 3]"
        ],
        "scope": "static",
        "longname": "_.commit",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                545,
                631
            ],
            "filename": "commit.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001750",
                "name": "wrapperCommit",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrapperCommit",
        "longname": "wrapperCommit",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                633,
                663
            ],
            "filename": "commit.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001764",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperCommit",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {array} array The array to compact.\n * @author array\n * @returns {clean} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */",
        "meta": {
            "range": [
                414,
                685
            ],
            "filename": "compact.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001773",
                "name": "compact",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "index": "_.compact~index",
                "length": "_.compact~length",
                "resIndex": "_.compact~resIndex",
                "result": "_.compact~result",
                "value": "_.compact~value",
                "result[undefined]": "_.compact~result.undefined]"
            }
        },
        "description": "Creates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to compact.",
                "name": "array"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "clean"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "_.compact([0, 1, false, 2, '', 3]);\n// => [1, 2, 3]"
        ],
        "name": "compact",
        "longname": "_.compact",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                446,
                456
            ],
            "filename": "compact.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001778",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.compact~index",
        "kind": "member",
        "memberof": "_.compact",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                464,
                505
            ],
            "filename": "compact.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001782",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.compact~length",
        "kind": "member",
        "memberof": "_.compact",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                513,
                525
            ],
            "filename": "compact.js",
            "lineno": 22,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001792",
                "name": "resIndex",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "resIndex",
        "longname": "_.compact~resIndex",
        "kind": "member",
        "memberof": "_.compact",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                533,
                544
            ],
            "filename": "compact.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001795",
                "name": "result",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.compact~result",
        "kind": "member",
        "memberof": "_.compact",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                584,
                604
            ],
            "filename": "compact.js",
            "lineno": 26,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001805",
                "name": "value",
                "type": "MemberExpression",
                "value": "array[undefined]"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.compact~value",
        "kind": "member",
        "memberof": "_.compact",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                629,
                655
            ],
            "filename": "compact.js",
            "lineno": 28,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001814",
                "name": "result[undefined]",
                "type": "Identifier",
                "funcscope": "_.compact",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "_.compact~result.undefined]",
        "kind": "member",
        "memberof": "_.compact~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                687,
                711
            ],
            "filename": "compact.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001823",
                "name": "module.exports",
                "type": "Identifier",
                "value": "compact",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "concat.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001831",
                "name": "arrayPush",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayPush",
        "longname": "arrayPush",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                102
            ],
            "filename": "concat.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001836",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                152
            ],
            "filename": "concat.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001841",
                "name": "copyArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyArray",
        "longname": "copyArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                158,
                188
            ],
            "filename": "concat.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001846",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {array} array The array to concatenate.\n * @param {values} values A general set of values.\n * @author array\n * @returns {concatenated} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */",
        "meta": {
            "range": [
                720,
                1044
            ],
            "filename": "concat.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001853",
                "name": "concat",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "length": "_.concat~length",
                "args": "_.concat~args",
                "array": "_.concat~array",
                "index": "_.concat~index",
                "args[undefined]": "_.concat~args.undefined]"
            }
        },
        "description": "Creates a new array concatenating `array` with any additional arrays\nand/or values.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to concatenate.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "values"
                    ]
                },
                "description": "A general set of values.",
                "name": "values"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "concatenated"
                    ]
                },
                "description": "Returns the new concatenated array."
            }
        ],
        "examples": [
            "var array = [1];\nvar other = _.concat(array, 2, [3], [[4]]);\n\nconsole.log(other);\n// => [1, 2, 3, [4]]\n\nconsole.log(array);\n// => [1]"
        ],
        "name": "concat",
        "longname": "_.concat",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                746,
                771
            ],
            "filename": "concat.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001857",
                "name": "length",
                "type": "MemberExpression",
                "value": "arguments.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.concat~length",
        "kind": "member",
        "memberof": "_.concat",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                815,
                839
            ],
            "filename": "concat.js",
            "lineno": 36,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001869",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "_.concat~args",
        "kind": "member",
        "memberof": "_.concat",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                847,
                867
            ],
            "filename": "concat.js",
            "lineno": 37,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001876",
                "name": "array",
                "type": "MemberExpression",
                "value": "arguments[0]"
            }
        },
        "undocumented": true,
        "name": "array",
        "longname": "_.concat~array",
        "kind": "member",
        "memberof": "_.concat",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                875,
                889
            ],
            "filename": "concat.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001881",
                "name": "index",
                "type": "Identifier",
                "value": "length"
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.concat~index",
        "kind": "member",
        "memberof": "_.concat",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                916,
                950
            ],
            "filename": "concat.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001889",
                "name": "args[undefined]",
                "type": "MemberExpression",
                "funcscope": "_.concat",
                "value": "arguments[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "_.concat~args.undefined]",
        "kind": "member",
        "memberof": "_.concat~args",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1046,
                1069
            ],
            "filename": "concat.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001915",
                "name": "module.exports",
                "type": "Identifier",
                "value": "concat",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "cond.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001923",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                88
            ],
            "filename": "cond.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001928",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                144
            ],
            "filename": "cond.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001933",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                150,
                192
            ],
            "filename": "cond.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001938",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                246,
                285
            ],
            "filename": "cond.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001946",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that iterates over `pairs` and invokes the corresponding\n * function of the first predicate to return truthy. The predicate-function\n * pairs are invoked with the `this` binding and arguments of the created\n * function.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {Array} pairs The predicate-function pairs.\n * @returns {Function} Returns the new composite function.\n * @example\n *\n * var func = _.cond([\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n *   [_.stubTrue,                      _.constant('no match')]\n * ]);\n *\n * func({ 'a': 1, 'b': 2 });\n * // => 'matches A'\n *\n * func({ 'a': 0, 'b': 1 });\n * // => 'matches B'\n *\n * func({ 'a': '1', 'b': '2' });\n * // => 'no match'\n */",
        "meta": {
            "range": [
                1114,
                1639
            ],
            "filename": "cond.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001949",
                "name": "cond",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "pairs"
                ]
            },
            "vars": {
                "length": "_.cond~length",
                "toIteratee": "_.cond~toIteratee",
                "pairs": "_.cond~pairs",
                "": null
            }
        },
        "description": "Creates a function that iterates over `pairs` and invokes the corresponding\nfunction of the first predicate to return truthy. The predicate-function\npairs are invoked with the `this` binding and arguments of the created\nfunction.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The predicate-function pairs.",
                "name": "pairs"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new composite function."
            }
        ],
        "examples": [
            "var func = _.cond([\n  [_.matches({ 'a': 1 }),           _.constant('matches A')],\n  [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n  [_.stubTrue,                      _.constant('no match')]\n]);\n\nfunc({ 'a': 1, 'b': 2 });\n// => 'matches A'\n\nfunc({ 'a': 0, 'b': 1 });\n// => 'matches B'\n\nfunc({ 'a': '1', 'b': '2' });\n// => 'no match'"
        ],
        "name": "cond",
        "longname": "_.cond",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1143,
                1184
            ],
            "filename": "cond.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001954",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.cond~length",
        "kind": "member",
        "memberof": "_.cond",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1192,
                1217
            ],
            "filename": "cond.js",
            "lineno": 42,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001964",
                "name": "toIteratee",
                "type": "Identifier",
                "value": "baseIteratee"
            }
        },
        "undocumented": true,
        "name": "toIteratee",
        "longname": "_.cond~toIteratee",
        "kind": "member",
        "memberof": "_.cond",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1222,
                1415
            ],
            "filename": "cond.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100001968",
                "name": "pairs",
                "type": "ConditionalExpression",
                "funcscope": "_.cond",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pairs",
        "longname": "_.cond~pairs",
        "kind": "member",
        "memberof": "_.cond",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1461,
                1471
            ],
            "filename": "cond.js",
            "lineno": 52,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002009",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1514,
                1533
            ],
            "filename": "cond.js",
            "lineno": 54,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002020",
                "name": "pair",
                "type": "MemberExpression",
                "value": "pairs[undefined]"
            }
        },
        "undocumented": true,
        "name": "pair",
        "longname": "<anonymous>~pair",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1641,
                1662
            ],
            "filename": "cond.js",
            "lineno": 62,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002043",
                "name": "module.exports",
                "type": "Identifier",
                "value": "cond",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "conforms.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002051",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                104
            ],
            "filename": "conforms.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002056",
                "name": "baseConforms",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseConforms",
        "longname": "baseConforms",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                171,
                190
            ],
            "filename": "conforms.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002064",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes the predicate properties of `source` with\n * the corresponding property values of a given object, returning `true` if\n * all predicates return truthy, else `false`.\n *\n * **Note:** The created function is equivalent to `_.conformsTo` with\n * `source` partially applied.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {Object} source The object of property predicates to conform to.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 2, 'b': 1 },\n *   { 'a': 1, 'b': 2 }\n * ];\n *\n * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n * // => [{ 'a': 1, 'b': 2 }]\n */",
        "meta": {
            "range": [
                894,
                982
            ],
            "filename": "conforms.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002067",
                "name": "conforms",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "source"
                ]
            }
        },
        "description": "Creates a function that invokes the predicate properties of `source` with\nthe corresponding property values of a given object, returning `true` if\nall predicates return truthy, else `false`.\n\n**Note:** The created function is equivalent to `_.conformsTo` with\n`source` partially applied.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object of property predicates to conform to.",
                "name": "source"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new spec function."
            }
        ],
        "examples": [
            "var objects = [\n  { 'a': 2, 'b': 1 },\n  { 'a': 1, 'b': 2 }\n];\n\n_.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n// => [{ 'a': 1, 'b': 2 }]"
        ],
        "name": "conforms",
        "longname": "_.conforms",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                984,
                1009
            ],
            "filename": "conforms.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002079",
                "name": "module.exports",
                "type": "Identifier",
                "value": "conforms",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "conformsTo.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002087",
                "name": "baseConformsTo",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseConformsTo",
        "longname": "baseConformsTo",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                88
            ],
            "filename": "conformsTo.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002092",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `object` conforms to `source` by invoking the predicate\n * properties of `source` with the corresponding property values of `object`.\n *\n * **Note:** This method is equivalent to `_.conforms` when `source` is\n * partially applied.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n *\n * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n * // => true\n *\n * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n * // => false\n */",
        "meta": {
            "range": [
                835,
                947
            ],
            "filename": "conformsTo.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002099",
                "name": "conformsTo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "source"
                ]
            }
        },
        "description": "Checks if `object` conforms to `source` by invoking the predicate\nproperties of `source` with the corresponding property values of `object`.\n\n**Note:** This method is equivalent to `_.conforms` when `source` is\npartially applied.",
        "scope": "static",
        "memberof": "_",
        "since": "4.14.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object of property predicates to conform to.",
                "name": "source"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `object` conforms, else `false`."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': 2 };\n\n_.conformsTo(object, { 'b': function(n) { return n > 1; } });\n// => true\n\n_.conformsTo(object, { 'b': function(n) { return n > 2; } });\n// => false"
        ],
        "name": "conformsTo",
        "longname": "_.conformsTo",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                949,
                976
            ],
            "filename": "conformsTo.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002117",
                "name": "module.exports",
                "type": "Identifier",
                "value": "conformsTo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {value} value A generalized variable.\n * @author function\n * @returns {function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */",
        "meta": {
            "range": [
                446,
                519
            ],
            "filename": "constant.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002126",
                "name": "constant",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Creates a function that returns `value`.",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "value"
                    ]
                },
                "description": "A generalized variable.",
                "name": "value"
            }
        ],
        "author": [
            "function"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new constant function."
            }
        ],
        "examples": [
            "var objects = _.times(2, _.constant({ 'a': 1 }));\n\nconsole.log(objects);\n// => [{ 'a': 1 }, { 'a': 1 }]\n\nconsole.log(objects[0] === objects[1]);\n// => true"
        ],
        "name": "constant",
        "longname": "_.constant",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                521,
                546
            ],
            "filename": "constant.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002136",
                "name": "module.exports",
                "type": "Identifier",
                "value": "constant",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "countBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002144",
                "name": "baseAssignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssignValue",
        "longname": "baseAssignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                124
            ],
            "filename": "countBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002149",
                "name": "createAggregator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAggregator",
        "longname": "createAggregator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                190,
                220
            ],
            "filename": "countBy.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002157",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                276,
                319
            ],
            "filename": "countBy.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002163",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the number of times the key was returned by `iteratee`. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': 1, '6': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.countBy(['one', 'two', 'three'], 'length');\n * // => { '3': 2, '5': 1 }\n */",
        "meta": {
            "range": [
                1093,
                1266
            ],
            "filename": "countBy.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002169",
                "name": "countBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the number of times the key was returned by `iteratee`. The\niteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "0.5.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee to transform keys.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the composed aggregate object."
            }
        ],
        "examples": [
            "_.countBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': 1, '6': 2 }\n\n// The `_.property` iteratee shorthand.\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }"
        ],
        "name": "countBy",
        "longname": "_.countBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1269,
                1293
            ],
            "filename": "countBy.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002199",
                "name": "module.exports",
                "type": "Identifier",
                "value": "countBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "create.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002207",
                "name": "baseAssign",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssign",
        "longname": "baseAssign",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                102
            ],
            "filename": "create.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002212",
                "name": "baseCreate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseCreate",
        "longname": "baseCreate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object that inherits from the `prototype` object. If a\n * `properties` object is given, its own enumerable string keyed properties\n * are assigned to the created object.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Object\n * @param {Object} prototype The object to inherit from.\n * @param {Object} [properties] The properties to assign to the object.\n * @returns {Object} Returns the new object.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * function Circle() {\n *   Shape.call(this);\n * }\n *\n * Circle.prototype = _.create(Shape.prototype, {\n *   'constructor': Circle\n * });\n *\n * var circle = new Circle;\n * circle instanceof Circle;\n * // => true\n *\n * circle instanceof Shape;\n * // => true\n */",
        "meta": {
            "range": [
                887,
                1038
            ],
            "filename": "create.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002219",
                "name": "create",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "prototype",
                    "properties"
                ]
            },
            "vars": {
                "result": "_.create~result"
            }
        },
        "description": "Creates an object that inherits from the `prototype` object. If a\n`properties` object is given, its own enumerable string keyed properties\nare assigned to the created object.",
        "scope": "static",
        "memberof": "_",
        "since": "2.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inherit from.",
                "name": "prototype"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "The properties to assign to the object.",
                "name": "properties"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "function Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\nfunction Circle() {\n  Shape.call(this);\n}\n\nCircle.prototype = _.create(Shape.prototype, {\n  'constructor': Circle\n});\n\nvar circle = new Circle;\ncircle instanceof Circle;\n// => true\n\ncircle instanceof Shape;\n// => true"
        ],
        "name": "create",
        "longname": "_.create",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                934,
                964
            ],
            "filename": "create.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002225",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.create~result",
        "kind": "member",
        "memberof": "_.create",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1040,
                1063
            ],
            "filename": "create.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002241",
                "name": "module.exports",
                "type": "Identifier",
                "value": "create",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "curry.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002249",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                127,
                146
            ],
            "filename": "curry.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002257",
                "name": "WRAP_CURRY_FLAG",
                "type": "Literal",
                "value": 8
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_CURRY_FLAG",
        "longname": "WRAP_CURRY_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that accepts arguments of `func` and either invokes\n * `func` returning its result, if at least `arity` number of arguments have\n * been provided, or returns a function that accepts the remaining `func`\n * arguments, and so on. The arity of `func` may be specified if `func.length`\n * is not sufficient.\n *\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curry(abc);\n *\n * curried(1)(2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(1)(_, 3)(2);\n * // => [1, 2, 3]\n */",
        "meta": {
            "range": [
                1339,
                1585
            ],
            "filename": "curry.js",
            "lineno": 49,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002260",
                "name": "curry",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "arity",
                    "guard"
                ]
            },
            "vars": {
                "arity": "_.curry~arity",
                "result": "_.curry~result",
                "result.placeholder": "_.curry~result.placeholder"
            }
        },
        "description": "Creates a function that accepts arguments of `func` and either invokes\n`func` returning its result, if at least `arity` number of arguments have\nbeen provided, or returns a function that accepts the remaining `func`\narguments, and so on. The arity of `func` may be specified if `func.length`\nis not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to curry.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "func.length",
                "description": "The arity of `func`.",
                "name": "arity"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new curried function."
            }
        ],
        "examples": [
            "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curry(abc);\n\ncurried(1)(2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]"
        ],
        "name": "curry",
        "longname": "_.curry",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1378,
                1411
            ],
            "filename": "curry.js",
            "lineno": 50,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002267",
                "name": "arity",
                "type": "ConditionalExpression",
                "funcscope": "_.curry",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arity",
        "longname": "_.curry~arity",
        "kind": "member",
        "memberof": "_.curry",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1419,
                1523
            ],
            "filename": "curry.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002274",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.curry~result",
        "kind": "member",
        "memberof": "_.curry",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1527,
                1565
            ],
            "filename": "curry.js",
            "lineno": 52,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002287",
                "name": "result.placeholder",
                "type": "MemberExpression",
                "funcscope": "_.curry",
                "value": "curry.placeholder",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.curry~result.placeholder",
        "kind": "member",
        "memberof": "_.curry~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1619,
                1641
            ],
            "filename": "curry.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002297",
                "name": "curry.placeholder",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.curry.placeholder",
        "kind": "member",
        "memberof": "_.curry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1644,
                1666
            ],
            "filename": "curry.js",
            "lineno": 59,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002303",
                "name": "module.exports",
                "type": "Identifier",
                "value": "curry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "curryRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002311",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                127,
                153
            ],
            "filename": "curryRight.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002319",
                "name": "WRAP_CURRY_RIGHT_FLAG",
                "type": "Literal",
                "value": 16
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_CURRY_RIGHT_FLAG",
        "longname": "WRAP_CURRY_RIGHT_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.curry` except that arguments are applied to `func`\n * in the manner of `_.partialRight` instead of `_.partial`.\n *\n * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curryRight(abc);\n *\n * curried(3)(2)(1);\n * // => [1, 2, 3]\n *\n * curried(2, 3)(1);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(3)(1, _)(2);\n * // => [1, 2, 3]\n */",
        "meta": {
            "range": [
                1168,
                1430
            ],
            "filename": "curryRight.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002322",
                "name": "curryRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "arity",
                    "guard"
                ]
            },
            "vars": {
                "arity": "_.curryRight~arity",
                "result": "_.curryRight~result",
                "result.placeholder": "_.curryRight~result.placeholder"
            }
        },
        "description": "This method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to curry.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "func.length",
                "description": "The arity of `func`.",
                "name": "arity"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new curried function."
            }
        ],
        "examples": [
            "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curryRight(abc);\n\ncurried(3)(2)(1);\n// => [1, 2, 3]\n\ncurried(2, 3)(1);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(3)(1, _)(2);\n// => [1, 2, 3]"
        ],
        "name": "curryRight",
        "longname": "_.curryRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1212,
                1245
            ],
            "filename": "curryRight.js",
            "lineno": 47,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002329",
                "name": "arity",
                "type": "ConditionalExpression",
                "funcscope": "_.curryRight",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arity",
        "longname": "_.curryRight~arity",
        "kind": "member",
        "memberof": "_.curryRight",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1253,
                1363
            ],
            "filename": "curryRight.js",
            "lineno": 48,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002336",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.curryRight~result",
        "kind": "member",
        "memberof": "_.curryRight",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1367,
                1410
            ],
            "filename": "curryRight.js",
            "lineno": 49,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002349",
                "name": "result.placeholder",
                "type": "MemberExpression",
                "funcscope": "_.curryRight",
                "value": "curryRight.placeholder",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.curryRight~result.placeholder",
        "kind": "member",
        "memberof": "_.curryRight~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1464,
                1491
            ],
            "filename": "curryRight.js",
            "lineno": 54,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002359",
                "name": "curryRight.placeholder",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.curryRight.placeholder",
        "kind": "member",
        "memberof": "_.curryRight",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1494,
                1521
            ],
            "filename": "curryRight.js",
            "lineno": 56,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002365",
                "name": "module.exports",
                "type": "Identifier",
                "value": "curryRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                46
            ],
            "filename": "date.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002373",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                44
            ],
            "filename": "date.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002378",
                "name": "now",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "now",
        "longname": "module.exports.now",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "debounce.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002385",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                64
            ],
            "filename": "debounce.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002390",
                "name": "now",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "now",
        "longname": "now",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70,
                102
            ],
            "filename": "debounce.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002395",
                "name": "toNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "toNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                156,
                195
            ],
            "filename": "debounce.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002403",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                291,
                311
            ],
            "filename": "debounce.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002407",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                317,
                337
            ],
            "filename": "debounce.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002412",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */",
        "meta": {
            "range": [
                2780,
                6028
            ],
            "filename": "debounce.js",
            "lineno": 68,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002417",
                "name": "debounce",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "wait",
                    "options"
                ]
            },
            "vars": {
                "lastArgs": "_.debounce~lastArgs",
                "lastThis": "_.debounce~lastThis",
                "maxWait": "_.debounce~maxWait",
                "result": "_.debounce~result",
                "timerId": "_.debounce~timerId",
                "lastCallTime": "_.debounce~lastCallTime",
                "lastInvokeTime": "_.debounce~lastInvokeTime",
                "leading": "_.debounce~leading",
                "maxing": "_.debounce~maxing",
                "trailing": "_.debounce~trailing",
                "wait": "_.debounce~wait",
                "invokeFunc": "_.debounce~invokeFunc",
                "leadingEdge": "_.debounce~leadingEdge",
                "remainingWait": "_.debounce~remainingWait",
                "shouldInvoke": "_.debounce~shouldInvoke",
                "timerExpired": "_.debounce~timerExpired",
                "trailingEdge": "_.debounce~trailingEdge",
                "cancel": "_.debounce~cancel",
                "flush": "_.debounce~flush",
                "debounced": "_.debounce~debounced",
                "debounced.cancel": "_.debounce~debounced.cancel",
                "debounced.flush": "_.debounce~debounced.flush"
            }
        },
        "description": "Creates a debounced function that delays invoking `func` until after `wait`\nmilliseconds have elapsed since the last time the debounced function was\ninvoked. The debounced function comes with a `cancel` method to cancel\ndelayed `func` invocations and a `flush` method to immediately invoke them.\nProvide `options` to indicate whether `func` should be invoked on the\nleading and/or trailing edge of the `wait` timeout. The `func` is invoked\nwith the last arguments provided to the debounced function. Subsequent\ncalls to the debounced function return the result of the last `func`\ninvocation.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is\ninvoked on the trailing edge of the timeout only if the debounced function\nis invoked more than once during the `wait` timeout.\n\nIf `wait` is `0` and `leading` is `false`, `func` invocation is deferred\nuntil to the next tick, similar to `setTimeout` with a timeout of `0`.\n\nSee [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\nfor details over the differences between `_.debounce` and `_.throttle`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to debounce.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The number of milliseconds to delay.",
                "name": "wait"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "{}",
                "description": "The options object.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": false,
                "description": "Specify invoking on the leading edge of the timeout.",
                "name": "options.leading"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "description": "The maximum time `func` is allowed to be delayed before it's invoked.",
                "name": "options.maxWait"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": true,
                "description": "Specify invoking on the trailing edge of the timeout.",
                "name": "options.trailing"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new debounced function."
            }
        ],
        "examples": [
            "// Avoid costly calculations while the window size is in flux.\njQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\n// Invoke `sendMail` when clicked, debouncing subsequent calls.\njQuery(element).on('click', _.debounce(sendMail, 300, {\n  'leading': true,\n  'trailing': false\n}));\n\n// Ensure `batchLog` is invoked once after 1 second of debounced calls.\nvar debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\nvar source = new EventSource('/stream');\njQuery(source).on('message', debounced);\n\n// Cancel the trailing debounced invocation.\njQuery(window).on('popstate', debounced.cancel);"
        ],
        "name": "debounce",
        "longname": "_.debounce",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2827,
                2835
            ],
            "filename": "debounce.js",
            "lineno": 69,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002424",
                "name": "lastArgs"
            }
        },
        "undocumented": true,
        "name": "lastArgs",
        "longname": "_.debounce~lastArgs",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2843,
                2851
            ],
            "filename": "debounce.js",
            "lineno": 70,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002426",
                "name": "lastThis"
            }
        },
        "undocumented": true,
        "name": "lastThis",
        "longname": "_.debounce~lastThis",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2859,
                2866
            ],
            "filename": "debounce.js",
            "lineno": 71,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002428",
                "name": "maxWait"
            }
        },
        "undocumented": true,
        "name": "maxWait",
        "longname": "_.debounce~maxWait",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2874,
                2880
            ],
            "filename": "debounce.js",
            "lineno": 72,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002430",
                "name": "result"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.debounce~result",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2888,
                2895
            ],
            "filename": "debounce.js",
            "lineno": 73,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002432",
                "name": "timerId"
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~timerId",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2903,
                2915
            ],
            "filename": "debounce.js",
            "lineno": 74,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002434",
                "name": "lastCallTime"
            }
        },
        "undocumented": true,
        "name": "lastCallTime",
        "longname": "_.debounce~lastCallTime",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2923,
                2941
            ],
            "filename": "debounce.js",
            "lineno": 75,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002436",
                "name": "lastInvokeTime",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "lastInvokeTime",
        "longname": "_.debounce~lastInvokeTime",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2949,
                2964
            ],
            "filename": "debounce.js",
            "lineno": 76,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002439",
                "name": "leading",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "leading",
        "longname": "_.debounce~leading",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2972,
                2986
            ],
            "filename": "debounce.js",
            "lineno": 77,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002442",
                "name": "maxing",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "maxing",
        "longname": "_.debounce~maxing",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2994,
                3009
            ],
            "filename": "debounce.js",
            "lineno": 78,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002445",
                "name": "trailing",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "trailing",
        "longname": "_.debounce~trailing",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3095,
                3121
            ],
            "filename": "debounce.js",
            "lineno": 83,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002459",
                "name": "wait",
                "type": "LogicalExpression",
                "funcscope": "_.debounce",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wait",
        "longname": "_.debounce~wait",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3154,
                3181
            ],
            "filename": "debounce.js",
            "lineno": 85,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002472",
                "name": "leading",
                "type": "UnaryExpression",
                "funcscope": "_.debounce",
                "value": "!!options.leading",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "leading",
        "longname": "_.debounce~leading",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3187,
                3216
            ],
            "filename": "debounce.js",
            "lineno": 86,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002480",
                "name": "maxing",
                "type": "BinaryExpression",
                "funcscope": "_.debounce",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "maxing",
        "longname": "_.debounce~maxing",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3222,
                3298
            ],
            "filename": "debounce.js",
            "lineno": 87,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002486",
                "name": "maxWait",
                "type": "ConditionalExpression",
                "funcscope": "_.debounce",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "maxWait",
        "longname": "_.debounce~maxWait",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3304,
                3368
            ],
            "filename": "debounce.js",
            "lineno": 88,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002502",
                "name": "trailing",
                "type": "ConditionalExpression",
                "funcscope": "_.debounce",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "trailing",
        "longname": "_.debounce~trailing",
        "kind": "member",
        "memberof": "_.debounce",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3377,
                3585
            ],
            "filename": "debounce.js",
            "lineno": 91,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002514",
                "name": "invokeFunc",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "time"
                ]
            },
            "vars": {
                "args": "_.debounce~invokeFunc~args",
                "thisArg": "_.debounce~invokeFunc~thisArg",
                "lastArgs": "_.debounce~invokeFunc~lastArgs",
                "lastThis": "_.debounce~invokeFunc~lastThis",
                "lastInvokeTime": "_.debounce~invokeFunc~lastInvokeTime",
                "result": "_.debounce~invokeFunc~result"
            }
        },
        "undocumented": true,
        "name": "invokeFunc",
        "longname": "_.debounce~invokeFunc",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3413,
                3428
            ],
            "filename": "debounce.js",
            "lineno": 92,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002519",
                "name": "args",
                "type": "Identifier",
                "value": "lastArgs"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "_.debounce~invokeFunc~args",
        "kind": "member",
        "memberof": "_.debounce~invokeFunc",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3438,
                3456
            ],
            "filename": "debounce.js",
            "lineno": 93,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002522",
                "name": "thisArg",
                "type": "Identifier",
                "value": "lastThis"
            }
        },
        "undocumented": true,
        "name": "thisArg",
        "longname": "_.debounce~invokeFunc~thisArg",
        "kind": "member",
        "memberof": "_.debounce~invokeFunc",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3463,
                3494
            ],
            "filename": "debounce.js",
            "lineno": 95,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002526",
                "name": "lastArgs",
                "type": "AssignmentExpression",
                "funcscope": "_.debounce~invokeFunc",
                "value": "lastThis",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastArgs",
        "longname": "_.debounce~invokeFunc~lastArgs",
        "kind": "member",
        "memberof": "_.debounce~invokeFunc",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3474,
                3494
            ],
            "filename": "debounce.js",
            "lineno": 95,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002528",
                "name": "lastThis",
                "type": "Identifier",
                "funcscope": "_.debounce~invokeFunc",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastThis",
        "longname": "_.debounce~invokeFunc~lastThis",
        "kind": "member",
        "memberof": "_.debounce~invokeFunc",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3500,
                3521
            ],
            "filename": "debounce.js",
            "lineno": 96,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002532",
                "name": "lastInvokeTime",
                "type": "Identifier",
                "funcscope": "_.debounce~invokeFunc",
                "value": "time",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastInvokeTime",
        "longname": "_.debounce~invokeFunc~lastInvokeTime",
        "kind": "member",
        "memberof": "_.debounce~invokeFunc",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3527,
                3561
            ],
            "filename": "debounce.js",
            "lineno": 97,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002536",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "_.debounce~invokeFunc",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.debounce~invokeFunc~result",
        "kind": "member",
        "memberof": "_.debounce~invokeFunc",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3589,
                3854
            ],
            "filename": "debounce.js",
            "lineno": 101,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002546",
                "name": "leadingEdge",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "time"
                ]
            },
            "vars": {
                "lastInvokeTime": "_.debounce~leadingEdge~lastInvokeTime",
                "timerId": "_.debounce~leadingEdge~timerId"
            }
        },
        "undocumented": true,
        "name": "leadingEdge",
        "longname": "_.debounce~leadingEdge",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3656,
                3677
            ],
            "filename": "debounce.js",
            "lineno": 103,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002551",
                "name": "lastInvokeTime",
                "type": "Identifier",
                "funcscope": "_.debounce~leadingEdge",
                "value": "time",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastInvokeTime",
        "longname": "_.debounce~leadingEdge~lastInvokeTime",
        "kind": "member",
        "memberof": "_.debounce~leadingEdge",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3729,
                3769
            ],
            "filename": "debounce.js",
            "lineno": 105,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002555",
                "name": "timerId",
                "type": "CallExpression",
                "funcscope": "_.debounce~leadingEdge",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~leadingEdge~timerId",
        "kind": "member",
        "memberof": "_.debounce~leadingEdge",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3858,
                4117
            ],
            "filename": "debounce.js",
            "lineno": 110,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002568",
                "name": "remainingWait",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "time"
                ]
            },
            "vars": {
                "timeSinceLastCall": "_.debounce~remainingWait~timeSinceLastCall",
                "timeSinceLastInvoke": "_.debounce~remainingWait~timeSinceLastInvoke",
                "result": "_.debounce~remainingWait~result"
            }
        },
        "undocumented": true,
        "name": "remainingWait",
        "longname": "_.debounce~remainingWait",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3897,
                3936
            ],
            "filename": "debounce.js",
            "lineno": 111,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002573",
                "name": "timeSinceLastCall",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timeSinceLastCall",
        "longname": "_.debounce~remainingWait~timeSinceLastCall",
        "kind": "member",
        "memberof": "_.debounce~remainingWait",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3946,
                3989
            ],
            "filename": "debounce.js",
            "lineno": 112,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002578",
                "name": "timeSinceLastInvoke",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timeSinceLastInvoke",
        "longname": "_.debounce~remainingWait~timeSinceLastInvoke",
        "kind": "member",
        "memberof": "_.debounce~remainingWait",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3999,
                4032
            ],
            "filename": "debounce.js",
            "lineno": 113,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002583",
                "name": "result",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.debounce~remainingWait~result",
        "kind": "member",
        "memberof": "_.debounce~remainingWait",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4121,
                4626
            ],
            "filename": "debounce.js",
            "lineno": 118,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002598",
                "name": "shouldInvoke",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "time"
                ]
            },
            "vars": {
                "timeSinceLastCall": "_.debounce~shouldInvoke~timeSinceLastCall",
                "timeSinceLastInvoke": "_.debounce~shouldInvoke~timeSinceLastInvoke"
            }
        },
        "undocumented": true,
        "name": "shouldInvoke",
        "longname": "_.debounce~shouldInvoke",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4159,
                4198
            ],
            "filename": "debounce.js",
            "lineno": 119,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002603",
                "name": "timeSinceLastCall",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timeSinceLastCall",
        "longname": "_.debounce~shouldInvoke~timeSinceLastCall",
        "kind": "member",
        "memberof": "_.debounce~shouldInvoke",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4208,
                4251
            ],
            "filename": "debounce.js",
            "lineno": 120,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002608",
                "name": "timeSinceLastInvoke",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timeSinceLastInvoke",
        "longname": "_.debounce~shouldInvoke~timeSinceLastInvoke",
        "kind": "member",
        "memberof": "_.debounce~shouldInvoke",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4630,
                4837
            ],
            "filename": "debounce.js",
            "lineno": 129,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002631",
                "name": "timerExpired",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "time": "_.debounce~timerExpired~time",
                "timerId": "_.debounce~timerExpired~timerId"
            }
        },
        "undocumented": true,
        "name": "timerExpired",
        "longname": "_.debounce~timerExpired",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4664,
                4676
            ],
            "filename": "debounce.js",
            "lineno": 130,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002635",
                "name": "time",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "_.debounce~timerExpired~time",
        "kind": "member",
        "memberof": "_.debounce~timerExpired",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4777,
                4832
            ],
            "filename": "debounce.js",
            "lineno": 135,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002649",
                "name": "timerId",
                "type": "CallExpression",
                "funcscope": "_.debounce~timerExpired",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~timerExpired~timerId",
        "kind": "member",
        "memberof": "_.debounce~timerExpired",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4841,
                5126
            ],
            "filename": "debounce.js",
            "lineno": 138,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002657",
                "name": "trailingEdge",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "time"
                ]
            },
            "vars": {
                "timerId": "_.debounce~trailingEdge~timerId",
                "lastArgs": "_.debounce~trailingEdge~lastArgs",
                "lastThis": "_.debounce~trailingEdge~lastThis"
            }
        },
        "undocumented": true,
        "name": "trailingEdge",
        "longname": "_.debounce~trailingEdge",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4875,
                4894
            ],
            "filename": "debounce.js",
            "lineno": 139,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002662",
                "name": "timerId",
                "type": "Identifier",
                "funcscope": "_.debounce~trailingEdge",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~trailingEdge~timerId",
        "kind": "member",
        "memberof": "_.debounce~trailingEdge",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5071,
                5102
            ],
            "filename": "debounce.js",
            "lineno": 146,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002675",
                "name": "lastArgs",
                "type": "AssignmentExpression",
                "funcscope": "_.debounce~trailingEdge",
                "value": "lastThis",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastArgs",
        "longname": "_.debounce~trailingEdge~lastArgs",
        "kind": "member",
        "memberof": "_.debounce~trailingEdge",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5082,
                5102
            ],
            "filename": "debounce.js",
            "lineno": 146,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002677",
                "name": "lastThis",
                "type": "Identifier",
                "funcscope": "_.debounce~trailingEdge",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastThis",
        "longname": "_.debounce~trailingEdge~lastThis",
        "kind": "member",
        "memberof": "_.debounce~trailingEdge",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5130,
                5307
            ],
            "filename": "debounce.js",
            "lineno": 150,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002682",
                "name": "cancel",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "lastInvokeTime": "_.debounce~cancel~lastInvokeTime",
                "lastArgs": "_.debounce~cancel~lastArgs",
                "lastCallTime": "_.debounce~cancel~lastCallTime",
                "lastThis": "_.debounce~cancel~lastArgs.lastThis",
                "timerId": "_.debounce~cancel~lastCallTime.timerId"
            }
        },
        "undocumented": true,
        "name": "cancel",
        "longname": "_.debounce~cancel",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5222,
                5240
            ],
            "filename": "debounce.js",
            "lineno": 154,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002695",
                "name": "lastInvokeTime",
                "type": "Literal",
                "funcscope": "_.debounce~cancel",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastInvokeTime",
        "longname": "_.debounce~cancel~lastInvokeTime",
        "kind": "member",
        "memberof": "_.debounce~cancel",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5246,
                5302
            ],
            "filename": "debounce.js",
            "lineno": 155,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002699",
                "name": "lastArgs",
                "type": "AssignmentExpression",
                "funcscope": "_.debounce~cancel",
                "value": "lastCallTime",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastArgs",
        "longname": "_.debounce~cancel~lastArgs",
        "kind": "member",
        "memberof": "_.debounce~cancel",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5257,
                5302
            ],
            "filename": "debounce.js",
            "lineno": 155,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002701",
                "name": "lastCallTime",
                "type": "AssignmentExpression",
                "funcscope": "_.debounce~cancel",
                "value": "lastThis",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastCallTime",
        "longname": "_.debounce~cancel~lastCallTime",
        "kind": "member",
        "memberof": "_.debounce~cancel",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5272,
                5302
            ],
            "filename": "debounce.js",
            "lineno": 155,
            "columnno": 30,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002703",
                "name": "lastThis",
                "type": "AssignmentExpression",
                "funcscope": "_.debounce~cancel",
                "value": "timerId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastThis",
        "longname": "_.debounce~cancel~lastArgs.lastThis",
        "kind": "member",
        "memberof": "_.debounce~cancel~lastArgs",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5283,
                5302
            ],
            "filename": "debounce.js",
            "lineno": 155,
            "columnno": 41,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002705",
                "name": "timerId",
                "type": "Identifier",
                "funcscope": "_.debounce~cancel",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~cancel~lastCallTime.timerId",
        "kind": "member",
        "memberof": "_.debounce~cancel~lastCallTime",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5311,
                5398
            ],
            "filename": "debounce.js",
            "lineno": 158,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002708",
                "name": "flush",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flush",
        "longname": "_.debounce~flush",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5402,
                5950
            ],
            "filename": "debounce.js",
            "lineno": 162,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002721",
                "name": "debounced",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "time": "_.debounce~debounced~time",
                "isInvoking": "_.debounce~debounced~isInvoking",
                "lastArgs": "_.debounce~debounced~lastArgs",
                "lastThis": "_.debounce~debounced~lastThis",
                "lastCallTime": "_.debounce~debounced~lastCallTime",
                "timerId": "_.debounce~debounced~timerId"
            }
        },
        "undocumented": true,
        "name": "debounced",
        "longname": "_.debounce~debounced",
        "kind": "function",
        "memberof": "_.debounce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5433,
                5445
            ],
            "filename": "debounce.js",
            "lineno": 163,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002725",
                "name": "time",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "_.debounce~debounced~time",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5455,
                5486
            ],
            "filename": "debounce.js",
            "lineno": 164,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002729",
                "name": "isInvoking",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isInvoking",
        "longname": "_.debounce~debounced~isInvoking",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5493,
                5513
            ],
            "filename": "debounce.js",
            "lineno": 166,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002735",
                "name": "lastArgs",
                "type": "Identifier",
                "funcscope": "_.debounce~debounced",
                "value": "arguments",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastArgs",
        "longname": "_.debounce~debounced~lastArgs",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5519,
                5534
            ],
            "filename": "debounce.js",
            "lineno": 167,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002739",
                "name": "lastThis",
                "type": "ThisExpression",
                "funcscope": "_.debounce~debounced",
                "value": "this",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastThis",
        "longname": "_.debounce~debounced~lastThis",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5540,
                5559
            ],
            "filename": "debounce.js",
            "lineno": 168,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002743",
                "name": "lastCallTime",
                "type": "Identifier",
                "funcscope": "_.debounce~debounced",
                "value": "time",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastCallTime",
        "longname": "_.debounce~debounced~lastCallTime",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5744,
                5784
            ],
            "filename": "debounce.js",
            "lineno": 176,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002762",
                "name": "timerId",
                "type": "CallExpression",
                "funcscope": "_.debounce~debounced",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~debounced~timerId",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5880,
                5920
            ],
            "filename": "debounce.js",
            "lineno": 181,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002778",
                "name": "timerId",
                "type": "CallExpression",
                "funcscope": "_.debounce~debounced",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "timerId",
        "longname": "_.debounce~debounced~timerId",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5953,
                5978
            ],
            "filename": "debounce.js",
            "lineno": 185,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002787",
                "name": "debounced.cancel",
                "type": "Identifier",
                "funcscope": "_.debounce",
                "value": "cancel",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cancel",
        "longname": "_.debounce~debounced.cancel",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5982,
                6005
            ],
            "filename": "debounce.js",
            "lineno": 186,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002793",
                "name": "debounced.flush",
                "type": "Identifier",
                "funcscope": "_.debounce",
                "value": "flush",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flush",
        "longname": "_.debounce~debounced.flush",
        "kind": "member",
        "memberof": "_.debounce~debounced",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6030,
                6055
            ],
            "filename": "debounce.js",
            "lineno": 190,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002801",
                "name": "module.exports",
                "type": "Identifier",
                "value": "debounce",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "deburr.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002809",
                "name": "deburrLetter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "deburrLetter",
        "longname": "deburrLetter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                92
            ],
            "filename": "deburr.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002814",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match Latin Unicode letters (excluding mathematical operators). */",
        "meta": {
            "range": [
                193,
                248
            ],
            "filename": "deburr.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002822",
                "name": "reLatin",
                "type": "Literal",
                "value": "<RegExp /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g>"
            }
        },
        "description": "Used to match Latin Unicode letters (excluding mathematical operators).",
        "name": "reLatin",
        "longname": "reLatin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose unicode character classes. */",
        "meta": {
            "range": [
                305,
                342
            ],
            "filename": "deburr.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002826",
                "name": "rsComboMarksRange",
                "type": "Literal",
                "value": "\\u0300-\\u036f"
            }
        },
        "description": "Used to compose unicode character classes.",
        "name": "rsComboMarksRange",
        "longname": "rsComboMarksRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                348,
                389
            ],
            "filename": "deburr.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002829",
                "name": "reComboHalfMarksRange",
                "type": "Literal",
                "value": "\\ufe20-\\ufe2f"
            }
        },
        "undocumented": true,
        "name": "reComboHalfMarksRange",
        "longname": "reComboHalfMarksRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                395,
                434
            ],
            "filename": "deburr.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002832",
                "name": "rsComboSymbolsRange",
                "type": "Literal",
                "value": "\\u20d0-\\u20ff"
            }
        },
        "undocumented": true,
        "name": "rsComboSymbolsRange",
        "longname": "rsComboSymbolsRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                440,
                518
            ],
            "filename": "deburr.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002835",
                "name": "rsComboRange",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "rsComboRange",
        "longname": "rsComboRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose unicode capture groups. */",
        "meta": {
            "range": [
                572,
                606
            ],
            "filename": "deburr.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002843",
                "name": "rsCombo",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "description": "Used to compose unicode capture groups.",
        "name": "rsCombo",
        "longname": "rsCombo",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */",
        "meta": {
            "range": [
                848,
                882
            ],
            "filename": "deburr.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002851",
                "name": "reComboMark",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n[combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).",
        "name": "reComboMark",
        "longname": "reComboMark",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */",
        "meta": {
            "range": [
                1473,
                1612
            ],
            "filename": "deburr.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002857",
                "name": "deburr",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string"
                ]
            },
            "vars": {
                "string": "_.deburr~string"
            }
        },
        "description": "Deburrs `string` by converting\n[Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nand [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\nletters to basic Latin letters and removing\n[combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to deburr.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the deburred string."
            }
        ],
        "examples": [
            "_.deburr('déjà vu');\n// => 'deja vu'"
        ],
        "name": "deburr",
        "longname": "_.deburr",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1501,
                1526
            ],
            "filename": "deburr.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002862",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.deburr",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.deburr~string",
        "kind": "member",
        "memberof": "_.deburr",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1614,
                1637
            ],
            "filename": "deburr.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002882",
                "name": "module.exports",
                "type": "Identifier",
                "value": "deburr",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15,
                95
            ],
            "filename": "default.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002891",
                "name": "defaultFunction",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defaultFunction",
        "longname": "defaultFunction",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                97,
                129
            ],
            "filename": "default.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002897",
                "name": "module.exports",
                "type": "Identifier",
                "value": "defaultFunction",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks `value` to determine whether a default value should be returned in\n * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n * or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Util\n * @param {*} value The value to check.\n * @param {*} defaultValue The default value.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * _.defaultTo(1, 10);\n * // => 1\n *\n * _.defaultTo(undefined, 10);\n * // => 10\n */",
        "meta": {
            "range": [
                482,
                593
            ],
            "filename": "defaultTo.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002906",
                "name": "defaultTo",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "defaultValue"
                ]
            }
        },
        "description": "Checks `value` to determine whether a default value should be returned in\nits place. The `defaultValue` is returned if `value` is `NaN`, `null`,\nor `undefined`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.14.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The default value.",
                "name": "defaultValue"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the resolved value."
            }
        ],
        "examples": [
            "_.defaultTo(1, 10);\n// => 1\n\n_.defaultTo(undefined, 10);\n// => 10"
        ],
        "name": "defaultTo",
        "longname": "_.defaultTo",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                595,
                621
            ],
            "filename": "defaultTo.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002923",
                "name": "module.exports",
                "type": "Identifier",
                "value": "defaultTo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "defaults.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002931",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                86
            ],
            "filename": "defaults.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002936",
                "name": "assignInWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignInWith",
        "longname": "assignInWith",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                92,
                134
            ],
            "filename": "defaults.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002941",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                210
            ],
            "filename": "defaults.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002946",
                "name": "customDefaultsAssignIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "customDefaultsAssignIn",
        "longname": "customDefaultsAssignIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */",
        "meta": {
            "range": [
                909,
                1043
            ],
            "filename": "defaults.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002954",
                "name": "defaults",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Assigns own and inherited enumerable string keyed properties of source\nobjects to the destination object for all destination properties that\nresolve to `undefined`. Source objects are applied from left to right.\nOnce a property is set, additional values of the same property are ignored.\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.defaultsDeep"
        ],
        "examples": [
            "_.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }"
        ],
        "name": "defaults",
        "longname": "_.defaults",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1046,
                1071
            ],
            "filename": "defaults.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002975",
                "name": "module.exports",
                "type": "Identifier",
                "value": "defaults",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "defaultsDeep.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002983",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                88
            ],
            "filename": "defaultsDeep.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002988",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                158
            ],
            "filename": "defaultsDeep.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002993",
                "name": "customDefaultsMerge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "customDefaultsMerge",
        "longname": "customDefaultsMerge",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                164,
                198
            ],
            "filename": "defaultsDeep.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100002998",
                "name": "mergeWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mergeWith",
        "longname": "mergeWith",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */",
        "meta": {
            "range": [
                715,
                847
            ],
            "filename": "defaultsDeep.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003006",
                "name": "defaultsDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.defaults` except that it recursively assigns\ndefault properties.\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.10.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.defaults"
        ],
        "examples": [
            "_.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n// => { 'a': { 'b': 2, 'c': 3 } }"
        ],
        "name": "defaultsDeep",
        "longname": "_.defaultsDeep",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                850,
                879
            ],
            "filename": "defaultsDeep.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003027",
                "name": "module.exports",
                "type": "Identifier",
                "value": "defaultsDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "defer.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003035",
                "name": "baseDelay",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseDelay",
        "longname": "baseDelay",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                96
            ],
            "filename": "defer.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003040",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // => Logs 'deferred' after one millisecond.\n */",
        "meta": {
            "range": [
                622,
                699
            ],
            "filename": "defer.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003048",
                "name": "defer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Defers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it's invoked.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to defer.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to invoke `func` with.",
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the timer id."
            }
        ],
        "examples": [
            "_.defer(function(text) {\n  console.log(text);\n}, 'deferred');\n// => Logs 'deferred' after one millisecond."
        ],
        "name": "defer",
        "longname": "_.defer",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                702,
                724
            ],
            "filename": "defer.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003063",
                "name": "module.exports",
                "type": "Identifier",
                "value": "defer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "delay.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003071",
                "name": "baseDelay",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseDelay",
        "longname": "baseDelay",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                96
            ],
            "filename": "delay.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003076",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                134
            ],
            "filename": "delay.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003081",
                "name": "toNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "toNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => Logs 'later' after one second.\n */",
        "meta": {
            "range": [
                700,
                801
            ],
            "filename": "delay.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003089",
                "name": "delay",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Invokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it's invoked.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to delay.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of milliseconds to delay invocation.",
                "name": "wait"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to invoke `func` with.",
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the timer id."
            }
        ],
        "examples": [
            "_.delay(function(text) {\n  console.log(text);\n}, 1000, 'later');\n// => Logs 'later' after one second."
        ],
        "name": "delay",
        "longname": "_.delay",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                804,
                826
            ],
            "filename": "delay.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003109",
                "name": "module.exports",
                "type": "Identifier",
                "value": "delay",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "difference.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003117",
                "name": "baseDifference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseDifference",
        "longname": "baseDifference",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                112
            ],
            "filename": "difference.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003122",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                160
            ],
            "filename": "difference.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003127",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                166,
                216
            ],
            "filename": "difference.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003132",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */",
        "meta": {
            "range": [
                902,
                1073
            ],
            "filename": "difference.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003140",
                "name": "difference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of `array` values not included in the other given arrays\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. The order and references of result values are\ndetermined by the first array.\n\n**Note:** Unlike `_.pullAll`, this method returns a new array.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The values to exclude.",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "see": [
            "_.without, _.xor"
        ],
        "examples": [
            "_.difference([2, 1], [2, 3]);\n// => [1]"
        ],
        "name": "difference",
        "longname": "_.difference",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1076,
                1103
            ],
            "filename": "difference.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003164",
                "name": "module.exports",
                "type": "Identifier",
                "value": "difference",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "differenceBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003172",
                "name": "baseDifference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseDifference",
        "longname": "baseDifference",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                112
            ],
            "filename": "differenceBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003177",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                168
            ],
            "filename": "differenceBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003182",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                174,
                216
            ],
            "filename": "differenceBy.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003187",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                222,
                272
            ],
            "filename": "differenceBy.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003192",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                278,
                302
            ],
            "filename": "differenceBy.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003197",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */",
        "meta": {
            "range": [
                1246,
                1544
            ],
            "filename": "differenceBy.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003205",
                "name": "differenceBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.difference` except that it accepts `iteratee` which\nis invoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).\n\n**Note:** Unlike `_.pullAllBy`, this method returns a new array.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The values to exclude.",
                "name": "values"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "_.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2]\n\n// The `_.property` iteratee shorthand.\n_.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n// => [{ 'x': 2 }]"
        ],
        "name": "differenceBy",
        "longname": "_.differenceBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1302,
                1325
            ],
            "filename": "differenceBy.js",
            "lineno": 37,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003214",
                "name": "iteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1368,
                1388
            ],
            "filename": "differenceBy.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003225",
                "name": "iteratee",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1547,
                1576
            ],
            "filename": "differenceBy.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003248",
                "name": "module.exports",
                "type": "Identifier",
                "value": "differenceBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "differenceWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003256",
                "name": "baseDifference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseDifference",
        "longname": "baseDifference",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                112
            ],
            "filename": "differenceWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003261",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                160
            ],
            "filename": "differenceWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003266",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                166,
                216
            ],
            "filename": "differenceWith.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003271",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                222,
                246
            ],
            "filename": "differenceWith.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003276",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. The order and\n * references of result values are determined by the first array. The comparator\n * is invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */",
        "meta": {
            "range": [
                1099,
                1401
            ],
            "filename": "differenceWith.js",
            "lineno": 32,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003284",
                "name": "differenceWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.difference` except that it accepts `comparator`\nwhich is invoked to compare elements of `array` to `values`. The order and\nreferences of result values are determined by the first array. The comparator\nis invoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.pullAllWith`, this method returns a new array.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The values to exclude.",
                "name": "values"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The comparator invoked per element.",
                "name": "comparator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\n_.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n// => [{ 'x': 2, 'y': 1 }]"
        ],
        "name": "differenceWith",
        "longname": "_.differenceWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1157,
                1182
            ],
            "filename": "differenceWith.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003293",
                "name": "comparator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1227,
                1249
            ],
            "filename": "differenceWith.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003304",
                "name": "comparator",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1404,
                1435
            ],
            "filename": "differenceWith.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003325",
                "name": "module.exports",
                "type": "Identifier",
                "value": "differenceWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                68
            ],
            "filename": "divide.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003333",
                "name": "createMathOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createMathOperation",
        "longname": "createMathOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Divide two numbers.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Math\n * @param {number} dividend The first number in a division.\n * @param {number} divisor The second number in a division.\n * @author quotient\n * @returns {number} The result of a division.\n * @example\n *\n * _.divide(6, 4);\n * // => 1.5\n */",
        "meta": {
            "range": [
                418,
                511
            ],
            "filename": "divide.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003341",
                "name": "divide",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Divide two numbers.",
        "scope": "static",
        "memberof": "_",
        "since": "4.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The first number in a division.",
                "name": "dividend"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The second number in a division.",
                "name": "divisor"
            }
        ],
        "author": [
            "quotient"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The result of a division."
            }
        ],
        "examples": [
            "_.divide(6, 4);\n// => 1.5"
        ],
        "name": "divide",
        "longname": "_.divide",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                514,
                537
            ],
            "filename": "divide.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003355",
                "name": "module.exports",
                "type": "Identifier",
                "value": "divide",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "drop.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003363",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                88
            ],
            "filename": "drop.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003368",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */",
        "meta": {
            "range": [
                667,
                889
            ],
            "filename": "drop.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003375",
                "name": "drop",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "length": "_.drop~length",
                "n": "_.drop~n"
            }
        },
        "description": "Creates a slice of `array` with `n` elements dropped from the beginning.",
        "scope": "static",
        "memberof": "_",
        "since": "0.5.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of elements to drop.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "_.drop([1, 2, 3]);\n// => [2, 3]\n\n_.drop([1, 2, 3], 2);\n// => [3]\n\n_.drop([1, 2, 3], 5);\n// => []\n\n_.drop([1, 2, 3], 0);\n// => [1, 2, 3]"
        ],
        "name": "drop",
        "longname": "_.drop",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                706,
                747
            ],
            "filename": "drop.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003382",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.drop~length",
        "kind": "member",
        "memberof": "_.drop",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                787,
                836
            ],
            "filename": "drop.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003399",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "_.drop",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.drop~n",
        "kind": "member",
        "memberof": "_.drop",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                891,
                912
            ],
            "filename": "drop.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003423",
                "name": "module.exports",
                "type": "Identifier",
                "value": "drop",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "dropRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003431",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                88
            ],
            "filename": "dropRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003436",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */",
        "meta": {
            "range": [
                681,
                921
            ],
            "filename": "dropRight.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003443",
                "name": "dropRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "length": "_.dropRight~length",
                "n": "_.dropRight~n"
            }
        },
        "description": "Creates a slice of `array` with `n` elements dropped from the end.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of elements to drop.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "_.dropRight([1, 2, 3]);\n// => [1, 2]\n\n_.dropRight([1, 2, 3], 2);\n// => [1]\n\n_.dropRight([1, 2, 3], 5);\n// => []\n\n_.dropRight([1, 2, 3], 0);\n// => [1, 2, 3]"
        ],
        "name": "dropRight",
        "longname": "_.dropRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                725,
                766
            ],
            "filename": "dropRight.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003450",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.dropRight~length",
        "kind": "member",
        "memberof": "_.dropRight",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                806,
                855
            ],
            "filename": "dropRight.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003467",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "_.dropRight",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.dropRight~n",
        "kind": "member",
        "memberof": "_.dropRight",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                859,
                873
            ],
            "filename": "dropRight.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003480",
                "name": "n",
                "type": "BinaryExpression",
                "funcscope": "_.dropRight",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.dropRight~n",
        "kind": "member",
        "memberof": "_.dropRight",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                923,
                949
            ],
            "filename": "dropRight.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003497",
                "name": "module.exports",
                "type": "Identifier",
                "value": "dropRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "dropRightWhile.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003505",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "dropRightWhile.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003510",
                "name": "baseWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseWhile",
        "longname": "baseWhile",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` excluding elements dropped from the end.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.dropRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropRightWhile(users, ['active', false]);\n * // => objects for ['barney']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropRightWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */",
        "meta": {
            "range": [
                1259,
                1410
            ],
            "filename": "dropRightWhile.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003517",
                "name": "dropRightWhile",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate"
                ]
            }
        },
        "description": "Creates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index, array).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.dropRightWhile(users, function(o) { return !o.active; });\n// => objects for ['barney']\n\n// The `_.matches` iteratee shorthand.\n_.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['barney', 'fred']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.dropRightWhile(users, ['active', false]);\n// => objects for ['barney']\n\n// The `_.property` iteratee shorthand.\n_.dropRightWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']"
        ],
        "name": "dropRightWhile",
        "longname": "_.dropRightWhile",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1412,
                1443
            ],
            "filename": "dropRightWhile.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003540",
                "name": "module.exports",
                "type": "Identifier",
                "value": "dropRightWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "dropWhile.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003548",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "dropWhile.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003553",
                "name": "baseWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseWhile",
        "longname": "baseWhile",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` excluding elements dropped from the beginning.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.dropWhile(users, function(o) { return !o.active; });\n * // => objects for ['pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropWhile(users, ['active', false]);\n * // => objects for ['pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */",
        "meta": {
            "range": [
                1247,
                1387
            ],
            "filename": "dropWhile.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003560",
                "name": "dropWhile",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate"
                ]
            }
        },
        "description": "Creates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index, array).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.dropWhile(users, function(o) { return !o.active; });\n// => objects for ['pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.dropWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.dropWhile(users, ['active', false]);\n// => objects for ['pebbles']\n\n// The `_.property` iteratee shorthand.\n_.dropWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']"
        ],
        "name": "dropWhile",
        "longname": "_.dropWhile",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1389,
                1415
            ],
            "filename": "dropWhile.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003582",
                "name": "module.exports",
                "type": "Identifier",
                "value": "dropWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                37
            ],
            "filename": "each.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003590",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                42
            ],
            "filename": "eachRight.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003600",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "endsWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003610",
                "name": "baseClamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClamp",
        "longname": "baseClamp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                104
            ],
            "filename": "endsWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003615",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                144
            ],
            "filename": "endsWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003620",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                150,
                182
            ],
            "filename": "endsWith.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003625",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */",
        "meta": {
            "range": [
                747,
                1102
            ],
            "filename": "endsWith.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003632",
                "name": "endsWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "target",
                    "position"
                ]
            },
            "vars": {
                "string": "_.endsWith~string",
                "target": "_.endsWith~target",
                "length": "_.endsWith~length",
                "position": "_.endsWith~position",
                "end": "_.endsWith~end"
            }
        },
        "description": "Checks if `string` ends with the given target string.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to inspect.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "The string to search for.",
                "name": "target"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "string.length",
                "description": "The position to search up to.",
                "name": "position"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `string` ends with `target`,\n else `false`."
            }
        ],
        "examples": [
            "_.endsWith('abc', 'c');\n// => true\n\n_.endsWith('abc', 'b');\n// => false\n\n_.endsWith('abc', 'b', 2);\n// => true"
        ],
        "name": "endsWith",
        "longname": "_.endsWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                795,
                820
            ],
            "filename": "endsWith.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003639",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.endsWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.endsWith~string",
        "kind": "member",
        "memberof": "_.endsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                824,
                853
            ],
            "filename": "endsWith.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003645",
                "name": "target",
                "type": "CallExpression",
                "funcscope": "_.endsWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "target",
        "longname": "_.endsWith~target",
        "kind": "member",
        "memberof": "_.endsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                862,
                884
            ],
            "filename": "endsWith.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003651",
                "name": "length",
                "type": "MemberExpression",
                "value": "string.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.endsWith~length",
        "kind": "member",
        "memberof": "_.endsWith",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                888,
                982
            ],
            "filename": "endsWith.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003657",
                "name": "position",
                "type": "ConditionalExpression",
                "funcscope": "_.endsWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "position",
        "longname": "_.endsWith~position",
        "kind": "member",
        "memberof": "_.endsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                991,
                1005
            ],
            "filename": "endsWith.js",
            "lineno": 40,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003672",
                "name": "end",
                "type": "Identifier",
                "value": "position"
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.endsWith~end",
        "kind": "member",
        "memberof": "_.endsWith",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1009,
                1034
            ],
            "filename": "endsWith.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003676",
                "name": "position",
                "type": "MemberExpression",
                "funcscope": "_.endsWith",
                "value": "target.length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "position",
        "longname": "_.endsWith~position",
        "kind": "member",
        "memberof": "_.endsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1104,
                1129
            ],
            "filename": "endsWith.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003695",
                "name": "module.exports",
                "type": "Identifier",
                "value": "endsWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                37
            ],
            "filename": "entries.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003703",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                39
            ],
            "filename": "entriesIn.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003713",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {element} element The value to compare.\n * @param {element} element The other value to compare.\n * @author equal\n * @returns {boolean} True if everything is the same, false otherwise.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */",
        "meta": {
            "range": [
                719,
                814
            ],
            "filename": "eq.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003724",
                "name": "eq",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "other"
                ]
            }
        },
        "description": "Performs a\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\ncomparison between two values to determine if they are equivalent.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "element"
                    ]
                },
                "description": "The value to compare.",
                "name": "element"
            },
            {
                "type": {
                    "names": [
                        "element"
                    ]
                },
                "description": "The other value to compare.",
                "name": "element"
            }
        ],
        "author": [
            "equal"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "True if everything is the same, false otherwise."
            }
        ],
        "examples": [
            "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.eq(object, object);\n// => true\n\n_.eq(object, other);\n// => false\n\n_.eq('a', 'a');\n// => true\n\n_.eq('a', Object('a'));\n// => false\n\n_.eq(NaN, NaN);\n// => true"
        ],
        "name": "eq",
        "longname": "_.eq",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                816,
                835
            ],
            "filename": "eq.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003742",
                "name": "module.exports",
                "type": "Identifier",
                "value": "eq",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "escape.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003750",
                "name": "escapeHtmlChar",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escapeHtmlChar",
        "longname": "escapeHtmlChar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                96
            ],
            "filename": "escape.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003755",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match HTML entities and HTML characters. */",
        "meta": {
            "range": [
                174,
                202
            ],
            "filename": "escape.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003763",
                "name": "reUnescapedHtml",
                "type": "Literal",
                "value": "<RegExp /[&<>\"']/g>"
            }
        },
        "description": "Used to match HTML entities and HTML characters.",
        "name": "reUnescapedHtml",
        "longname": "reUnescapedHtml",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                208,
                259
            ],
            "filename": "escape.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003766",
                "name": "reHasUnescapedHtml",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reHasUnescapedHtml",
        "longname": "reHasUnescapedHtml",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} string The string to escape.\n * @author string\n * @returns {escaped} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */",
        "meta": {
            "range": [
                1278,
                1455
            ],
            "filename": "escape.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003773",
                "name": "escape",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string"
                ]
            },
            "vars": {
                "string": "_.escape~string"
            }
        },
        "description": "Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\ncorresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional\ncharacters use a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't need escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value. See\n[Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nWhen working with HTML you should always\n[quote attribute values](http://wonko.com/post/html-escaping) to reduce\nXSS vectors.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to escape.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "escaped"
                    ]
                },
                "description": "Returns the escaped string."
            }
        ],
        "examples": [
            "_.escape('fred, barney, & pebbles');\n// => 'fred, barney, &amp; pebbles'"
        ],
        "name": "escape",
        "longname": "_.escape",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1306,
                1331
            ],
            "filename": "escape.js",
            "lineno": 40,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003778",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.escape",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.escape~string",
        "kind": "member",
        "memberof": "_.escape",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1457,
                1480
            ],
            "filename": "escape.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003800",
                "name": "module.exports",
                "type": "Identifier",
                "value": "escape",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "escapeRegExp.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003808",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */",
        "meta": {
            "range": [
                174,
                210
            ],
            "filename": "escapeRegExp.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003816",
                "name": "reRegExpChar",
                "type": "Literal",
                "value": "<RegExp /[\\\\^$.*+?()[\\]{}|]/g>"
            }
        },
        "description": "Used to match `RegExp`\n[syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).",
        "name": "reRegExpChar",
        "longname": "reRegExpChar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                216,
                261
            ],
            "filename": "escapeRegExp.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003819",
                "name": "reHasRegExpChar",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reHasRegExpChar",
        "longname": "reHasRegExpChar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */",
        "meta": {
            "range": [
                684,
                853
            ],
            "filename": "escapeRegExp.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003826",
                "name": "escapeRegExp",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string"
                ]
            },
            "vars": {
                "string": "_.escapeRegExp~string"
            }
        },
        "description": "Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to escape.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the escaped string."
            }
        ],
        "examples": [
            "_.escapeRegExp('[lodash](https://lodash.com/)');\n// => '\\[lodash\\]\\(https://lodash\\.com/\\)'"
        ],
        "name": "escapeRegExp",
        "longname": "_.escapeRegExp",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                718,
                743
            ],
            "filename": "escapeRegExp.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003831",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.escapeRegExp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.escapeRegExp~string",
        "kind": "member",
        "memberof": "_.escapeRegExp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                855,
                884
            ],
            "filename": "escapeRegExp.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003853",
                "name": "module.exports",
                "type": "Identifier",
                "value": "escapeRegExp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "every.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003861",
                "name": "arrayEvery",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEvery",
        "longname": "arrayEvery",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                100
            ],
            "filename": "every.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003866",
                "name": "baseEvery",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseEvery",
        "longname": "baseEvery",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                156
            ],
            "filename": "every.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003871",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                192
            ],
            "filename": "every.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003876",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                198,
                252
            ],
            "filename": "every.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003881",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */",
        "meta": {
            "range": [
                1638,
                1894
            ],
            "filename": "every.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003888",
                "name": "every",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "predicate",
                    "guard"
                ]
            },
            "vars": {
                "func": "_.every~func",
                "predicate": "_.every~predicate"
            }
        },
        "description": "Checks if `predicate` returns truthy for **all** elements of `collection`.\nIteration is stopped once `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index|key, collection).\n\n**Note:** This method returns `true` for\n[empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n[everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\nelements of empty collections.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if all elements pass the predicate check,\n else `false`."
            }
        ],
        "examples": [
            "_.every([true, 1, null, 'yes'], Boolean);\n// => false\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.every(users, { 'user': 'barney', 'active': false });\n// => false\n\n// The `_.matchesProperty` iteratee shorthand.\n_.every(users, ['active', false]);\n// => true\n\n// The `_.property` iteratee shorthand.\n_.every(users, 'active');\n// => false"
        ],
        "name": "every",
        "longname": "_.every",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1691,
                1742
            ],
            "filename": "every.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003895",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.every~func",
        "kind": "member",
        "memberof": "_.every",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1811,
                1832
            ],
            "filename": "every.js",
            "lineno": 53,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003913",
                "name": "predicate",
                "type": "Identifier",
                "funcscope": "_.every",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "predicate",
        "longname": "_.every~predicate",
        "kind": "member",
        "memberof": "_.every",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1896,
                1918
            ],
            "filename": "every.js",
            "lineno": 58,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003925",
                "name": "module.exports",
                "type": "Identifier",
                "value": "every",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                38
            ],
            "filename": "extend.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003933",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                42
            ],
            "filename": "extendWith.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003943",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "fill.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003953",
                "name": "baseFill",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFill",
        "longname": "baseFill",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                106
            ],
            "filename": "fill.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003958",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */",
        "meta": {
            "range": [
                797,
                1089
            ],
            "filename": "fill.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003965",
                "name": "fill",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value",
                    "start",
                    "end"
                ]
            },
            "vars": {
                "length": "_.fill~length",
                "start": "_.fill~start",
                "end": "_.fill~end"
            }
        },
        "description": "Fills elements of `array` with `value` from `start` up to, but not\nincluding, `end`.\n\n**Note:** This method mutates `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to fill.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to fill `array` with.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The start position.",
                "name": "start"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "array.length",
                "description": "The end position.",
                "name": "end"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns `array`."
            }
        ],
        "examples": [
            "var array = [1, 2, 3];\n\n_.fill(array, 'a');\nconsole.log(array);\n// => ['a', 'a', 'a']\n\n_.fill(Array(3), 2);\n// => [2, 2, 2]\n\n_.fill([4, 6, 8, 10], '*', 1, 3);\n// => [4, '*', '*', 10]"
        ],
        "name": "fill",
        "longname": "_.fill",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                845,
                886
            ],
            "filename": "fill.js",
            "lineno": 36,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100003973",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.fill~length",
        "kind": "member",
        "memberof": "_.fill",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1010,
                1019
            ],
            "filename": "fill.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004004",
                "name": "start",
                "type": "Literal",
                "funcscope": "_.fill",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.fill~start",
        "kind": "member",
        "memberof": "_.fill",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1025,
                1037
            ],
            "filename": "fill.js",
            "lineno": 42,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004008",
                "name": "end",
                "type": "Identifier",
                "funcscope": "_.fill",
                "value": "length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.fill~end",
        "kind": "member",
        "memberof": "_.fill",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1091,
                1112
            ],
            "filename": "fill.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004019",
                "name": "module.exports",
                "type": "Identifier",
                "value": "fill",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "filter.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004027",
                "name": "arrayFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayFilter",
        "longname": "arrayFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                104
            ],
            "filename": "filter.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004032",
                "name": "baseFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFilter",
        "longname": "baseFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                160
            ],
            "filename": "filter.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004037",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                166,
                196
            ],
            "filename": "filter.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004042",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */",
        "meta": {
            "range": [
                1363,
                1521
            ],
            "filename": "filter.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004049",
                "name": "filter",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "predicate"
                ]
            },
            "vars": {
                "func": "_.filter~func"
            }
        },
        "description": "Iterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).\n\n**Note:** Unlike `_.remove`, this method returns a new array.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new filtered array."
            }
        ],
        "see": [
            "_.reject"
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n_.filter(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, { 'age': 36, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.filter(users, 'active');\n// => objects for ['barney']"
        ],
        "name": "filter",
        "longname": "_.filter",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1410,
                1463
            ],
            "filename": "filter.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004055",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.filter~func",
        "kind": "member",
        "memberof": "_.filter",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1523,
                1546
            ],
            "filename": "filter.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004072",
                "name": "module.exports",
                "type": "Identifier",
                "value": "filter",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "find.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004080",
                "name": "createFind",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createFind",
        "longname": "createFind",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                90
            ],
            "filename": "find.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004085",
                "name": "findIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findIndex",
        "longname": "findIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {collection} collection A set of objects.\n * @param {function} predicate The function invoked per iteration.\n * @author element\n * @returns {element} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */",
        "meta": {
            "range": [
                1216,
                1244
            ],
            "filename": "find.js",
            "lineno": 42,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004093",
                "name": "find",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Iterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "collection"
                    ]
                },
                "description": "A set of objects.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "element"
                    ]
                },
                "description": "Returns the matched element, else `undefined`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'age': 36, 'active': true },\n  { 'user': 'fred',    'age': 40, 'active': false },\n  { 'user': 'pebbles', 'age': 1,  'active': true }\n];\n\n_.find(users, function(o) { return o.age < 40; });\n// => object for 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.find(users, { 'age': 1, 'active': true });\n// => object for 'pebbles'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.find(users, ['active', false]);\n// => object for 'fred'\n\n// The `_.property` iteratee shorthand.\n_.find(users, 'active');\n// => object for 'barney'"
        ],
        "name": "find",
        "longname": "_.find",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1247,
                1268
            ],
            "filename": "find.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004099",
                "name": "module.exports",
                "type": "Identifier",
                "value": "find",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "findIndex.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004107",
                "name": "baseFindIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFindIndex",
        "longname": "baseFindIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                112
            ],
            "filename": "findIndex.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004112",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                152
            ],
            "filename": "findIndex.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004117",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                263,
                283
            ],
            "filename": "findIndex.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004125",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */",
        "meta": {
            "range": [
                1330,
                1657
            ],
            "filename": "findIndex.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004130",
                "name": "findIndex",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate",
                    "fromIndex"
                ]
            },
            "vars": {
                "length": "_.findIndex~length",
                "index": "_.findIndex~index"
            }
        },
        "description": "This method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for instead of the element itself.",
        "scope": "static",
        "memberof": "_",
        "since": "1.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The index to search from.",
                "name": "fromIndex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index of the found element, else `-1`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.findIndex(users, function(o) { return o.user == 'barney'; });\n// => 0\n\n// The `_.matches` iteratee shorthand.\n_.findIndex(users, { 'user': 'fred', 'active': false });\n// => 1\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findIndex(users, ['active', false]);\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.findIndex(users, 'active');\n// => 2"
        ],
        "name": "findIndex",
        "longname": "_.findIndex",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1386,
                1427
            ],
            "filename": "findIndex.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004137",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.findIndex~length",
        "kind": "member",
        "memberof": "_.findIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1471,
                1523
            ],
            "filename": "findIndex.js",
            "lineno": 50,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004155",
                "name": "index",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.findIndex~index",
        "kind": "member",
        "memberof": "_.findIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1548,
                1584
            ],
            "filename": "findIndex.js",
            "lineno": 52,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004171",
                "name": "index",
                "type": "CallExpression",
                "funcscope": "_.findIndex",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.findIndex~index",
        "kind": "member",
        "memberof": "_.findIndex",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1659,
                1685
            ],
            "filename": "findIndex.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004189",
                "name": "module.exports",
                "type": "Identifier",
                "value": "findIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "findKey.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004197",
                "name": "baseFindKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFindKey",
        "longname": "baseFindKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                104
            ],
            "filename": "findKey.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004202",
                "name": "baseForOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwn",
        "longname": "baseForOwn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                160
            ],
            "filename": "findKey.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004207",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.find` except that it returns the key of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findKey(users, function(o) { return o.age < 40; });\n * // => 'barney' (iteration order is not guaranteed)\n *\n * // The `_.matches` iteratee shorthand.\n * _.findKey(users, { 'age': 1, 'active': true });\n * // => 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findKey(users, 'active');\n * // => 'barney'\n */",
        "meta": {
            "range": [
                1234,
                1343
            ],
            "filename": "findKey.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004214",
                "name": "findKey",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "predicate"
                ]
            }
        },
        "description": "This method is like `_.find` except that it returns the key of the first\nelement `predicate` returns truthy for instead of the element itself.",
        "scope": "static",
        "memberof": "_",
        "since": "1.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string",
                        "undefined"
                    ]
                },
                "description": "Returns the key of the matched element,\n else `undefined`."
            }
        ],
        "examples": [
            "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findKey(users, function(o) { return o.age < 40; });\n// => 'barney' (iteration order is not guaranteed)\n\n// The `_.matches` iteratee shorthand.\n_.findKey(users, { 'age': 1, 'active': true });\n// => 'pebbles'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findKey(users, 'active');\n// => 'barney'"
        ],
        "name": "findKey",
        "longname": "_.findKey",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1345,
                1369
            ],
            "filename": "findKey.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004229",
                "name": "module.exports",
                "type": "Identifier",
                "value": "findKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "findLast.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004237",
                "name": "createFind",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createFind",
        "longname": "createFind",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                98
            ],
            "filename": "findLast.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004242",
                "name": "findLastIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findLastIndex",
        "longname": "findLastIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.find` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=collection.length-1] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(n) {\n *   return n % 2 == 1;\n * });\n * // => 3\n */",
        "meta": {
            "range": [
                688,
                724
            ],
            "filename": "findLast.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004250",
                "name": "findLast",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to inspect.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "collection.length-1",
                "description": "The index to search from.",
                "name": "fromIndex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the matched element, else `undefined`."
            }
        ],
        "examples": [
            "_.findLast([1, 2, 3, 4], function(n) {\n  return n % 2 == 1;\n});\n// => 3"
        ],
        "name": "findLast",
        "longname": "_.findLast",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                727,
                752
            ],
            "filename": "findLast.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004256",
                "name": "module.exports",
                "type": "Identifier",
                "value": "findLast",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "findLastIndex.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004264",
                "name": "baseFindIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFindIndex",
        "longname": "baseFindIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                112
            ],
            "filename": "findLastIndex.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004269",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                152
            ],
            "filename": "findLastIndex.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004274",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                263,
                283
            ],
            "filename": "findLastIndex.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004282",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                289,
                309
            ],
            "filename": "findLastIndex.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004287",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */",
        "meta": {
            "range": [
                1350,
                1760
            ],
            "filename": "findLastIndex.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004292",
                "name": "findLastIndex",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate",
                    "fromIndex"
                ]
            },
            "vars": {
                "length": "_.findLastIndex~length",
                "index": "_.findLastIndex~index"
            }
        },
        "description": "This method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "array.length-1",
                "description": "The index to search from.",
                "name": "fromIndex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index of the found element, else `-1`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n// => 2\n\n// The `_.matches` iteratee shorthand.\n_.findLastIndex(users, { 'user': 'barney', 'active': true });\n// => 0\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastIndex(users, ['active', false]);\n// => 2\n\n// The `_.property` iteratee shorthand.\n_.findLastIndex(users, 'active');\n// => 0"
        ],
        "name": "findLastIndex",
        "longname": "_.findLastIndex",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1410,
                1451
            ],
            "filename": "findLastIndex.js",
            "lineno": 47,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004299",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.findLastIndex~length",
        "kind": "member",
        "memberof": "_.findLastIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1495,
                1513
            ],
            "filename": "findLastIndex.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004317",
                "name": "index",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.findLastIndex~index",
        "kind": "member",
        "memberof": "_.findLastIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1552,
                1580
            ],
            "filename": "findLastIndex.js",
            "lineno": 53,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004328",
                "name": "index",
                "type": "CallExpression",
                "funcscope": "_.findLastIndex",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.findLastIndex~index",
        "kind": "member",
        "memberof": "_.findLastIndex",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1586,
                1681
            ],
            "filename": "findLastIndex.js",
            "lineno": 54,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004334",
                "name": "index",
                "type": "ConditionalExpression",
                "funcscope": "_.findLastIndex",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.findLastIndex~index",
        "kind": "member",
        "memberof": "_.findLastIndex",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1762,
                1792
            ],
            "filename": "findLastIndex.js",
            "lineno": 61,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004363",
                "name": "module.exports",
                "type": "Identifier",
                "value": "findLastIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "findLastKey.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004371",
                "name": "baseFindKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFindKey",
        "longname": "baseFindKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                114
            ],
            "filename": "findLastKey.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004376",
                "name": "baseForOwnRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwnRight",
        "longname": "baseForOwnRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                120,
                170
            ],
            "filename": "findLastKey.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004381",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.findKey` except that it iterates over elements of\n * a collection in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findLastKey(users, function(o) { return o.age < 40; });\n * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastKey(users, { 'age': 36, 'active': true });\n * // => 'barney'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastKey(users, 'active');\n * // => 'pebbles'\n */",
        "meta": {
            "range": [
                1238,
                1356
            ],
            "filename": "findLastKey.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004388",
                "name": "findLastKey",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "predicate"
                ]
            }
        },
        "description": "This method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string",
                        "undefined"
                    ]
                },
                "description": "Returns the key of the matched element,\n else `undefined`."
            }
        ],
        "examples": [
            "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findLastKey(users, function(o) { return o.age < 40; });\n// => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.findLastKey(users, { 'age': 36, 'active': true });\n// => 'barney'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findLastKey(users, 'active');\n// => 'pebbles'"
        ],
        "name": "findLastKey",
        "longname": "_.findLastKey",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1358,
                1386
            ],
            "filename": "findLastKey.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004403",
                "name": "module.exports",
                "type": "Identifier",
                "value": "findLastKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                34
            ],
            "filename": "first.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004411",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "flatMap.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004421",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                80
            ],
            "filename": "flatMap.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004426",
                "name": "map",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "map",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */",
        "meta": {
            "range": [
                714,
                808
            ],
            "filename": "flatMap.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004433",
                "name": "flatMap",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee"
                ]
            }
        },
        "description": "Creates a flattened array of values by running each element in `collection`\nthru `iteratee` and flattening the mapped results. The iteratee is invoked\nwith three arguments: (value, index|key, collection).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new flattened array."
            }
        ],
        "examples": [
            "function duplicate(n) {\n  return [n, n];\n}\n\n_.flatMap([1, 2], duplicate);\n// => [1, 1, 2, 2]"
        ],
        "name": "flatMap",
        "longname": "_.flatMap",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                810,
                834
            ],
            "filename": "flatMap.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004447",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flatMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "flatMapDeep.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004455",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                80
            ],
            "filename": "flatMapDeep.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004460",
                "name": "map",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "map",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                160,
                176
            ],
            "filename": "flatMapDeep.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004468",
                "name": "INFINITY",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "INFINITY",
        "longname": "INFINITY",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDeep([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */",
        "meta": {
            "range": [
                683,
                788
            ],
            "filename": "flatMapDeep.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004473",
                "name": "flatMapDeep",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.flatMap` except that it recursively flattens the\nmapped results.",
        "scope": "static",
        "memberof": "_",
        "since": "4.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new flattened array."
            }
        ],
        "examples": [
            "function duplicate(n) {\n  return [[[n, n]]];\n}\n\n_.flatMapDeep([1, 2], duplicate);\n// => [1, 1, 2, 2]"
        ],
        "name": "flatMapDeep",
        "longname": "_.flatMapDeep",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                790,
                818
            ],
            "filename": "flatMapDeep.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004487",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flatMapDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "flatMapDepth.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004495",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                80
            ],
            "filename": "flatMapDepth.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004500",
                "name": "map",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "map",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                86,
                120
            ],
            "filename": "flatMapDepth.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004505",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDepth([1, 2], duplicate, 2);\n * // => [[1, 1], [2, 2]]\n */",
        "meta": {
            "range": [
                728,
                892
            ],
            "filename": "flatMapDepth.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004512",
                "name": "flatMapDepth",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee",
                    "depth"
                ]
            },
            "vars": {
                "depth": "_.flatMapDepth~depth"
            }
        },
        "description": "This method is like `_.flatMap` except that it recursively flattens the\nmapped results up to `depth` times.",
        "scope": "static",
        "memberof": "_",
        "since": "4.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The maximum recursion depth.",
                "name": "depth"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new flattened array."
            }
        ],
        "examples": [
            "function duplicate(n) {\n  return [[[n, n]]];\n}\n\n_.flatMapDepth([1, 2], duplicate, 2);\n// => [[1, 1], [2, 2]]"
        ],
        "name": "flatMapDepth",
        "longname": "_.flatMapDepth",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                783,
                833
            ],
            "filename": "flatMapDepth.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004519",
                "name": "depth",
                "type": "ConditionalExpression",
                "funcscope": "_.flatMapDepth",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "depth",
        "longname": "_.flatMapDepth~depth",
        "kind": "member",
        "memberof": "_.flatMapDepth",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                894,
                923
            ],
            "filename": "flatMapDepth.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004538",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flatMapDepth",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "flatten.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004546",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */",
        "meta": {
            "range": [
                363,
                485
            ],
            "filename": "flatten.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004553",
                "name": "flatten",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "length": "_.flatten~length"
            }
        },
        "description": "Flattens `array` a single level deep.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to flatten.",
                "name": "array"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new flattened array."
            }
        ],
        "examples": [
            "_.flatten([1, [2, [3, [4]], 5]]);\n// => [1, 2, [3, [4]], 5]"
        ],
        "name": "flatten",
        "longname": "_.flatten",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                395,
                436
            ],
            "filename": "flatten.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004558",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.flatten~length",
        "kind": "member",
        "memberof": "_.flatten",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                487,
                511
            ],
            "filename": "flatten.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004577",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flatten",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "flattenDeep.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004585",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                132,
                148
            ],
            "filename": "flattenDeep.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004593",
                "name": "INFINITY",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "INFINITY",
        "longname": "INFINITY",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */",
        "meta": {
            "range": [
                436,
                569
            ],
            "filename": "flattenDeep.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004598",
                "name": "flattenDeep",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "length": "_.flattenDeep~length"
            }
        },
        "description": "Recursively flattens `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to flatten.",
                "name": "array"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new flattened array."
            }
        ],
        "examples": [
            "_.flattenDeep([1, [2, [3, [4]], 5]]);\n// => [1, 2, 3, 4, 5]"
        ],
        "name": "flattenDeep",
        "longname": "_.flattenDeep",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                472,
                513
            ],
            "filename": "flattenDeep.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004603",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.flattenDeep~length",
        "kind": "member",
        "memberof": "_.flattenDeep",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                571,
                599
            ],
            "filename": "flattenDeep.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004622",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flattenDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "flattenDepth.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004630",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                92
            ],
            "filename": "flattenDepth.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004635",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */",
        "meta": {
            "range": [
                564,
                778
            ],
            "filename": "flattenDepth.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004642",
                "name": "flattenDepth",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "depth"
                ]
            },
            "vars": {
                "length": "_.flattenDepth~length",
                "depth": "_.flattenDepth~depth"
            }
        },
        "description": "Recursively flatten `array` up to `depth` times.",
        "scope": "static",
        "memberof": "_",
        "since": "4.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to flatten.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The maximum recursion depth.",
                "name": "depth"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new flattened array."
            }
        ],
        "examples": [
            "var array = [1, [2, [3, [4]], 5]];\n\n_.flattenDepth(array, 1);\n// => [1, 2, [3, [4]], 5]\n\n_.flattenDepth(array, 2);\n// => [1, 2, 3, [4], 5]"
        ],
        "name": "flattenDepth",
        "longname": "_.flattenDepth",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                608,
                649
            ],
            "filename": "flattenDepth.js",
            "lineno": 27,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004648",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.flattenDepth~length",
        "kind": "member",
        "memberof": "_.flattenDepth",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                689,
                739
            ],
            "filename": "flattenDepth.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004665",
                "name": "depth",
                "type": "ConditionalExpression",
                "funcscope": "_.flattenDepth",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "depth",
        "longname": "_.flattenDepth~depth",
        "kind": "member",
        "memberof": "_.flattenDepth",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                780,
                809
            ],
            "filename": "flattenDepth.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004681",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flattenDepth",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "flip.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004689",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                127,
                147
            ],
            "filename": "flip.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004697",
                "name": "WRAP_FLIP_FLAG",
                "type": "Literal",
                "value": 512
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_FLIP_FLAG",
        "longname": "WRAP_FLIP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with arguments reversed.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to flip arguments for.\n * @returns {Function} Returns the new flipped function.\n * @example\n *\n * var flipped = _.flip(function() {\n *   return _.toArray(arguments);\n * });\n *\n * flipped('a', 'b', 'c', 'd');\n * // => ['d', 'c', 'b', 'a']\n */",
        "meta": {
            "range": [
                569,
                635
            ],
            "filename": "flip.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004700",
                "name": "flip",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func"
                ]
            }
        },
        "description": "Creates a function that invokes `func` with arguments reversed.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to flip arguments for.",
                "name": "func"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new flipped function."
            }
        ],
        "examples": [
            "var flipped = _.flip(function() {\n  return _.toArray(arguments);\n});\n\nflipped('a', 'b', 'c', 'd');\n// => ['d', 'c', 'b', 'a']"
        ],
        "name": "flip",
        "longname": "_.flip",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                637,
                658
            ],
            "filename": "flip.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004710",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flip",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "floor.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004718",
                "name": "createRound",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRound",
        "longname": "createRound",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes `number` rounded down to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round down.\n * @param {number} [precision=0] The precision to round down to.\n * @returns {number} Returns the rounded down number.\n * @example\n *\n * _.floor(4.006);\n * // => 4\n *\n * _.floor(0.046, 2);\n * // => 0.04\n *\n * _.floor(4060, -2);\n * // => 4000\n */",
        "meta": {
            "range": [
                490,
                518
            ],
            "filename": "floor.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004726",
                "name": "floor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Computes `number` rounded down to `precision`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.10.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to round down.",
                "name": "number"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The precision to round down to.",
                "name": "precision"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the rounded down number."
            }
        ],
        "examples": [
            "_.floor(4.006);\n// => 4\n\n_.floor(0.046, 2);\n// => 0.04\n\n_.floor(4060, -2);\n// => 4000"
        ],
        "name": "floor",
        "longname": "_.floor",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                521,
                543
            ],
            "filename": "floor.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004732",
                "name": "module.exports",
                "type": "Identifier",
                "value": "floor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "flow.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004740",
                "name": "createFlow",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createFlow",
        "longname": "createFlow",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */",
        "meta": {
            "range": [
                645,
                664
            ],
            "filename": "flow.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004748",
                "name": "flow",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that returns the result of invoking the given functions\nwith the `this` binding of the created function, where each successive\ninvocation is supplied the return value of the previous.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function",
                        "Array.<function()>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The functions to invoke.",
                "name": "funcs"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new composite function."
            }
        ],
        "see": [
            "_.flowRight"
        ],
        "examples": [
            "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flow([_.add, square]);\naddSquare(1, 2);\n// => 9"
        ],
        "name": "flow",
        "longname": "_.flow",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                667,
                688
            ],
            "filename": "flow.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004753",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flow",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "flowRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004761",
                "name": "createFlow",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createFlow",
        "longname": "createFlow",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.flow` except that it creates a function that\n * invokes the given functions from right to left.\n *\n * @static\n * @since 3.0.0\n * @memberOf _\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flow\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flowRight([square, _.add]);\n * addSquare(1, 2);\n * // => 9\n */",
        "meta": {
            "range": [
                555,
                583
            ],
            "filename": "flowRight.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004769",
                "name": "flowRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.flow` except that it creates a function that\ninvokes the given functions from right to left.",
        "scope": "static",
        "since": "3.0.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function",
                        "Array.<function()>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The functions to invoke.",
                "name": "funcs"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new composite function."
            }
        ],
        "see": [
            "_.flow"
        ],
        "examples": [
            "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flowRight([square, _.add]);\naddSquare(1, 2);\n// => 9"
        ],
        "name": "flowRight",
        "longname": "_.flowRight",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                586,
                612
            ],
            "filename": "flowRight.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004775",
                "name": "module.exports",
                "type": "Identifier",
                "value": "flowRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "forEach.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004783",
                "name": "arrayEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEach",
        "longname": "arrayEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                96
            ],
            "filename": "forEach.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004788",
                "name": "baseEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseEach",
        "longname": "baseEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                152
            ],
            "filename": "forEach.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004793",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                158,
                188
            ],
            "filename": "forEach.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004798",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */",
        "meta": {
            "range": [
                1219,
                1369
            ],
            "filename": "forEach.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004805",
                "name": "forEach",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee"
                ]
            },
            "vars": {
                "func": "_.each~func"
            }
        },
        "description": "Iterates over elements of `collection` and invokes `iteratee` for each element.\nThe iteratee is invoked with three arguments: (value, index|key, collection).\nIteratee functions may exit iteration early by explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a \"length\"\nproperty are iterated like arrays. To avoid this behavior use `_.forIn`\nor `_.forOwn` for object iteration.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "alias": "each",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "Returns `collection`."
            }
        ],
        "see": [
            "_.forEachRight"
        ],
        "examples": [
            "_.forEach([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `1` then `2`.\n\n_.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed)."
        ],
        "name": "each",
        "longname": "_.each",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1266,
                1315
            ],
            "filename": "forEach.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004811",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.each~func",
        "kind": "member",
        "memberof": "_.each",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1371,
                1395
            ],
            "filename": "forEach.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004827",
                "name": "module.exports",
                "type": "Identifier",
                "value": "forEach",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "forEachRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004835",
                "name": "arrayEachRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEachRight",
        "longname": "arrayEachRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                116
            ],
            "filename": "forEachRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004840",
                "name": "baseEachRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseEachRight",
        "longname": "baseEachRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                122,
                172
            ],
            "filename": "forEachRight.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004845",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                178,
                208
            ],
            "filename": "forEachRight.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004850",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.forEach` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @alias eachRight\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEach\n * @example\n *\n * _.forEachRight([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `2` then `1`.\n */",
        "meta": {
            "range": [
                768,
                933
            ],
            "filename": "forEachRight.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004857",
                "name": "forEachRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee"
                ]
            },
            "vars": {
                "func": "_.eachRight~func"
            }
        },
        "description": "This method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "alias": "eachRight",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "Returns `collection`."
            }
        ],
        "see": [
            "_.forEach"
        ],
        "examples": [
            "_.forEachRight([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `2` then `1`."
        ],
        "name": "eachRight",
        "longname": "_.eachRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                820,
                879
            ],
            "filename": "forEachRight.js",
            "lineno": 29,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004863",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.eachRight~func",
        "kind": "member",
        "memberof": "_.eachRight",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                935,
                964
            ],
            "filename": "forEachRight.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004879",
                "name": "module.exports",
                "type": "Identifier",
                "value": "forEachRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "forIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004887",
                "name": "baseFor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFor",
        "longname": "baseFor",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                100
            ],
            "filename": "forIn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004892",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                134
            ],
            "filename": "forIn.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004897",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */",
        "meta": {
            "range": [
                944,
                1072
            ],
            "filename": "forIn.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004904",
                "name": "forIn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee"
                ]
            }
        },
        "description": "Iterates over own and inherited enumerable string keyed properties of an\nobject and invokes `iteratee` for each property. The iteratee is invoked\nwith three arguments: (value, key, object). Iteratee functions may exit\niteration early by explicitly returning `false`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.forInRight"
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forIn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a', 'b', then 'c' (iteration order is not guaranteed)."
        ],
        "name": "forIn",
        "longname": "_.forIn",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1074,
                1096
            ],
            "filename": "forIn.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004923",
                "name": "module.exports",
                "type": "Identifier",
                "value": "forIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "forInRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004931",
                "name": "baseForRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForRight",
        "longname": "baseForRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                110
            ],
            "filename": "forInRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004936",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                144
            ],
            "filename": "forInRight.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004941",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n */",
        "meta": {
            "range": [
                793,
                931
            ],
            "filename": "forInRight.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004948",
                "name": "forInRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.forIn"
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forInRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'."
        ],
        "name": "forInRight",
        "longname": "_.forInRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                933,
                960
            ],
            "filename": "forInRight.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004967",
                "name": "module.exports",
                "type": "Identifier",
                "value": "forInRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "forOwn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004975",
                "name": "baseForOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwn",
        "longname": "baseForOwn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                106
            ],
            "filename": "forOwn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004980",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */",
        "meta": {
            "range": [
                898,
                998
            ],
            "filename": "forOwn.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100004987",
                "name": "forOwn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee"
                ]
            }
        },
        "description": "Iterates over own enumerable string keyed properties of an object and\ninvokes `iteratee` for each property. The iteratee is invoked with three\narguments: (value, key, object). Iteratee functions may exit iteration\nearly by explicitly returning `false`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.forOwnRight"
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed)."
        ],
        "name": "forOwn",
        "longname": "_.forOwn",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1000,
                1023
            ],
            "filename": "forOwn.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005002",
                "name": "module.exports",
                "type": "Identifier",
                "value": "forOwn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "forOwnRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005010",
                "name": "baseForOwnRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwnRight",
        "longname": "baseForOwnRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                116
            ],
            "filename": "forOwnRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005015",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.forOwn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwnRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n */",
        "meta": {
            "range": [
                757,
                867
            ],
            "filename": "forOwnRight.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005022",
                "name": "forOwnRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "see": [
            "_.forOwn"
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwnRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'."
        ],
        "name": "forOwnRight",
        "longname": "_.forOwnRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                869,
                897
            ],
            "filename": "forOwnRight.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005037",
                "name": "module.exports",
                "type": "Identifier",
                "value": "forOwnRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */",
        "meta": {
            "range": [
                355,
                581
            ],
            "filename": "fromPairs.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005046",
                "name": "fromPairs",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "pairs"
                ]
            },
            "vars": {
                "index": "_.fromPairs~index",
                "length": "_.fromPairs~length",
                "result": "_.fromPairs~result",
                "pair": "_.fromPairs~pair",
                "result[undefined]": "_.fromPairs~result.undefined]"
            }
        },
        "description": "The inverse of `_.toPairs`; this method returns an object composed\nfrom key-value `pairs`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The key-value pairs.",
                "name": "pairs"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "_.fromPairs([['a', 1], ['b', 2]]);\n// => { 'a': 1, 'b': 2 }"
        ],
        "name": "fromPairs",
        "longname": "_.fromPairs",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                389,
                399
            ],
            "filename": "fromPairs.js",
            "lineno": 19,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005051",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.fromPairs~index",
        "kind": "member",
        "memberof": "_.fromPairs",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                407,
                448
            ],
            "filename": "fromPairs.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005055",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.fromPairs~length",
        "kind": "member",
        "memberof": "_.fromPairs",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                456,
                467
            ],
            "filename": "fromPairs.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005065",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.fromPairs~result",
        "kind": "member",
        "memberof": "_.fromPairs",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                507,
                526
            ],
            "filename": "fromPairs.js",
            "lineno": 24,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005075",
                "name": "pair",
                "type": "MemberExpression",
                "value": "pairs[undefined]"
            }
        },
        "undocumented": true,
        "name": "pair",
        "longname": "_.fromPairs~pair",
        "kind": "member",
        "memberof": "_.fromPairs",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                532,
                557
            ],
            "filename": "fromPairs.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005081",
                "name": "result[undefined]",
                "type": "MemberExpression",
                "funcscope": "_.fromPairs",
                "value": "pair[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "_.fromPairs~result.undefined]",
        "kind": "member",
        "memberof": "_.fromPairs~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                583,
                609
            ],
            "filename": "fromPairs.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005093",
                "name": "module.exports",
                "type": "Identifier",
                "value": "fromPairs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                778
            ],
            "filename": "function.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005101",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                48
            ],
            "filename": "function.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005106",
                "name": "after",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "after",
        "longname": "module.exports.after",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                75
            ],
            "filename": "function.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005110",
                "name": "ary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ary",
        "longname": "module.exports.ary",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                79,
                108
            ],
            "filename": "function.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005114",
                "name": "before",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "before",
        "longname": "module.exports.before",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                137
            ],
            "filename": "function.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005118",
                "name": "bind",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bind",
        "longname": "module.exports.bind",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                141,
                172
            ],
            "filename": "function.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005122",
                "name": "bindKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bindKey",
        "longname": "module.exports.bindKey",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                176,
                203
            ],
            "filename": "function.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005126",
                "name": "curry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "curry",
        "longname": "module.exports.curry",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                207,
                244
            ],
            "filename": "function.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005130",
                "name": "curryRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "curryRight",
        "longname": "module.exports.curryRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                248,
                281
            ],
            "filename": "function.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005134",
                "name": "debounce",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "debounce",
        "longname": "module.exports.debounce",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                285,
                312
            ],
            "filename": "function.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005138",
                "name": "defer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "defer",
        "longname": "module.exports.defer",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                316,
                343
            ],
            "filename": "function.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005142",
                "name": "delay",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "delay",
        "longname": "module.exports.delay",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                347,
                372
            ],
            "filename": "function.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005146",
                "name": "flip",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flip",
        "longname": "module.exports.flip",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                376,
                407
            ],
            "filename": "function.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005150",
                "name": "memoize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "memoize",
        "longname": "module.exports.memoize",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                411,
                440
            ],
            "filename": "function.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005154",
                "name": "negate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "negate",
        "longname": "module.exports.negate",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                444,
                469
            ],
            "filename": "function.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005158",
                "name": "once",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "once",
        "longname": "module.exports.once",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                473,
                506
            ],
            "filename": "function.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005162",
                "name": "overArgs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "overArgs",
        "longname": "module.exports.overArgs",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                510,
                541
            ],
            "filename": "function.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005166",
                "name": "partial",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "partial",
        "longname": "module.exports.partial",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                545,
                586
            ],
            "filename": "function.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005170",
                "name": "partialRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "partialRight",
        "longname": "module.exports.partialRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                590,
                617
            ],
            "filename": "function.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005174",
                "name": "rearg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "rearg",
        "longname": "module.exports.rearg",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                621,
                646
            ],
            "filename": "function.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005178",
                "name": "rest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "rest",
        "longname": "module.exports.rest",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                650,
                679
            ],
            "filename": "function.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005182",
                "name": "spread",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "spread",
        "longname": "module.exports.spread",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                683,
                716
            ],
            "filename": "function.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005186",
                "name": "throttle",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "throttle",
        "longname": "module.exports.throttle",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                720,
                747
            ],
            "filename": "function.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005190",
                "name": "unary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unary",
        "longname": "module.exports.unary",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                751,
                776
            ],
            "filename": "function.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005194",
                "name": "wrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "wrap",
        "longname": "module.exports.wrap",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "functions.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005201",
                "name": "baseFunctions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFunctions",
        "longname": "baseFunctions",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                86
            ],
            "filename": "functions.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005206",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of function property names from own enumerable properties\n * of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the function names.\n * @see _.functionsIn\n * @example\n *\n * function Foo() {\n *   this.a = _.constant('a');\n *   this.b = _.constant('b');\n * }\n *\n * Foo.prototype.c = _.constant('c');\n *\n * _.functions(new Foo);\n * // => ['a', 'b']\n */",
        "meta": {
            "range": [
                581,
                679
            ],
            "filename": "functions.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005213",
                "name": "functions",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            }
        },
        "description": "Creates an array of function property names from own enumerable properties\nof `object`.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the function names."
            }
        ],
        "see": [
            "_.functionsIn"
        ],
        "examples": [
            "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functions(new Foo);\n// => ['a', 'b']"
        ],
        "name": "functions",
        "longname": "_.functions",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                681,
                707
            ],
            "filename": "functions.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005230",
                "name": "module.exports",
                "type": "Identifier",
                "value": "functions",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "functionsIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005238",
                "name": "baseFunctions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFunctions",
        "longname": "baseFunctions",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                90
            ],
            "filename": "functionsIn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005243",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of function property names from own and inherited\n * enumerable properties of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the function names.\n * @see _.functions\n * @example\n *\n * function Foo() {\n *   this.a = _.constant('a');\n *   this.b = _.constant('b');\n * }\n *\n * Foo.prototype.c = _.constant('c');\n *\n * _.functionsIn(new Foo);\n * // => ['a', 'b', 'c']\n */",
        "meta": {
            "range": [
                604,
                706
            ],
            "filename": "functionsIn.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005250",
                "name": "functionsIn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            }
        },
        "description": "Creates an array of function property names from own and inherited\nenumerable properties of `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the function names."
            }
        ],
        "see": [
            "_.functions"
        ],
        "examples": [
            "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functionsIn(new Foo);\n// => ['a', 'b', 'c']"
        ],
        "name": "functionsIn",
        "longname": "_.functionsIn",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                708,
                736
            ],
            "filename": "functionsIn.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005267",
                "name": "module.exports",
                "type": "Identifier",
                "value": "functionsIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "get.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005275",
                "name": "baseGet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGet",
        "longname": "baseGet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */",
        "meta": {
            "range": [
                718,
                884
            ],
            "filename": "get.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005282",
                "name": "get",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path",
                    "defaultValue"
                ]
            },
            "vars": {
                "result": "_.get~result"
            }
        },
        "description": "Gets the value at `path` of `object`. If the resolved value is\n`undefined`, the `defaultValue` is returned in its place.",
        "scope": "static",
        "memberof": "_",
        "since": "3.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to get.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "description": "The value returned for `undefined` resolved values.",
                "name": "defaultValue"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the resolved value."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.get(object, 'a[0].b.c');\n// => 3\n\n_.get(object, ['a', '0', 'b', 'c']);\n// => 3\n\n_.get(object, 'a.b.c', 'default');\n// => 'default'"
        ],
        "name": "get",
        "longname": "_.get",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                767,
                826
            ],
            "filename": "get.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005289",
                "name": "result",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.get~result",
        "kind": "member",
        "memberof": "_.get",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                886,
                906
            ],
            "filename": "get.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005308",
                "name": "module.exports",
                "type": "Identifier",
                "value": "get",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6,
                39
            ],
            "filename": "getRepo.js",
            "lineno": 1,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005316",
                "name": "request",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "request",
        "longname": "request",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                326
            ],
            "filename": "getRepo.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005322",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "args"
                ]
            },
            "vars": {
                "uri": "module.exports~uri",
                "argsToreplace": "module.exports~argsToreplace",
                "": null,
                "res": "module.exports~res"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                78,
                134
            ],
            "filename": "getRepo.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005331",
                "name": "uri",
                "type": "Literal",
                "value": "https://api.github.com/repos/user_name/repo_name"
            }
        },
        "undocumented": true,
        "name": "uri",
        "longname": "module.exports~uri",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                142,
                183
            ],
            "filename": "getRepo.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005335",
                "name": "argsToreplace",
                "type": "ArrayExpression",
                "value": "[\"user_name\",\"repo_name\"]"
            }
        },
        "undocumented": true,
        "name": "argsToreplace",
        "longname": "module.exports~argsToreplace",
        "kind": "constant",
        "memberof": "module.exports",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                224,
                258
            ],
            "filename": "getRepo.js",
            "lineno": 6,
            "columnno": 39,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005350",
                "name": "uri",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "uri",
        "longname": "<anonymous>~uri",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                270,
                295
            ],
            "filename": "getRepo.js",
            "lineno": 7,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005361",
                "name": "res",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "module.exports~res",
        "kind": "constant",
        "memberof": "module.exports",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15,
                62
            ],
            "filename": "getTime.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005378",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Gets the a birth-date and returns the corresponding astrological sign.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @param {date} date A calendar date is a reference to a particular day represented within a calendar system.\n * @author star_sign\n * @returns {string} A person's astrogical sign.\n */",
        "meta": {
            "range": [
                341,
                1062
            ],
            "filename": "getZodiac.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005393",
                "name": "getZodiac",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "date"
                ]
            },
            "vars": {
                "temp": "_.getZodiac~temp",
                "zodiac": "_.getZodiac~zodiac",
                "z": "_.getZodiac~z",
                "endDate": "_.getZodiac~endDate"
            }
        },
        "description": "Gets the a birth-date and returns the corresponding astrological sign.",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Date",
                "value": "Date"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "date"
                    ]
                },
                "description": "A calendar date is a reference to a particular day represented within a calendar system.",
                "name": "date"
            }
        ],
        "author": [
            "star_sign"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A person's astrogical sign."
            }
        ],
        "name": "getZodiac",
        "longname": "_.getZodiac",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                374,
                395
            ],
            "filename": "getZodiac.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005398",
                "name": "temp",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "temp",
        "longname": "_.getZodiac~temp",
        "kind": "member",
        "memberof": "_.getZodiac",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                403,
                884
            ],
            "filename": "getZodiac.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005404",
                "name": "zodiac",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "zodiac",
        "longname": "_.getZodiac~zodiac",
        "kind": "member",
        "memberof": "_.getZodiac",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                418,
                451
            ],
            "filename": "getZodiac.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005407",
                "name": "Capricorn1",
                "type": "ObjectExpression",
                "value": "{\"undefined\":20}"
            }
        },
        "undocumented": true,
        "name": "Capricorn1",
        "longname": "_.getZodiac~zodiac.Capricorn1",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                434,
                440
            ],
            "filename": "getZodiac.js",
            "lineno": 17,
            "columnno": 20,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005409",
                "name": "m",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Capricorn1.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Capricorn1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                442,
                449
            ],
            "filename": "getZodiac.js",
            "lineno": 17,
            "columnno": 28,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005411",
                "name": "d",
                "type": "Literal",
                "value": 20
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Capricorn1.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Capricorn1",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                457,
                488
            ],
            "filename": "getZodiac.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005413",
                "name": "Aquarius",
                "type": "ObjectExpression",
                "value": "{\"undefined\":19}"
            }
        },
        "undocumented": true,
        "name": "Aquarius",
        "longname": "_.getZodiac~zodiac.Aquarius",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                471,
                477
            ],
            "filename": "getZodiac.js",
            "lineno": 18,
            "columnno": 18,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005415",
                "name": "m",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Aquarius.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Aquarius",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                479,
                486
            ],
            "filename": "getZodiac.js",
            "lineno": 18,
            "columnno": 26,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005417",
                "name": "d",
                "type": "Literal",
                "value": 19
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Aquarius.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Aquarius",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                523
            ],
            "filename": "getZodiac.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005419",
                "name": "Pisces",
                "type": "ObjectExpression",
                "value": "{\"undefined\":20}"
            }
        },
        "undocumented": true,
        "name": "Pisces",
        "longname": "_.getZodiac~zodiac.Pisces",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                506,
                512
            ],
            "filename": "getZodiac.js",
            "lineno": 19,
            "columnno": 16,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005421",
                "name": "m",
                "type": "Literal",
                "value": 2
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Pisces.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Pisces",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                514,
                521
            ],
            "filename": "getZodiac.js",
            "lineno": 19,
            "columnno": 24,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005423",
                "name": "d",
                "type": "Literal",
                "value": 20
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Pisces.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Pisces",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                529,
                557
            ],
            "filename": "getZodiac.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005425",
                "name": "Aries",
                "type": "ObjectExpression",
                "value": "{\"undefined\":20}"
            }
        },
        "undocumented": true,
        "name": "Aries",
        "longname": "_.getZodiac~zodiac.Aries",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                540,
                546
            ],
            "filename": "getZodiac.js",
            "lineno": 20,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005427",
                "name": "m",
                "type": "Literal",
                "value": 3
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Aries.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Aries",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                548,
                555
            ],
            "filename": "getZodiac.js",
            "lineno": 20,
            "columnno": 23,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005429",
                "name": "d",
                "type": "Literal",
                "value": 20
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Aries.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Aries",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                563,
                592
            ],
            "filename": "getZodiac.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005431",
                "name": "Taurus",
                "type": "ObjectExpression",
                "value": "{\"undefined\":21}"
            }
        },
        "undocumented": true,
        "name": "Taurus",
        "longname": "_.getZodiac~zodiac.Taurus",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                575,
                581
            ],
            "filename": "getZodiac.js",
            "lineno": 21,
            "columnno": 16,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005433",
                "name": "m",
                "type": "Literal",
                "value": 4
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Taurus.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Taurus",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                583,
                590
            ],
            "filename": "getZodiac.js",
            "lineno": 21,
            "columnno": 24,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005435",
                "name": "d",
                "type": "Literal",
                "value": 21
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Taurus.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Taurus",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                598,
                627
            ],
            "filename": "getZodiac.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005437",
                "name": "Gemini",
                "type": "ObjectExpression",
                "value": "{\"undefined\":21}"
            }
        },
        "undocumented": true,
        "name": "Gemini",
        "longname": "_.getZodiac~zodiac.Gemini",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                610,
                616
            ],
            "filename": "getZodiac.js",
            "lineno": 22,
            "columnno": 16,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005439",
                "name": "m",
                "type": "Literal",
                "value": 5
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Gemini.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Gemini",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                618,
                625
            ],
            "filename": "getZodiac.js",
            "lineno": 22,
            "columnno": 24,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005441",
                "name": "d",
                "type": "Literal",
                "value": 21
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Gemini.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Gemini",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                633,
                662
            ],
            "filename": "getZodiac.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005443",
                "name": "Cancer",
                "type": "ObjectExpression",
                "value": "{\"undefined\":22}"
            }
        },
        "undocumented": true,
        "name": "Cancer",
        "longname": "_.getZodiac~zodiac.Cancer",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                645,
                651
            ],
            "filename": "getZodiac.js",
            "lineno": 23,
            "columnno": 16,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005445",
                "name": "m",
                "type": "Literal",
                "value": 6
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Cancer.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Cancer",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                653,
                660
            ],
            "filename": "getZodiac.js",
            "lineno": 23,
            "columnno": 24,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005447",
                "name": "d",
                "type": "Literal",
                "value": 22
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Cancer.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Cancer",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                668,
                694
            ],
            "filename": "getZodiac.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005449",
                "name": "Leo",
                "type": "ObjectExpression",
                "value": "{\"undefined\":22}"
            }
        },
        "undocumented": true,
        "name": "Leo",
        "longname": "_.getZodiac~zodiac.Leo",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                677,
                683
            ],
            "filename": "getZodiac.js",
            "lineno": 24,
            "columnno": 13,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005451",
                "name": "m",
                "type": "Literal",
                "value": 7
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Leo.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Leo",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                685,
                692
            ],
            "filename": "getZodiac.js",
            "lineno": 24,
            "columnno": 21,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005453",
                "name": "d",
                "type": "Literal",
                "value": 22
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Leo.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Leo",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                700,
                728
            ],
            "filename": "getZodiac.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005455",
                "name": "Virgo",
                "type": "ObjectExpression",
                "value": "{\"undefined\":23}"
            }
        },
        "undocumented": true,
        "name": "Virgo",
        "longname": "_.getZodiac~zodiac.Virgo",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                711,
                717
            ],
            "filename": "getZodiac.js",
            "lineno": 25,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005457",
                "name": "m",
                "type": "Literal",
                "value": 8
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Virgo.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Virgo",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                719,
                726
            ],
            "filename": "getZodiac.js",
            "lineno": 25,
            "columnno": 23,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005459",
                "name": "d",
                "type": "Literal",
                "value": 23
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Virgo.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Virgo",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                734,
                762
            ],
            "filename": "getZodiac.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005461",
                "name": "Libra",
                "type": "ObjectExpression",
                "value": "{\"undefined\":23}"
            }
        },
        "undocumented": true,
        "name": "Libra",
        "longname": "_.getZodiac~zodiac.Libra",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                745,
                751
            ],
            "filename": "getZodiac.js",
            "lineno": 26,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005463",
                "name": "m",
                "type": "Literal",
                "value": 9
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Libra.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Libra",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                753,
                760
            ],
            "filename": "getZodiac.js",
            "lineno": 26,
            "columnno": 23,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005465",
                "name": "d",
                "type": "Literal",
                "value": 23
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Libra.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Libra",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                768,
                799
            ],
            "filename": "getZodiac.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005467",
                "name": "Scorpio",
                "type": "ObjectExpression",
                "value": "{\"undefined\":22}"
            }
        },
        "undocumented": true,
        "name": "Scorpio",
        "longname": "_.getZodiac~zodiac.Scorpio",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                781,
                788
            ],
            "filename": "getZodiac.js",
            "lineno": 27,
            "columnno": 17,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005469",
                "name": "m",
                "type": "Literal",
                "value": 10
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Scorpio.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Scorpio",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                790,
                797
            ],
            "filename": "getZodiac.js",
            "lineno": 27,
            "columnno": 26,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005471",
                "name": "d",
                "type": "Literal",
                "value": 22
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Scorpio.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Scorpio",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                805,
                840
            ],
            "filename": "getZodiac.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005473",
                "name": "Sagittarius",
                "type": "ObjectExpression",
                "value": "{\"undefined\":21}"
            }
        },
        "undocumented": true,
        "name": "Sagittarius",
        "longname": "_.getZodiac~zodiac.Sagittarius",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                822,
                829
            ],
            "filename": "getZodiac.js",
            "lineno": 28,
            "columnno": 21,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005475",
                "name": "m",
                "type": "Literal",
                "value": 11
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Sagittarius.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Sagittarius",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                831,
                838
            ],
            "filename": "getZodiac.js",
            "lineno": 28,
            "columnno": 30,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005477",
                "name": "d",
                "type": "Literal",
                "value": 21
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Sagittarius.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Sagittarius",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                846,
                880
            ],
            "filename": "getZodiac.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005479",
                "name": "Capricorn2",
                "type": "ObjectExpression",
                "value": "{\"undefined\":31}"
            }
        },
        "undocumented": true,
        "name": "Capricorn2",
        "longname": "_.getZodiac~zodiac.Capricorn2",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                862,
                869
            ],
            "filename": "getZodiac.js",
            "lineno": 29,
            "columnno": 20,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005481",
                "name": "m",
                "type": "Literal",
                "value": 11
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "_.getZodiac~zodiac.Capricorn2.m",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Capricorn2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                871,
                878
            ],
            "filename": "getZodiac.js",
            "lineno": 29,
            "columnno": 29,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005483",
                "name": "d",
                "type": "Literal",
                "value": 31
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "_.getZodiac~zodiac.Capricorn2.d",
        "kind": "member",
        "memberof": "_.getZodiac~zodiac.Capricorn2",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                897,
                898
            ],
            "filename": "getZodiac.js",
            "lineno": 31,
            "columnno": 11,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005487",
                "name": "z"
            }
        },
        "undocumented": true,
        "name": "z",
        "longname": "_.getZodiac~z",
        "kind": "member",
        "memberof": "_.getZodiac",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                920,
                984
            ],
            "filename": "getZodiac.js",
            "lineno": 32,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005492",
                "name": "endDate",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endDate",
        "longname": "_.getZodiac~endDate",
        "kind": "member",
        "memberof": "_.getZodiac",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1064,
                1090
            ],
            "filename": "getZodiac.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005523",
                "name": "module.exports",
                "type": "Identifier",
                "value": "getZodiac",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "groupBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005531",
                "name": "baseAssignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssignValue",
        "longname": "baseAssignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                124
            ],
            "filename": "groupBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005536",
                "name": "createAggregator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAggregator",
        "longname": "createAggregator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                190,
                220
            ],
            "filename": "groupBy.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005544",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                276,
                319
            ],
            "filename": "groupBy.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005550",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */",
        "meta": {
            "range": [
                1214,
                1403
            ],
            "filename": "groupBy.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005556",
                "name": "groupBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The order of grouped values\nis determined by the order they occur in `collection`. The corresponding\nvalue of each key is an array of elements responsible for generating the\nkey. The iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee to transform keys.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the composed aggregate object."
            }
        ],
        "examples": [
            "_.groupBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': [4.2], '6': [6.1, 6.3] }\n\n// The `_.property` iteratee shorthand.\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }"
        ],
        "name": "groupBy",
        "longname": "_.groupBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1406,
                1430
            ],
            "filename": "groupBy.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005590",
                "name": "module.exports",
                "type": "Identifier",
                "value": "groupBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "gt.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005598",
                "name": "baseGt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGt",
        "longname": "baseGt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                124
            ],
            "filename": "gt.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005603",
                "name": "createRelationalOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRelationalOperation",
        "longname": "createRelationalOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is greater than `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n * @see _.lt\n * @example\n *\n * _.gt(3, 1);\n * // => true\n *\n * _.gt(3, 3);\n * // => false\n *\n * _.gt(1, 3);\n * // => false\n */",
        "meta": {
            "range": [
                567,
                605
            ],
            "filename": "gt.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005611",
                "name": "gt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is greater than `other`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.9.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to compare.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The other value to compare.",
                "name": "other"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is greater than `other`,\n else `false`."
            }
        ],
        "see": [
            "_.lt"
        ],
        "examples": [
            "_.gt(3, 1);\n// => true\n\n_.gt(3, 3);\n// => false\n\n_.gt(1, 3);\n// => false"
        ],
        "name": "gt",
        "longname": "_.gt",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                608,
                627
            ],
            "filename": "gt.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005617",
                "name": "module.exports",
                "type": "Identifier",
                "value": "gt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                80
            ],
            "filename": "gte.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005625",
                "name": "createRelationalOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRelationalOperation",
        "longname": "createRelationalOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is greater than or equal to `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than or equal to\n *  `other`, else `false`.\n * @see _.lte\n * @example\n *\n * _.gte(3, 1);\n * // => true\n *\n * _.gte(3, 3);\n * // => true\n *\n * _.gte(1, 3);\n * // => false\n */",
        "meta": {
            "range": [
                550,
                634
            ],
            "filename": "gte.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005633",
                "name": "gte",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is greater than or equal to `other`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.9.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to compare.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The other value to compare.",
                "name": "other"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is greater than or equal to\n `other`, else `false`."
            }
        ],
        "see": [
            "_.lte"
        ],
        "examples": [
            "_.gte(3, 1);\n// => true\n\n_.gte(3, 3);\n// => true\n\n_.gte(1, 3);\n// => false"
        ],
        "name": "gte",
        "longname": "_.gte",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                637,
                657
            ],
            "filename": "gte.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005646",
                "name": "module.exports",
                "type": "Identifier",
                "value": "gte",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "has.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005654",
                "name": "baseHas",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseHas",
        "longname": "baseHas",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                90
            ],
            "filename": "has.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005659",
                "name": "hasPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasPath",
        "longname": "hasPath",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {object} object A js object.\n * @param {string} property A property of a js object.\n * @author has\n * @returns {boolean} True if a query has a property, false otherwise.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */",
        "meta": {
            "range": [
                692,
                781
            ],
            "filename": "has.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005666",
                "name": "has",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path"
                ]
            }
        },
        "description": "Checks if `path` is a direct property of `object`.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "A js object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "A property of a js object.",
                "name": "property"
            }
        ],
        "author": [
            "has"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "True if a query has a property, false otherwise."
            }
        ],
        "examples": [
            "var object = { 'a': { 'b': 2 } };\nvar other = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.has(object, 'a');\n// => true\n\n_.has(object, 'a.b');\n// => true\n\n_.has(object, ['a', 'b']);\n// => true\n\n_.has(other, 'a');\n// => false"
        ],
        "name": "has",
        "longname": "_.has",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                783,
                803
            ],
            "filename": "has.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005682",
                "name": "module.exports",
                "type": "Identifier",
                "value": "has",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "hasIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005690",
                "name": "baseHasIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseHasIn",
        "longname": "baseHasIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                94
            ],
            "filename": "hasIn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005695",
                "name": "hasPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasPath",
        "longname": "hasPath",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */",
        "meta": {
            "range": [
                667,
                760
            ],
            "filename": "hasIn.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005702",
                "name": "hasIn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path"
                ]
            }
        },
        "description": "Checks if `path` is a direct or inherited property of `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path to check.",
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `path` exists, else `false`."
            }
        ],
        "examples": [
            "var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.hasIn(object, 'a');\n// => true\n\n_.hasIn(object, 'a.b');\n// => true\n\n_.hasIn(object, ['a', 'b']);\n// => true\n\n_.hasIn(object, 'b');\n// => false"
        ],
        "name": "hasIn",
        "longname": "_.hasIn",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                762,
                784
            ],
            "filename": "hasIn.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005718",
                "name": "module.exports",
                "type": "Identifier",
                "value": "hasIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {array} array The array to query.\n * @author element\n * @returns {array_head} A js element (e.g number, variable, function etc)\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */",
        "meta": {
            "range": [
                348,
                429
            ],
            "filename": "head.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005727",
                "name": "head",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Gets the first element of `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array_head"
                    ]
                },
                "description": "A js element (e.g number, variable, function etc)"
            }
        ],
        "examples": [
            "_.head([1, 2, 3]);\n// => 1\n\n_.head([]);\n// => undefined"
        ],
        "name": "head",
        "longname": "_.head",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                431,
                452
            ],
            "filename": "head.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005743",
                "name": "module.exports",
                "type": "Identifier",
                "value": "head",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */",
        "meta": {
            "range": [
                312,
                356
            ],
            "filename": "identity.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005752",
                "name": "identity",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "This method returns the first argument it receives.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Any value.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns `value`."
            }
        ],
        "examples": [
            "var object = { 'a': 1 };\n\nconsole.log(_.identity(object) === object);\n// => true"
        ],
        "name": "identity",
        "longname": "_.identity",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                358,
                383
            ],
            "filename": "identity.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005759",
                "name": "module.exports",
                "type": "Identifier",
                "value": "identity",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "inRange.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005767",
                "name": "baseInRange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseInRange",
        "longname": "baseInRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                90
            ],
            "filename": "inRange.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005772",
                "name": "toFinite",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toFinite",
        "longname": "toFinite",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                128
            ],
            "filename": "inRange.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005777",
                "name": "toNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "toNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `n` is between `start` and up to, but not including, `end`. If\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\n * If `start` is greater than `end` the params are swapped to support\n * negative ranges.\n *\n * @static\n * @memberOf _\n * @since 3.3.0\n * @category Number\n * @param {number} number The number to check.\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n * @see _.range, _.rangeRight\n * @example\n *\n * _.inRange(3, 2, 4);\n * // => true\n *\n * _.inRange(4, 8);\n * // => true\n *\n * _.inRange(4, 2);\n * // => false\n *\n * _.inRange(2, 2);\n * // => false\n *\n * _.inRange(1.2, 2);\n * // => true\n *\n * _.inRange(5.2, 4);\n * // => false\n *\n * _.inRange(-3, -2, -6);\n * // => true\n */",
        "meta": {
            "range": [
                1004,
                1241
            ],
            "filename": "inRange.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005784",
                "name": "inRange",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "number",
                    "start",
                    "end"
                ]
            },
            "vars": {
                "start": "_.inRange~start",
                "end": "_.inRange~end",
                "number": "_.inRange~number"
            }
        },
        "description": "Checks if `n` is between `start` and up to, but not including, `end`. If\n`end` is not specified, it's set to `start` with `start` then set to `0`.\nIf `start` is greater than `end` the params are swapped to support\nnegative ranges.",
        "scope": "static",
        "memberof": "_",
        "since": "3.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Number",
                "value": "Number"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to check.",
                "name": "number"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The start of the range.",
                "name": "start"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The end of the range.",
                "name": "end"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `number` is in the range, else `false`."
            }
        ],
        "see": [
            "_.range, _.rangeRight"
        ],
        "examples": [
            "_.inRange(3, 2, 4);\n// => true\n\n_.inRange(4, 8);\n// => true\n\n_.inRange(4, 2);\n// => false\n\n_.inRange(2, 2);\n// => false\n\n_.inRange(1.2, 2);\n// => true\n\n_.inRange(5.2, 4);\n// => false\n\n_.inRange(-3, -2, -6);\n// => true"
        ],
        "name": "inRange",
        "longname": "_.inRange",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1045,
                1068
            ],
            "filename": "inRange.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005791",
                "name": "start",
                "type": "CallExpression",
                "funcscope": "_.inRange",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.inRange~start",
        "kind": "member",
        "memberof": "_.inRange",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1101,
                1112
            ],
            "filename": "inRange.js",
            "lineno": 48,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005802",
                "name": "end",
                "type": "Identifier",
                "funcscope": "_.inRange",
                "value": "start",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.inRange~end",
        "kind": "member",
        "memberof": "_.inRange",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1118,
                1127
            ],
            "filename": "inRange.js",
            "lineno": 49,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005806",
                "name": "start",
                "type": "Literal",
                "funcscope": "_.inRange",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.inRange~start",
        "kind": "member",
        "memberof": "_.inRange",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1144,
                1163
            ],
            "filename": "inRange.js",
            "lineno": 51,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005811",
                "name": "end",
                "type": "CallExpression",
                "funcscope": "_.inRange",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.inRange~end",
        "kind": "member",
        "memberof": "_.inRange",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1171,
                1196
            ],
            "filename": "inRange.js",
            "lineno": 53,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005817",
                "name": "number",
                "type": "CallExpression",
                "funcscope": "_.inRange",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "number",
        "longname": "_.inRange~number",
        "kind": "member",
        "memberof": "_.inRange",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1243,
                1267
            ],
            "filename": "inRange.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005829",
                "name": "module.exports",
                "type": "Identifier",
                "value": "inRange",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "includes.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005837",
                "name": "baseIndexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIndexOf",
        "longname": "baseIndexOf",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                96
            ],
            "filename": "includes.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005842",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                134
            ],
            "filename": "includes.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005847",
                "name": "isString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isString",
        "longname": "isString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                174
            ],
            "filename": "includes.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005852",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                180,
                208
            ],
            "filename": "includes.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005857",
                "name": "values",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                319,
                339
            ],
            "filename": "includes.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005865",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */",
        "meta": {
            "range": [
                1288,
                1767
            ],
            "filename": "includes.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005870",
                "name": "includes",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "value",
                    "fromIndex",
                    "guard"
                ]
            },
            "vars": {
                "collection": "_.includes~collection",
                "fromIndex": "_.includes~fromIndex",
                "length": "_.includes~length"
            }
        },
        "description": "Checks if `value` is in `collection`. If `collection` is a string, it's\nchecked for a substring of `value`, otherwise\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nis used for equality comparisons. If `fromIndex` is negative, it's used as\nthe offset from the end of `collection`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.reduce`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.reduce`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object",
                        "string"
                    ]
                },
                "description": "The collection to inspect.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to search for.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The index to search from.",
                "name": "fromIndex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is found, else `false`."
            }
        ],
        "examples": [
            "_.includes([1, 2, 3], 1);\n// => true\n\n_.includes([1, 2, 3], 1, 2);\n// => false\n\n_.includes({ 'a': 1, 'b': 2 }, 1);\n// => true\n\n_.includes('abcd', 'bc');\n// => true"
        ],
        "name": "includes",
        "longname": "_.includes",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1347,
                1417
            ],
            "filename": "includes.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005878",
                "name": "collection",
                "type": "ConditionalExpression",
                "funcscope": "_.includes",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "_.includes~collection",
        "kind": "member",
        "memberof": "_.includes",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1421,
                1481
            ],
            "filename": "includes.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005889",
                "name": "fromIndex",
                "type": "ConditionalExpression",
                "funcscope": "_.includes",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fromIndex",
        "longname": "_.includes~fromIndex",
        "kind": "member",
        "memberof": "_.includes",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1490,
                1516
            ],
            "filename": "includes.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005901",
                "name": "length",
                "type": "MemberExpression",
                "value": "collection.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.includes~length",
        "kind": "member",
        "memberof": "_.includes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1545,
                1589
            ],
            "filename": "includes.js",
            "lineno": 48,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005912",
                "name": "fromIndex",
                "type": "CallExpression",
                "funcscope": "_.includes",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fromIndex",
        "longname": "_.includes~fromIndex",
        "kind": "member",
        "memberof": "_.includes",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1769,
                1794
            ],
            "filename": "includes.js",
            "lineno": 55,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005951",
                "name": "module.exports",
                "type": "Identifier",
                "value": "includes",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                36
            ],
            "filename": "index.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005959",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "indexOf.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005969",
                "name": "baseIndexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIndexOf",
        "longname": "baseIndexOf",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                92
            ],
            "filename": "indexOf.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005974",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                203,
                223
            ],
            "filename": "indexOf.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005982",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */",
        "meta": {
            "range": [
                938,
                1236
            ],
            "filename": "indexOf.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005987",
                "name": "indexOf",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value",
                    "fromIndex"
                ]
            },
            "vars": {
                "length": "_.indexOf~length",
                "index": "_.indexOf~index"
            }
        },
        "description": "Gets the index at which the first occurrence of `value` is found in `array`\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. If `fromIndex` is negative, it's used as the\noffset from the end of `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to search for.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The index to search from.",
                "name": "fromIndex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index of the matched value, else `-1`."
            }
        ],
        "examples": [
            "_.indexOf([1, 2, 1, 2], 2);\n// => 1\n\n// Search from the `fromIndex`.\n_.indexOf([1, 2, 1, 2], 2, 2);\n// => 3"
        ],
        "name": "indexOf",
        "longname": "_.indexOf",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                988,
                1029
            ],
            "filename": "indexOf.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100005994",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.indexOf~length",
        "kind": "member",
        "memberof": "_.indexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1073,
                1125
            ],
            "filename": "indexOf.js",
            "lineno": 37,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006012",
                "name": "index",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.indexOf~index",
        "kind": "member",
        "memberof": "_.indexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1150,
                1186
            ],
            "filename": "indexOf.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006028",
                "name": "index",
                "type": "CallExpression",
                "funcscope": "_.indexOf",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.indexOf~index",
        "kind": "member",
        "memberof": "_.indexOf",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1238,
                1262
            ],
            "filename": "indexOf.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006043",
                "name": "module.exports",
                "type": "Identifier",
                "value": "indexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "initial.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006051",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets all but the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n */",
        "meta": {
            "range": [
                333,
                457
            ],
            "filename": "initial.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006058",
                "name": "initial",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "length": "_.initial~length"
            }
        },
        "description": "Gets all but the last element of `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "_.initial([1, 2, 3]);\n// => [1, 2]"
        ],
        "name": "initial",
        "longname": "_.initial",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                365,
                406
            ],
            "filename": "initial.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006063",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.initial~length",
        "kind": "member",
        "memberof": "_.initial",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                459,
                483
            ],
            "filename": "initial.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006084",
                "name": "module.exports",
                "type": "Identifier",
                "value": "initial",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "intersection.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006092",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                110
            ],
            "filename": "intersection.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006097",
                "name": "baseIntersection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIntersection",
        "longname": "baseIntersection",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                158
            ],
            "filename": "intersection.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006102",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                164,
                228
            ],
            "filename": "intersection.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006107",
                "name": "castArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castArrayLikeObject",
        "longname": "castArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */",
        "meta": {
            "range": [
                778,
                970
            ],
            "filename": "intersection.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006115",
                "name": "intersection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of unique values that are included in all given arrays\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. The order and references of result values are\ndetermined by the first array.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of intersecting values."
            }
        ],
        "examples": [
            "_.intersection([2, 1], [2, 3]);\n// => [2]"
        ],
        "name": "intersection",
        "longname": "_.intersection",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                827,
                873
            ],
            "filename": "intersection.js",
            "lineno": 26,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006123",
                "name": "mapped",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapped",
        "longname": "<anonymous>~mapped",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                973,
                1002
            ],
            "filename": "intersection.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006147",
                "name": "module.exports",
                "type": "Identifier",
                "value": "intersection",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "intersectionBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006155",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                110
            ],
            "filename": "intersectionBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006160",
                "name": "baseIntersection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIntersection",
        "longname": "baseIntersection",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                166
            ],
            "filename": "intersectionBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006165",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                172,
                214
            ],
            "filename": "intersectionBy.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006170",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                220,
                284
            ],
            "filename": "intersectionBy.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006175",
                "name": "castArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castArrayLikeObject",
        "longname": "castArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                290,
                314
            ],
            "filename": "intersectionBy.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006180",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.intersection` except that it accepts `iteratee`\n * which is invoked for each element of each `arrays` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [2.1]\n *\n * // The `_.property` iteratee shorthand.\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }]\n */",
        "meta": {
            "range": [
                1144,
                1491
            ],
            "filename": "intersectionBy.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006188",
                "name": "intersectionBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.intersection` except that it accepts `iteratee`\nwhich is invoked for each element of each `arrays` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of intersecting values."
            }
        ],
        "examples": [
            "_.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [2.1]\n\n// The `_.property` iteratee shorthand.\n_.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }]"
        ],
        "name": "intersectionBy",
        "longname": "_.intersectionBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1195,
                1218
            ],
            "filename": "intersectionBy.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006196",
                "name": "iteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1226,
                1272
            ],
            "filename": "intersectionBy.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006201",
                "name": "mapped",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapped",
        "longname": "<anonymous>~mapped",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1314,
                1334
            ],
            "filename": "intersectionBy.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006215",
                "name": "iteratee",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1494,
                1525
            ],
            "filename": "intersectionBy.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006246",
                "name": "module.exports",
                "type": "Identifier",
                "value": "intersectionBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "intersectionWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006254",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                110
            ],
            "filename": "intersectionWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006259",
                "name": "baseIntersection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIntersection",
        "longname": "baseIntersection",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                158
            ],
            "filename": "intersectionWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006264",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                164,
                228
            ],
            "filename": "intersectionWith.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006269",
                "name": "castArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castArrayLikeObject",
        "longname": "castArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                234,
                258
            ],
            "filename": "intersectionWith.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006274",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */",
        "meta": {
            "range": [
                1033,
                1401
            ],
            "filename": "intersectionWith.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006282",
                "name": "intersectionWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.intersection` except that it accepts `comparator`\nwhich is invoked to compare elements of `arrays`. The order and references\nof result values are determined by the first array. The comparator is\ninvoked with two arguments: (arrVal, othVal).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The comparator invoked per element.",
                "name": "comparator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of intersecting values."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.intersectionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }]"
        ],
        "name": "intersectionWith",
        "longname": "_.intersectionWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1086,
                1111
            ],
            "filename": "intersectionWith.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006290",
                "name": "comparator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1119,
                1165
            ],
            "filename": "intersectionWith.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006295",
                "name": "mapped",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapped",
        "longname": "<anonymous>~mapped",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1170,
                1239
            ],
            "filename": "intersectionWith.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006302",
                "name": "comparator",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1404,
                1437
            ],
            "filename": "intersectionWith.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006339",
                "name": "module.exports",
                "type": "Identifier",
                "value": "intersectionWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "invert.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006347",
                "name": "constant",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "constant",
        "longname": "constant",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                96
            ],
            "filename": "invert.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006352",
                "name": "createInverter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createInverter",
        "longname": "createInverter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                134
            ],
            "filename": "invert.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006357",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */",
        "meta": {
            "range": [
                635,
                735
            ],
            "filename": "invert.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006365",
                "name": "invert",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite\nproperty assignments of previous values.",
        "scope": "static",
        "memberof": "_",
        "since": "0.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to invert.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new inverted object."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invert(object);\n// => { '1': 'c', '2': 'b' }"
        ],
        "name": "invert",
        "longname": "_.invert",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                692,
                711
            ],
            "filename": "invert.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006375",
                "name": "result[undefined]",
                "type": "Identifier",
                "value": "key",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result[undefined]",
        "longname": "result[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                738,
                761
            ],
            "filename": "invert.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006384",
                "name": "module.exports",
                "type": "Identifier",
                "value": "invert",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "invertBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006392",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                114
            ],
            "filename": "invertBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006397",
                "name": "createInverter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createInverter",
        "longname": "createInverter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                180,
                210
            ],
            "filename": "invertBy.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006405",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                266,
                309
            ],
            "filename": "invertBy.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006411",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */",
        "meta": {
            "range": [
                1158,
                1346
            ],
            "filename": "invertBy.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006417",
                "name": "invertBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.invert` except that the inverted object is generated\nfrom the results of running each element of `object` thru `iteratee`. The\ncorresponding inverted value of each inverted key is an array of keys\nresponsible for generating the inverted value. The iteratee is invoked\nwith one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to invert.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new inverted object."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invertBy(object);\n// => { '1': ['a', 'c'], '2': ['b'] }\n\n_.invertBy(object, function(value) {\n  return 'group' + value;\n});\n// => { 'group1': ['a', 'c'], 'group2': ['b'] }"
        ],
        "name": "invertBy",
        "longname": "_.invertBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1303,
                1324
            ],
            "filename": "invertBy.js",
            "lineno": 42,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006444",
                "name": "result[undefined]",
                "type": "ArrayExpression",
                "value": "[\"key\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result[undefined]",
        "longname": "result[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1349,
                1374
            ],
            "filename": "invertBy.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006452",
                "name": "module.exports",
                "type": "Identifier",
                "value": "invertBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "invoke.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006460",
                "name": "baseInvoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseInvoke",
        "longname": "baseInvoke",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                98
            ],
            "filename": "invoke.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006465",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Invokes the method at `path` of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the method to invoke.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {*} Returns the result of the invoked method.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n *\n * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n * // => [2, 3]\n */",
        "meta": {
            "range": [
                610,
                639
            ],
            "filename": "invoke.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006473",
                "name": "invoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Invokes the method at `path` of `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the method to invoke.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to invoke the method with.",
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the result of the invoked method."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\n_.invoke(object, 'a[0].b.c.slice', 1, 3);\n// => [2, 3]"
        ],
        "name": "invoke",
        "longname": "_.invoke",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                642,
                665
            ],
            "filename": "invoke.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006479",
                "name": "module.exports",
                "type": "Identifier",
                "value": "invoke",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "invokeMap.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006487",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                88
            ],
            "filename": "invokeMap.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006492",
                "name": "baseEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseEach",
        "longname": "baseEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                140
            ],
            "filename": "invokeMap.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006497",
                "name": "baseInvoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseInvoke",
        "longname": "baseInvoke",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                146,
                188
            ],
            "filename": "invokeMap.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006502",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                194,
                232
            ],
            "filename": "invokeMap.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006507",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Invokes the method at `path` of each element in `collection`, returning\n * an array of the results of each invoked method. Any additional arguments\n * are provided to each invoked method. If `path` is a function, it's invoked\n * for, and `this` bound to, each element in `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array|Function|string} path The path of the method to invoke or\n *  the function invoked per iteration.\n * @param {...*} [args] The arguments to invoke each method with.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n * // => [[1, 5, 7], [1, 2, 3]]\n *\n * _.invokeMap([123, 456], String.prototype.split, '');\n * // => [['1', '2', '3'], ['4', '5', '6']]\n */",
        "meta": {
            "range": [
                1116,
                1460
            ],
            "filename": "invokeMap.js",
            "lineno": 32,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006515",
                "name": "invokeMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Invokes the method at `path` of each element in `collection`, returning\nan array of the results of each invoked method. Any additional arguments\nare provided to each invoked method. If `path` is a function, it's invoked\nfor, and `this` bound to, each element in `collection`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "function",
                        "string"
                    ]
                },
                "description": "The path of the method to invoke or\n the function invoked per iteration.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to invoke each method with.",
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the array of results."
            }
        ],
        "examples": [
            "_.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n\n_.invokeMap([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]"
        ],
        "name": "invokeMap",
        "longname": "_.invokeMap",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1178,
                1188
            ],
            "filename": "invokeMap.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006525",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1196,
                1230
            ],
            "filename": "invokeMap.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006529",
                "name": "isFunc",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunc",
        "longname": "<anonymous>~isFunc",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1238,
                1302
            ],
            "filename": "invokeMap.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006535",
                "name": "result",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1350,
                1433
            ],
            "filename": "invokeMap.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006555",
                "name": "result[undefined]",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1463,
                1489
            ],
            "filename": "invokeMap.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006575",
                "name": "module.exports",
                "type": "Identifier",
                "value": "invokeMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "isArguments.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006583",
                "name": "baseIsArguments",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsArguments",
        "longname": "baseIsArguments",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                106
            ],
            "filename": "isArguments.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006588",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                172,
                202
            ],
            "filename": "isArguments.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006596",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                258,
                301
            ],
            "filename": "isArguments.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006602",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Built-in value references. */",
        "meta": {
            "range": [
                342,
                397
            ],
            "filename": "isArguments.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006608",
                "name": "propertyIsEnumerable",
                "type": "MemberExpression",
                "value": "objectProto.propertyIsEnumerable"
            }
        },
        "description": "Built-in value references.",
        "name": "propertyIsEnumerable",
        "longname": "propertyIsEnumerable",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */",
        "meta": {
            "range": [
                791,
                1017
            ],
            "filename": "isArguments.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006614",
                "name": "isArguments",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is likely an `arguments` object.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an `arguments` object,\n else `false`."
            }
        ],
        "examples": [
            "_.isArguments(function() { return arguments; }());\n// => true\n\n_.isArguments([1, 2, 3]);\n// => false"
        ],
        "name": "isArguments",
        "longname": "_.isArguments",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1020,
                1048
            ],
            "filename": "isArguments.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006648",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isArguments",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */",
        "meta": {
            "range": [
                451,
                474
            ],
            "filename": "isArray.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006658",
                "name": "isArray",
                "type": "MemberExpression",
                "value": "Array.isArray"
            }
        },
        "description": "Checks if `value` is classified as an `Array` object.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an array, else `false`."
            }
        ],
        "examples": [
            "_.isArray([1, 2, 3]);\n// => true\n\n_.isArray(document.body.children);\n// => false\n\n_.isArray('abc');\n// => false\n\n_.isArray(_.noop);\n// => false"
        ],
        "name": "isArray",
        "longname": "_.isArray",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                477,
                501
            ],
            "filename": "isArray.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006664",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                64
            ],
            "filename": "isArrayBuffer.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006672",
                "name": "baseIsArrayBuffer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsArrayBuffer",
        "longname": "baseIsArrayBuffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70,
                114
            ],
            "filename": "isArrayBuffer.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006677",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                120,
                162
            ],
            "filename": "isArrayBuffer.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006682",
                "name": "nodeUtil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeUtil",
        "longname": "nodeUtil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                217,
                271
            ],
            "filename": "isArrayBuffer.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006690",
                "name": "nodeIsArrayBuffer",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeIsArrayBuffer",
        "longname": "nodeIsArrayBuffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */",
        "meta": {
            "range": [
                655,
                739
            ],
            "filename": "isArrayBuffer.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006698",
                "name": "isArrayBuffer",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is classified as an `ArrayBuffer` object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an array buffer, else `false`."
            }
        ],
        "examples": [
            "_.isArrayBuffer(new ArrayBuffer(2));\n// => true\n\n_.isArrayBuffer(new Array(2));\n// => false"
        ],
        "name": "isArrayBuffer",
        "longname": "_.isArrayBuffer",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                742,
                772
            ],
            "filename": "isArrayBuffer.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006707",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isArrayBuffer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "isArrayLike.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006715",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                78
            ],
            "filename": "isArrayLike.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006720",
                "name": "isLength",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isLength",
        "longname": "isLength",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */",
        "meta": {
            "range": [
                710,
                813
            ],
            "filename": "isArrayLike.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006727",
                "name": "isArrayLike",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is array-like. A value is considered array-like if it's\nnot a function and has a `value.length` that's an integer greater than or\nequal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is array-like, else `false`."
            }
        ],
        "examples": [
            "_.isArrayLike([1, 2, 3]);\n// => true\n\n_.isArrayLike(document.body.children);\n// => true\n\n_.isArrayLike('abc');\n// => true\n\n_.isArrayLike(_.noop);\n// => false"
        ],
        "name": "isArrayLike",
        "longname": "_.isArrayLike",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                815,
                843
            ],
            "filename": "isArrayLike.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006747",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isArrayLike",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "isArrayLikeObject.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006755",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                88
            ],
            "filename": "isArrayLikeObject.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006760",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */",
        "meta": {
            "range": [
                630,
                719
            ],
            "filename": "isArrayLikeObject.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006767",
                "name": "isArrayLikeObject",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "This method is like `_.isArrayLike` except that it also checks if `value`\nis an object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an array-like object,\n else `false`."
            }
        ],
        "examples": [
            "_.isArrayLikeObject([1, 2, 3]);\n// => true\n\n_.isArrayLikeObject(document.body.children);\n// => true\n\n_.isArrayLikeObject('abc');\n// => false\n\n_.isArrayLikeObject(_.noop);\n// => false"
        ],
        "name": "isArrayLikeObject",
        "longname": "_.isArrayLikeObject",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                721,
                755
            ],
            "filename": "isArrayLikeObject.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006780",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isArrayLikeObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isBoolean.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006788",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                96
            ],
            "filename": "isBoolean.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006793",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                162,
                190
            ],
            "filename": "isBoolean.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006801",
                "name": "boolTag",
                "type": "Literal",
                "value": "[object Boolean]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "boolTag",
        "longname": "boolTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */",
        "meta": {
            "range": [
                541,
                675
            ],
            "filename": "isBoolean.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006804",
                "name": "isBoolean",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is classified as a boolean primitive or object.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a boolean, else `false`."
            }
        ],
        "examples": [
            "_.isBoolean(false);\n// => true\n\n_.isBoolean(null);\n// => false"
        ],
        "name": "isBoolean",
        "longname": "_.isBoolean",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                677,
                703
            ],
            "filename": "isBoolean.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006827",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isBoolean",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "isBuffer.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006835",
                "name": "root",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "root",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44,
                78
            ],
            "filename": "isBuffer.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006840",
                "name": "stubFalse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stubFalse",
        "longname": "stubFalse",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Detect free variable `exports`. */",
        "meta": {
            "range": [
                139,
                222
            ],
            "filename": "isBuffer.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006848",
                "name": "freeExports",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "description": "Detect free variable `exports`.",
        "name": "freeExports",
        "longname": "freeExports",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Detect free variable `module`. */",
        "meta": {
            "range": [
                267,
                360
            ],
            "filename": "isBuffer.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006864",
                "name": "freeModule",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "description": "Detect free variable `module`.",
        "name": "freeModule",
        "longname": "freeModule",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Detect the popular CommonJS extension `module.exports`. */",
        "meta": {
            "range": [
                430,
                494
            ],
            "filename": "isBuffer.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006882",
                "name": "moduleExports",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "description": "Detect the popular CommonJS extension `module.exports`.",
        "name": "moduleExports",
        "longname": "moduleExports",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Built-in value references. */",
        "meta": {
            "range": [
                535,
                583
            ],
            "filename": "isBuffer.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006892",
                "name": "Buffer",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Built-in value references.",
        "name": "Buffer",
        "longname": "Buffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                679,
                732
            ],
            "filename": "isBuffer.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006901",
                "name": "nativeIsBuffer",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nativeIsBuffer",
        "longname": "nativeIsBuffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */",
        "meta": {
            "range": [
                1070,
                1108
            ],
            "filename": "isBuffer.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006910",
                "name": "isBuffer",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is a buffer.",
        "scope": "static",
        "memberof": "_",
        "since": "4.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a buffer, else `false`."
            }
        ],
        "examples": [
            "_.isBuffer(new Buffer(2));\n// => true\n\n_.isBuffer(new Uint8Array(2));\n// => false"
        ],
        "name": "isBuffer",
        "longname": "_.isBuffer",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1111,
                1136
            ],
            "filename": "isBuffer.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006916",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isBuffer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isDate.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006924",
                "name": "baseIsDate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsDate",
        "longname": "baseIsDate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                100
            ],
            "filename": "isDate.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006929",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                148
            ],
            "filename": "isDate.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006934",
                "name": "nodeUtil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeUtil",
        "longname": "nodeUtil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                203,
                243
            ],
            "filename": "isDate.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006942",
                "name": "nodeIsDate",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeIsDate",
        "longname": "nodeIsDate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */",
        "meta": {
            "range": [
                600,
                656
            ],
            "filename": "isDate.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006950",
                "name": "isDate",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is classified as a `Date` object.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a date object, else `false`."
            }
        ],
        "examples": [
            "_.isDate(new Date);\n// => true\n\n_.isDate('Mon April 23 2012');\n// => false"
        ],
        "name": "isDate",
        "longname": "_.isDate",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                659,
                682
            ],
            "filename": "isDate.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006959",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isDate",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "isElement.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006967",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                92
            ],
            "filename": "isElement.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006972",
                "name": "isPlainObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isPlainObject",
        "longname": "isPlainObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */",
        "meta": {
            "range": [
                451,
                559
            ],
            "filename": "isElement.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006979",
                "name": "isElement",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is likely a DOM element.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a DOM element, else `false`."
            }
        ],
        "examples": [
            "_.isElement(document.body);\n// => true\n\n_.isElement('<body>');\n// => false"
        ],
        "name": "isElement",
        "longname": "_.isElement",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                561,
                587
            ],
            "filename": "isElement.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100006999",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isElement",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "isEmpty.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007007",
                "name": "baseKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseKeys",
        "longname": "baseKeys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                90
            ],
            "filename": "isEmpty.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007012",
                "name": "getTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getTag",
        "longname": "getTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                134
            ],
            "filename": "isEmpty.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007017",
                "name": "isArguments",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArguments",
        "longname": "isArguments",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                170
            ],
            "filename": "isEmpty.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007022",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                176,
                214
            ],
            "filename": "isEmpty.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007027",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                220,
                252
            ],
            "filename": "isEmpty.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007032",
                "name": "isBuffer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isBuffer",
        "longname": "isBuffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                258,
                306
            ],
            "filename": "isEmpty.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007037",
                "name": "isPrototype",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isPrototype",
        "longname": "isPrototype",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                312,
                352
            ],
            "filename": "isEmpty.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007042",
                "name": "isTypedArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isTypedArray",
        "longname": "isTypedArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                418,
                441
            ],
            "filename": "isEmpty.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007050",
                "name": "mapTag",
                "type": "Literal",
                "value": "[object Map]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "mapTag",
        "longname": "mapTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                447,
                470
            ],
            "filename": "isEmpty.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007053",
                "name": "setTag",
                "type": "Literal",
                "value": "[object Set]"
            }
        },
        "undocumented": true,
        "name": "setTag",
        "longname": "setTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                521,
                551
            ],
            "filename": "isEmpty.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007057",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                607,
                650
            ],
            "filename": "isEmpty.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007063",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */",
        "meta": {
            "range": [
                1444,
                2014
            ],
            "filename": "isEmpty.js",
            "lineno": 55,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007068",
                "name": "isEmpty",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "tag": "_.isEmpty~tag",
                "key": "_.isEmpty~key"
            }
        },
        "description": "Checks if `value` is an empty object, collection, map, or set.\n\nObjects are considered empty if they have no own enumerable string keyed\nproperties.\n\nArray-like values such as `arguments` objects, arrays, buffers, strings, or\njQuery-like collections are considered empty if they have a `length` of `0`.\nSimilarly, maps and sets are considered empty if they have a `size` of `0`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is empty, else `false`."
            }
        ],
        "examples": [
            "_.isEmpty(null);\n// => true\n\n_.isEmpty(true);\n// => true\n\n_.isEmpty(1);\n// => true\n\n_.isEmpty([1, 2, 3]);\n// => false\n\n_.isEmpty({ 'a': 1 });\n// => false"
        ],
        "name": "isEmpty",
        "longname": "_.isEmpty",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1741,
                1760
            ],
            "filename": "isEmpty.js",
            "lineno": 64,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007118",
                "name": "tag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tag",
        "longname": "_.isEmpty~tag",
        "kind": "member",
        "memberof": "_.isEmpty",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1909,
                1912
            ],
            "filename": "isEmpty.js",
            "lineno": 71,
            "columnno": 11,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007151",
                "name": "key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "_.isEmpty~key",
        "kind": "member",
        "memberof": "_.isEmpty",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2016,
                2040
            ],
            "filename": "isEmpty.js",
            "lineno": 79,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007168",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isEmpty",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "isEqual.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007176",
                "name": "baseIsEqual",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsEqual",
        "longname": "baseIsEqual",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */",
        "meta": {
            "range": [
                912,
                982
            ],
            "filename": "isEqual.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007183",
                "name": "isEqual",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "other"
                ]
            }
        },
        "description": "Performs a deep comparison between two values to determine if they are\nequivalent.\n\n**Note:** This method supports comparing arrays, array buffers, booleans,\ndate objects, error objects, maps, numbers, `Object` objects, regexes,\nsets, strings, symbols, and typed arrays. `Object` objects are compared\nby their own, not inherited, enumerable properties. Functions and DOM\nnodes are compared by strict equality, i.e. `===`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to compare.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The other value to compare.",
                "name": "other"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if the values are equivalent, else `false`."
            }
        ],
        "examples": [
            "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.isEqual(object, other);\n// => true\n\nobject === other;\n// => false"
        ],
        "name": "isEqual",
        "longname": "_.isEqual",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                984,
                1008
            ],
            "filename": "isEqual.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007194",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isEqual",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "isEqualWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007202",
                "name": "baseIsEqual",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsEqual",
        "longname": "baseIsEqual",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */",
        "meta": {
            "range": [
                1062,
                1344
            ],
            "filename": "isEqualWith.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007209",
                "name": "isEqualWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "other",
                    "customizer"
                ]
            },
            "vars": {
                "customizer": "_.isEqualWith~customizer",
                "result": "_.isEqualWith~result"
            }
        },
        "description": "This method is like `_.isEqual` except that it accepts `customizer` which\nis invoked to compare values. If `customizer` returns `undefined`, comparisons\nare handled by the method instead. The `customizer` is invoked with up to\nsix arguments: (objValue, othValue [, index|key, object, other, stack]).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to compare.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The other value to compare.",
                "name": "other"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize comparisons.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if the values are equivalent, else `false`."
            }
        ],
        "examples": [
            "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n\nfunction customizer(objValue, othValue) {\n  if (isGreeting(objValue) && isGreeting(othValue)) {\n    return true;\n  }\n}\n\nvar array = ['hello', 'goodbye'];\nvar other = ['hi', 'goodbye'];\n\n_.isEqualWith(array, other, customizer);\n// => true"
        ],
        "name": "isEqualWith",
        "longname": "_.isEqualWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1113,
                1182
            ],
            "filename": "isEqualWith.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007216",
                "name": "customizer",
                "type": "ConditionalExpression",
                "funcscope": "_.isEqualWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "customizer",
        "longname": "_.isEqualWith~customizer",
        "kind": "member",
        "memberof": "_.isEqualWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1190,
                1248
            ],
            "filename": "isEqualWith.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007226",
                "name": "result",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.isEqualWith~result",
        "kind": "member",
        "memberof": "_.isEqualWith",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1346,
                1374
            ],
            "filename": "isEqualWith.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007250",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isEqualWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isError.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007258",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                96
            ],
            "filename": "isError.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007263",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                144
            ],
            "filename": "isError.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007268",
                "name": "isPlainObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isPlainObject",
        "longname": "isPlainObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                210,
                245
            ],
            "filename": "isError.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007276",
                "name": "domExcTag",
                "type": "Literal",
                "value": "[object DOMException]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "domExcTag",
        "longname": "domExcTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                251,
                278
            ],
            "filename": "isError.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007279",
                "name": "errorTag",
                "type": "Literal",
                "value": "[object Error]"
            }
        },
        "undocumented": true,
        "name": "errorTag",
        "longname": "errorTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */",
        "meta": {
            "range": [
                701,
                957
            ],
            "filename": "isError.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007282",
                "name": "isError",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "tag": "_.isError~tag"
            }
        },
        "description": "Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an error object, else `false`."
            }
        ],
        "examples": [
            "_.isError(new Error);\n// => true\n\n_.isError(Error);\n// => false"
        ],
        "name": "isError",
        "longname": "_.isError",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                785,
                808
            ],
            "filename": "isError.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007295",
                "name": "tag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tag",
        "longname": "_.isError~tag",
        "kind": "member",
        "memberof": "_.isError",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                959,
                983
            ],
            "filename": "isError.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007328",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isError",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "isFinite.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007336",
                "name": "root",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "root",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                149,
                179
            ],
            "filename": "isFinite.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007344",
                "name": "nativeIsFinite",
                "type": "MemberExpression",
                "value": "root.isFinite"
            }
        },
        "undocumented": true,
        "name": "nativeIsFinite",
        "longname": "nativeIsFinite",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */",
        "meta": {
            "range": [
                700,
                788
            ],
            "filename": "isFinite.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007349",
                "name": "isFinite",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is a finite primitive number.\n\n**Note:** This method is based on\n[`Number.isFinite`](https://mdn.io/Number/isFinite).",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a finite number, else `false`."
            }
        ],
        "examples": [
            "_.isFinite(3);\n// => true\n\n_.isFinite(Number.MIN_VALUE);\n// => true\n\n_.isFinite(Infinity);\n// => false\n\n_.isFinite('3');\n// => false"
        ],
        "name": "isFinite",
        "longname": "_.isFinite",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                790,
                815
            ],
            "filename": "isFinite.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007363",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isFinite",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isFunction.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007371",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                88
            ],
            "filename": "isFunction.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007376",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                154,
                189
            ],
            "filename": "isFunction.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007384",
                "name": "asyncTag",
                "type": "Literal",
                "value": "[object AsyncFunction]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "asyncTag",
        "longname": "asyncTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                195,
                224
            ],
            "filename": "isFunction.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007387",
                "name": "funcTag",
                "type": "Literal",
                "value": "[object Function]"
            }
        },
        "undocumented": true,
        "name": "funcTag",
        "longname": "funcTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                230,
                267
            ],
            "filename": "isFunction.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007390",
                "name": "genTag",
                "type": "Literal",
                "value": "[object GeneratorFunction]"
            }
        },
        "undocumented": true,
        "name": "genTag",
        "longname": "genTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                273,
                300
            ],
            "filename": "isFunction.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007393",
                "name": "proxyTag",
                "type": "Literal",
                "value": "[object Proxy]"
            }
        },
        "undocumented": true,
        "name": "proxyTag",
        "longname": "proxyTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */",
        "meta": {
            "range": [
                641,
                986
            ],
            "filename": "isFunction.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007396",
                "name": "isFunction",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "tag": "_.isFunction~tag"
            }
        },
        "description": "Checks if `value` is classified as a `Function` object.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a function, else `false`."
            }
        ],
        "examples": [
            "_.isFunction(_);\n// => true\n\n_.isFunction(/abc/);\n// => false"
        ],
        "name": "isFunction",
        "longname": "_.isFunction",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                880,
                903
            ],
            "filename": "isFunction.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007409",
                "name": "tag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tag",
        "longname": "_.isFunction~tag",
        "kind": "member",
        "memberof": "_.isFunction",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                988,
                1015
            ],
            "filename": "isFunction.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007431",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isFunction",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "isInteger.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007439",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */",
        "meta": {
            "range": [
                561,
                654
            ],
            "filename": "isInteger.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007446",
                "name": "isInteger",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is an integer.\n\n**Note:** This method is based on\n[`Number.isInteger`](https://mdn.io/Number/isInteger).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an integer, else `false`."
            }
        ],
        "examples": [
            "_.isInteger(3);\n// => true\n\n_.isInteger(Number.MIN_VALUE);\n// => false\n\n_.isInteger(Infinity);\n// => false\n\n_.isInteger('3');\n// => false"
        ],
        "name": "isInteger",
        "longname": "_.isInteger",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                656,
                682
            ],
            "filename": "isInteger.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007462",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                77,
                112
            ],
            "filename": "isLength.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007472",
                "name": "MAX_SAFE_INTEGER",
                "type": "Literal",
                "value": 9007199254740991
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "MAX_SAFE_INTEGER",
        "longname": "MAX_SAFE_INTEGER",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */",
        "meta": {
            "range": [
                660,
                788
            ],
            "filename": "isLength.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007475",
                "name": "isLength",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is a valid array-like length.\n\n**Note:** This method is loosely based on\n[`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a valid length, else `false`."
            }
        ],
        "examples": [
            "_.isLength(3);\n// => true\n\n_.isLength(Number.MIN_VALUE);\n// => false\n\n_.isLength(Infinity);\n// => false\n\n_.isLength('3');\n// => false"
        ],
        "name": "isLength",
        "longname": "_.isLength",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                790,
                815
            ],
            "filename": "isLength.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007500",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isLength",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "isMap.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007508",
                "name": "baseIsMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsMap",
        "longname": "baseIsMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                98
            ],
            "filename": "isMap.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007513",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                146
            ],
            "filename": "isMap.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007518",
                "name": "nodeUtil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeUtil",
        "longname": "nodeUtil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                201,
                239
            ],
            "filename": "isMap.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007526",
                "name": "nodeIsMap",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeIsMap",
        "longname": "nodeIsMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */",
        "meta": {
            "range": [
                576,
                628
            ],
            "filename": "isMap.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007534",
                "name": "isMap",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is classified as a `Map` object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a map, else `false`."
            }
        ],
        "examples": [
            "_.isMap(new Map);\n// => true\n\n_.isMap(new WeakMap);\n// => false"
        ],
        "name": "isMap",
        "longname": "_.isMap",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                631,
                653
            ],
            "filename": "isMap.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007543",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "isMatch.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007551",
                "name": "baseIsMatch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsMatch",
        "longname": "baseIsMatch",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                108
            ],
            "filename": "isMatch.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007556",
                "name": "getMatchData",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getMatchData",
        "longname": "getMatchData",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Performs a partial deep comparison between `object` and `source` to\n * determine if `object` contains equivalent property values.\n *\n * **Note:** This method is equivalent to `_.matches` when `source` is\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n *\n * _.isMatch(object, { 'b': 2 });\n * // => true\n *\n * _.isMatch(object, { 'b': 1 });\n * // => false\n */",
        "meta": {
            "range": [
                966,
                1083
            ],
            "filename": "isMatch.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007563",
                "name": "isMatch",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "source"
                ]
            }
        },
        "description": "Performs a partial deep comparison between `object` and `source` to\ndetermine if `object` contains equivalent property values.\n\n**Note:** This method is equivalent to `_.matches` when `source` is\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object of property values to match.",
                "name": "source"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `object` is a match, else `false`."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': 2 };\n\n_.isMatch(object, { 'b': 2 });\n// => true\n\n_.isMatch(object, { 'b': 1 });\n// => false"
        ],
        "name": "isMatch",
        "longname": "_.isMatch",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1085,
                1109
            ],
            "filename": "isMatch.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007581",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isMatch",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "isMatchWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007589",
                "name": "baseIsMatch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsMatch",
        "longname": "baseIsMatch",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                108
            ],
            "filename": "isMatchWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007594",
                "name": "getMatchData",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getMatchData",
        "longname": "getMatchData",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.isMatch` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with five\n * arguments: (objValue, srcValue, index|key, object, source).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, srcValue) {\n *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n *     return true;\n *   }\n * }\n *\n * var object = { 'greeting': 'hello' };\n * var source = { 'greeting': 'hi' };\n *\n * _.isMatchWith(object, source, customizer);\n * // => true\n */",
        "meta": {
            "range": [
                1133,
                1330
            ],
            "filename": "isMatchWith.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007601",
                "name": "isMatchWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "source",
                    "customizer"
                ]
            },
            "vars": {
                "customizer": "_.isMatchWith~customizer"
            }
        },
        "description": "This method is like `_.isMatch` except that it accepts `customizer` which\nis invoked to compare values. If `customizer` returns `undefined`, comparisons\nare handled by the method instead. The `customizer` is invoked with five\narguments: (objValue, srcValue, index|key, object, source).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to inspect.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object of property values to match.",
                "name": "source"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize comparisons.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `object` is a match, else `false`."
            }
        ],
        "examples": [
            "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n\nfunction customizer(objValue, srcValue) {\n  if (isGreeting(objValue) && isGreeting(srcValue)) {\n    return true;\n  }\n}\n\nvar object = { 'greeting': 'hello' };\nvar source = { 'greeting': 'hi' };\n\n_.isMatchWith(object, source, customizer);\n// => true"
        ],
        "name": "isMatchWith",
        "longname": "_.isMatchWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1186,
                1255
            ],
            "filename": "isMatchWith.js",
            "lineno": 39,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007608",
                "name": "customizer",
                "type": "ConditionalExpression",
                "funcscope": "_.isMatchWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "customizer",
        "longname": "_.isMatchWith~customizer",
        "kind": "member",
        "memberof": "_.isMatchWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1332,
                1360
            ],
            "filename": "isMatchWith.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007627",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isMatchWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "isNaN.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007635",
                "name": "isNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isNumber",
        "longname": "isNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */",
        "meta": {
            "range": [
                662,
                900
            ],
            "filename": "isNaN.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007642",
                "name": "isNaN",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is `NaN`.\n\n**Note:** This method is based on\n[`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\nglobal [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n`undefined` and other non-number values.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is `NaN`, else `false`."
            }
        ],
        "examples": [
            "_.isNaN(NaN);\n// => true\n\n_.isNaN(new Number(NaN));\n// => true\n\nisNaN(undefined);\n// => true\n\n_.isNaN(undefined);\n// => false"
        ],
        "name": "isNaN",
        "longname": "_.isNaN",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                902,
                924
            ],
            "filename": "isNaN.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007656",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isNaN",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "isNative.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007664",
                "name": "baseIsNative",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsNative",
        "longname": "baseIsNative",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                106
            ],
            "filename": "isNative.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007669",
                "name": "isMaskable",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isMaskable",
        "longname": "isMaskable",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                160,
                243
            ],
            "filename": "isNative.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007677",
                "name": "CORE_ERROR_TEXT",
                "type": "Literal",
                "value": "Unsupported core-js use. Try https://npms.io/search?q=ponyfill."
            }
        },
        "description": "Error message constants.",
        "name": "CORE_ERROR_TEXT",
        "longname": "CORE_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is a pristine native function.\n *\n * **Note:** This method can't reliably detect native functions in the presence\n * of the core-js package because core-js circumvents this kind of detection.\n * Despite multiple requests, the core-js maintainer has made it clear: any\n * attempt to fix the detection will be obstructed. As a result, we're left\n * with little choice but to throw an error. Unfortunately, this also affects\n * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n * which rely on core-js.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */",
        "meta": {
            "range": [
                1098,
                1225
            ],
            "filename": "isNative.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007680",
                "name": "isNative",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is a pristine native function.\n\n**Note:** This method can't reliably detect native functions in the presence\nof the core-js package because core-js circumvents this kind of detection.\nDespite multiple requests, the core-js maintainer has made it clear: any\nattempt to fix the detection will be obstructed. As a result, we're left\nwith little choice but to throw an error. Unfortunately, this also affects\npackages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\nwhich rely on core-js.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a native function,\n else `false`."
            }
        ],
        "examples": [
            "_.isNative(Array.prototype.push);\n// => true\n\n_.isNative(_);\n// => false"
        ],
        "name": "isNative",
        "longname": "_.isNative",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1227,
                1252
            ],
            "filename": "isNative.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007698",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isNative",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */",
        "meta": {
            "range": [
                366,
                415
            ],
            "filename": "isNil.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007707",
                "name": "isNil",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is `null` or `undefined`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is nullish, else `false`."
            }
        ],
        "examples": [
            "_.isNil(null);\n// => true\n\n_.isNil(void 0);\n// => true\n\n_.isNil(NaN);\n// => false"
        ],
        "name": "isNil",
        "longname": "_.isNil",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                417,
                439
            ],
            "filename": "isNil.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007716",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isNil",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */",
        "meta": {
            "range": [
                318,
                369
            ],
            "filename": "isNull.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007725",
                "name": "isNull",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is `null`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is `null`, else `false`."
            }
        ],
        "examples": [
            "_.isNull(null);\n// => true\n\n_.isNull(void 0);\n// => false"
        ],
        "name": "isNull",
        "longname": "_.isNull",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                371,
                394
            ],
            "filename": "isNull.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007734",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isNull",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isNumber.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007742",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                96
            ],
            "filename": "isNumber.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007747",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                162,
                191
            ],
            "filename": "isNumber.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007755",
                "name": "numberTag",
                "type": "Literal",
                "value": "[object Number]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "numberTag",
        "longname": "numberTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */",
        "meta": {
            "range": [
                755,
                881
            ],
            "filename": "isNumber.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007758",
                "name": "isNumber",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\nclassified as numbers, use the `_.isFinite` method.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a number, else `false`."
            }
        ],
        "examples": [
            "_.isNumber(3);\n// => true\n\n_.isNumber(Number.MIN_VALUE);\n// => true\n\n_.isNumber(Infinity);\n// => true\n\n_.isNumber('3');\n// => false"
        ],
        "name": "isNumber",
        "longname": "_.isNumber",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                883,
                908
            ],
            "filename": "isNumber.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007778",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isNumber",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */",
        "meta": {
            "range": [
                596,
                719
            ],
            "filename": "isObject.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007787",
                "name": "isObject",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "type": "_.isObject~type"
            }
        },
        "description": "Checks if `value` is the\n[language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\nof `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is an object, else `false`."
            }
        ],
        "examples": [
            "_.isObject({});\n// => true\n\n_.isObject([1, 2, 3]);\n// => true\n\n_.isObject(_.noop);\n// => true\n\n_.isObject(null);\n// => false"
        ],
        "name": "isObject",
        "longname": "_.isObject",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                629,
                648
            ],
            "filename": "isObject.js",
            "lineno": 29,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007792",
                "name": "type",
                "type": "UnaryExpression",
                "value": "typeofvalue"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "_.isObject~type",
        "kind": "member",
        "memberof": "_.isObject",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                721,
                746
            ],
            "filename": "isObject.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007809",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */",
        "meta": {
            "range": [
                512,
                596
            ],
            "filename": "isObjectLike.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007818",
                "name": "isObjectLike",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is object-like. A value is object-like if it's not `null`\nand has a `typeof` result of \"object\".",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is object-like, else `false`."
            }
        ],
        "examples": [
            "_.isObjectLike({});\n// => true\n\n_.isObjectLike([1, 2, 3]);\n// => true\n\n_.isObjectLike(_.noop);\n// => false\n\n_.isObjectLike(null);\n// => false"
        ],
        "name": "isObjectLike",
        "longname": "_.isObjectLike",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                598,
                627
            ],
            "filename": "isObjectLike.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007832",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isObjectLike",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isPlainObject.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007840",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                106
            ],
            "filename": "isPlainObject.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007845",
                "name": "getPrototype",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getPrototype",
        "longname": "getPrototype",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                152
            ],
            "filename": "isPlainObject.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007850",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                218,
                247
            ],
            "filename": "isPlainObject.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007858",
                "name": "objectTag",
                "type": "Literal",
                "value": "[object Object]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "objectTag",
        "longname": "objectTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                298,
                328
            ],
            "filename": "isPlainObject.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007862",
                "name": "funcProto",
                "type": "MemberExpression",
                "value": "Function.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "funcProto",
        "longname": "funcProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                334,
                364
            ],
            "filename": "isPlainObject.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007867",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "undocumented": true,
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to resolve the decompiled source of functions. */",
        "meta": {
            "range": [
                430,
                463
            ],
            "filename": "isPlainObject.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007873",
                "name": "funcToString",
                "type": "MemberExpression",
                "value": "funcProto.toString"
            }
        },
        "description": "Used to resolve the decompiled source of functions.",
        "name": "funcToString",
        "longname": "funcToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                519,
                562
            ],
            "filename": "isPlainObject.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007879",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to infer the `Object` constructor. */",
        "meta": {
            "range": [
                616,
                660
            ],
            "filename": "isPlainObject.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007885",
                "name": "objectCtorString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Used to infer the `Object` constructor.",
        "name": "objectCtorString",
        "longname": "objectCtorString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */",
        "meta": {
            "range": [
                1262,
                1649
            ],
            "filename": "isPlainObject.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007892",
                "name": "isPlainObject",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "proto": "_.isPlainObject~proto",
                "Ctor": "_.isPlainObject~Ctor"
            }
        },
        "description": "Checks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.8.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a plain object, else `false`."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n}\n\n_.isPlainObject(new Foo);\n// => false\n\n_.isPlainObject([1, 2, 3]);\n// => false\n\n_.isPlainObject({ 'x': 0, 'y': 0 });\n// => true\n\n_.isPlainObject(Object.create(null));\n// => true"
        ],
        "name": "isPlainObject",
        "longname": "_.isPlainObject",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1386,
                1413
            ],
            "filename": "isPlainObject.js",
            "lineno": 55,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007911",
                "name": "proto",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "proto",
        "longname": "_.isPlainObject~proto",
        "kind": "member",
        "memberof": "_.isPlainObject",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1466,
                1535
            ],
            "filename": "isPlainObject.js",
            "lineno": 59,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007924",
                "name": "Ctor",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Ctor",
        "longname": "_.isPlainObject~Ctor",
        "kind": "member",
        "memberof": "_.isPlainObject",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1651,
                1681
            ],
            "filename": "isPlainObject.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007954",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isPlainObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "isRegExp.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007962",
                "name": "baseIsRegExp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsRegExp",
        "longname": "baseIsRegExp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "isRegExp.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007967",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                152
            ],
            "filename": "isRegExp.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007972",
                "name": "nodeUtil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeUtil",
        "longname": "nodeUtil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                207,
                251
            ],
            "filename": "isRegExp.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007980",
                "name": "nodeIsRegExp",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeIsRegExp",
        "longname": "nodeIsRegExp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */",
        "meta": {
            "range": [
                594,
                658
            ],
            "filename": "isRegExp.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007988",
                "name": "isRegExp",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is classified as a `RegExp` object.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a regexp, else `false`."
            }
        ],
        "examples": [
            "_.isRegExp(/abc/);\n// => true\n\n_.isRegExp('/abc/');\n// => false"
        ],
        "name": "isRegExp",
        "longname": "_.isRegExp",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                661,
                686
            ],
            "filename": "isRegExp.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100007997",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isRegExp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "isSafeInteger.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008005",
                "name": "isInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isInteger",
        "longname": "isInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                118,
                153
            ],
            "filename": "isSafeInteger.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008013",
                "name": "MAX_SAFE_INTEGER",
                "type": "Literal",
                "value": 9007199254740991
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "MAX_SAFE_INTEGER",
        "longname": "MAX_SAFE_INTEGER",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n * double precision number which isn't the result of a rounded unsafe integer.\n *\n * **Note:** This method is based on\n * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n * @example\n *\n * _.isSafeInteger(3);\n * // => true\n *\n * _.isSafeInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isSafeInteger(Infinity);\n * // => false\n *\n * _.isSafeInteger('3');\n * // => false\n */",
        "meta": {
            "range": [
                811,
                930
            ],
            "filename": "isSafeInteger.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008016",
                "name": "isSafeInteger",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\ndouble precision number which isn't the result of a rounded unsafe integer.\n\n**Note:** This method is based on\n[`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a safe integer, else `false`."
            }
        ],
        "examples": [
            "_.isSafeInteger(3);\n// => true\n\n_.isSafeInteger(Number.MIN_VALUE);\n// => false\n\n_.isSafeInteger(Infinity);\n// => false\n\n_.isSafeInteger('3');\n// => false"
        ],
        "name": "isSafeInteger",
        "longname": "_.isSafeInteger",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                932,
                962
            ],
            "filename": "isSafeInteger.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008034",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isSafeInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "isSet.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008042",
                "name": "baseIsSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsSet",
        "longname": "baseIsSet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                98
            ],
            "filename": "isSet.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008047",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                146
            ],
            "filename": "isSet.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008052",
                "name": "nodeUtil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeUtil",
        "longname": "nodeUtil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                201,
                239
            ],
            "filename": "isSet.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008060",
                "name": "nodeIsSet",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeIsSet",
        "longname": "nodeIsSet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */",
        "meta": {
            "range": [
                576,
                628
            ],
            "filename": "isSet.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008068",
                "name": "isSet",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is classified as a `Set` object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a set, else `false`."
            }
        ],
        "examples": [
            "_.isSet(new Set);\n// => true\n\n_.isSet(new WeakSet);\n// => false"
        ],
        "name": "isSet",
        "longname": "_.isSet",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                631,
                653
            ],
            "filename": "isSet.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008077",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isSet",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isString.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008085",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                86
            ],
            "filename": "isString.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008090",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                92,
                132
            ],
            "filename": "isString.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008095",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                198,
                227
            ],
            "filename": "isString.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008103",
                "name": "stringTag",
                "type": "Literal",
                "value": "[object String]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "stringTag",
        "longname": "stringTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */",
        "meta": {
            "range": [
                573,
                718
            ],
            "filename": "isString.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008106",
                "name": "isString",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is classified as a `String` primitive or object.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a string, else `false`."
            }
        ],
        "examples": [
            "_.isString('abc');\n// => true\n\n_.isString(1);\n// => false"
        ],
        "name": "isString",
        "longname": "_.isString",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                720,
                745
            ],
            "filename": "isString.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008131",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isSymbol.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008139",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                96
            ],
            "filename": "isSymbol.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008144",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                162,
                191
            ],
            "filename": "isSymbol.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008152",
                "name": "symbolTag",
                "type": "Literal",
                "value": "[object Symbol]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "symbolTag",
        "longname": "symbolTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */",
        "meta": {
            "range": [
                551,
                677
            ],
            "filename": "isSymbol.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008155",
                "name": "isSymbol",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is classified as a `Symbol` primitive or object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a symbol, else `false`."
            }
        ],
        "examples": [
            "_.isSymbol(Symbol.iterator);\n// => true\n\n_.isSymbol('abc');\n// => false"
        ],
        "name": "isSymbol",
        "longname": "_.isSymbol",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                679,
                704
            ],
            "filename": "isSymbol.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008175",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isSymbol",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "isTypedArray.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008183",
                "name": "baseIsTypedArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsTypedArray",
        "longname": "baseIsTypedArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                68,
                112
            ],
            "filename": "isTypedArray.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008188",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                160
            ],
            "filename": "isTypedArray.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008193",
                "name": "nodeUtil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeUtil",
        "longname": "nodeUtil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                215,
                267
            ],
            "filename": "isTypedArray.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008201",
                "name": "nodeIsTypedArray",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nodeIsTypedArray",
        "longname": "nodeIsTypedArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */",
        "meta": {
            "range": [
                623,
                703
            ],
            "filename": "isTypedArray.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008209",
                "name": "isTypedArray",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is classified as a typed array.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a typed array, else `false`."
            }
        ],
        "examples": [
            "_.isTypedArray(new Uint8Array);\n// => true\n\n_.isTypedArray([]);\n// => false"
        ],
        "name": "isTypedArray",
        "longname": "_.isTypedArray",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                706,
                735
            ],
            "filename": "isTypedArray.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008218",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isTypedArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */",
        "meta": {
            "range": [
                338,
                399
            ],
            "filename": "isUndefined.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008227",
                "name": "isUndefined",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is `undefined`.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is `undefined`, else `false`."
            }
        ],
        "examples": [
            "_.isUndefined(void 0);\n// => true\n\n_.isUndefined(null);\n// => false"
        ],
        "name": "isUndefined",
        "longname": "_.isUndefined",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                401,
                429
            ],
            "filename": "isUndefined.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008236",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isUndefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "isWeakMap.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008244",
                "name": "getTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getTag",
        "longname": "getTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                88
            ],
            "filename": "isWeakMap.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008249",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                154,
                185
            ],
            "filename": "isWeakMap.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008257",
                "name": "weakMapTag",
                "type": "Literal",
                "value": "[object WeakMap]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "weakMapTag",
        "longname": "weakMapTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `WeakMap` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n * @example\n *\n * _.isWeakMap(new WeakMap);\n * // => true\n *\n * _.isWeakMap(new Map);\n * // => false\n */",
        "meta": {
            "range": [
                535,
                625
            ],
            "filename": "isWeakMap.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008260",
                "name": "isWeakMap",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is classified as a `WeakMap` object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a weak map, else `false`."
            }
        ],
        "examples": [
            "_.isWeakMap(new WeakMap);\n// => true\n\n_.isWeakMap(new Map);\n// => false"
        ],
        "name": "isWeakMap",
        "longname": "_.isWeakMap",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                627,
                653
            ],
            "filename": "isWeakMap.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008275",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isWeakMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "isWeakSet.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008283",
                "name": "baseGetTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGetTag",
        "longname": "baseGetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                96
            ],
            "filename": "isWeakSet.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008288",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                162,
                193
            ],
            "filename": "isWeakSet.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008296",
                "name": "weakSetTag",
                "type": "Literal",
                "value": "[object WeakSet]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "weakSetTag",
        "longname": "weakSetTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is classified as a `WeakSet` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n * @example\n *\n * _.isWeakSet(new WeakSet);\n * // => true\n *\n * _.isWeakSet(new Set);\n * // => false\n */",
        "meta": {
            "range": [
                543,
                637
            ],
            "filename": "isWeakSet.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008299",
                "name": "isWeakSet",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Checks if `value` is classified as a `WeakSet` object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to check.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is a weak set, else `false`."
            }
        ],
        "examples": [
            "_.isWeakSet(new WeakSet);\n// => true\n\n_.isWeakSet(new Set);\n// => false"
        ],
        "name": "isWeakSet",
        "longname": "_.isWeakSet",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                639,
                665
            ],
            "filename": "isWeakSet.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008314",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isWeakSet",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "iteratee.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008322",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                104
            ],
            "filename": "iteratee.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008327",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                171,
                190
            ],
            "filename": "iteratee.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008335",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with the arguments of the created\n * function. If `func` is a property name, the created function returns the\n * property value for a given element. If `func` is an array or object, the\n * created function returns `true` for elements that contain the equivalent\n * source properties, otherwise it returns `false`.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Util\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @returns {Function} Returns the callback.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, _.iteratee(['user', 'fred']));\n * // => [{ 'user': 'fred', 'age': 40 }]\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, _.iteratee('user'));\n * // => ['barney', 'fred']\n *\n * // Create custom iteratee shorthands.\n * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n *     return func.test(string);\n *   };\n * });\n *\n * _.filter(['abc', 'def'], /ef/);\n * // => ['def']\n */",
        "meta": {
            "range": [
                1585,
                1704
            ],
            "filename": "iteratee.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008338",
                "name": "iteratee",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func"
                ]
            }
        },
        "description": "Creates a function that invokes `func` with the arguments of the created\nfunction. If `func` is a property name, the created function returns the\nproperty value for a given element. If `func` is an array or object, the\ncreated function returns `true` for elements that contain the equivalent\nsource properties, otherwise it returns `false`.",
        "scope": "static",
        "since": "4.0.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The value to convert to a callback.",
                "name": "func"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the callback."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n// => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, _.iteratee(['user', 'fred']));\n// => [{ 'user': 'fred', 'age': 40 }]\n\n// The `_.property` iteratee shorthand.\n_.map(users, _.iteratee('user'));\n// => ['barney', 'fred']\n\n// Create custom iteratee shorthands.\n_.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n  return !_.isRegExp(func) ? iteratee(func) : function(string) {\n    return func.test(string);\n  };\n});\n\n_.filter(['abc', 'def'], /ef/);\n// => ['def']"
        ],
        "name": "iteratee",
        "longname": "_.iteratee",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1706,
                1731
            ],
            "filename": "iteratee.js",
            "lineno": 55,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008356",
                "name": "module.exports",
                "type": "Identifier",
                "value": "iteratee",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                63,
                91
            ],
            "filename": "join.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008366",
                "name": "arrayProto",
                "type": "MemberExpression",
                "value": "Array.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "arrayProto",
        "longname": "arrayProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                187,
                215
            ],
            "filename": "join.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008372",
                "name": "nativeJoin",
                "type": "MemberExpression",
                "value": "arrayProto.join"
            }
        },
        "undocumented": true,
        "name": "nativeJoin",
        "longname": "nativeJoin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {array} array The array to convert.\n * @param {string} separator An element separator.\n * @author string\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */",
        "meta": {
            "range": [
                594,
                694
            ],
            "filename": "join.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008377",
                "name": "join",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "separator"
                ]
            }
        },
        "description": "Converts all elements in `array` into a string separated by `separator`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to convert.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "An element separator.",
                "name": "separator"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the joined string."
            }
        ],
        "examples": [
            "_.join(['a', 'b', 'c'], '~');\n// => 'a~b~c'"
        ],
        "name": "join",
        "longname": "_.join",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                696,
                717
            ],
            "filename": "join.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008395",
                "name": "module.exports",
                "type": "Identifier",
                "value": "join",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                981,
                1492
            ],
            "filename": "jsonfn.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008410",
                "name": "exports.stringify",
                "type": "FunctionExpression",
                "paramnames": [
                    "obj"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "stringify",
        "longname": "stringify",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1084,
                1090
            ],
            "filename": "jsonfn.js",
            "lineno": 37,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008428",
                "name": "fnBody"
            }
        },
        "undocumented": true,
        "name": "fnBody",
        "longname": "<anonymous>~fnBody",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1171,
                1196
            ],
            "filename": "jsonfn.js",
            "lineno": 41,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008441",
                "name": "fnBody",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fnBody",
        "longname": "<anonymous>~fnBody",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1497,
                2241
            ],
            "filename": "jsonfn.js",
            "lineno": 55,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008481",
                "name": "exports.parse",
                "type": "FunctionExpression",
                "paramnames": [
                    "str",
                    "date2obj"
                ]
            },
            "vars": {
                "iso8061": "parse~iso8061",
                "": null
            }
        },
        "undocumented": true,
        "name": "parse",
        "longname": "parse",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1549,
                1640
            ],
            "filename": "jsonfn.js",
            "lineno": 57,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008490",
                "name": "iso8061",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iso8061",
        "longname": "parse~iso8061",
        "kind": "member",
        "memberof": "parse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1704,
                1710
            ],
            "filename": "jsonfn.js",
            "lineno": 60,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008507",
                "name": "prefix"
            }
        },
        "undocumented": true,
        "name": "prefix",
        "longname": "<anonymous>~prefix",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1848,
                1878
            ],
            "filename": "jsonfn.js",
            "lineno": 69,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008527",
                "name": "prefix",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "prefix",
        "longname": "<anonymous>~prefix",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2246,
                2352
            ],
            "filename": "jsonfn.js",
            "lineno": 88,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008590",
                "name": "exports.clone",
                "type": "FunctionExpression",
                "paramnames": [
                    "obj",
                    "date2obj"
                ]
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "clone",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "kebabCase.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008613",
                "name": "createCompounder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCompounder",
        "longname": "createCompounder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} string The string to convert.\n * @author string\n * @returns {kebab_cased} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */",
        "meta": {
            "range": [
                548,
                670
            ],
            "filename": "kebabCase.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008621",
                "name": "kebabCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts `string` to\n[kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "kebab_cased"
                    ]
                },
                "description": "Returns the kebab cased string."
            }
        ],
        "examples": [
            "_.kebabCase('Foo Bar');\n// => 'foo-bar'\n\n_.kebabCase('fooBar');\n// => 'foo-bar'\n\n_.kebabCase('__FOO_BAR__');\n// => 'foo-bar'"
        ],
        "name": "kebabCase",
        "longname": "_.kebabCase",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                673,
                699
            ],
            "filename": "kebabCase.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008643",
                "name": "module.exports",
                "type": "Identifier",
                "value": "kebabCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "keyBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008651",
                "name": "baseAssignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssignValue",
        "longname": "baseAssignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                124
            ],
            "filename": "keyBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008656",
                "name": "createAggregator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAggregator",
        "longname": "createAggregator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */",
        "meta": {
            "range": [
                1103,
                1200
            ],
            "filename": "keyBy.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008664",
                "name": "keyBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the last element responsible for generating the key. The\niteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee to transform keys.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the composed aggregate object."
            }
        ],
        "examples": [
            "var array = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n\n_.keyBy(array, function(o) {\n  return String.fromCharCode(o.code);\n});\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\n_.keyBy(array, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }"
        ],
        "name": "keyBy",
        "longname": "_.keyBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1203,
                1225
            ],
            "filename": "keyBy.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008680",
                "name": "module.exports",
                "type": "Identifier",
                "value": "keyBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "keys.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008688",
                "name": "arrayLikeKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayLikeKeys",
        "longname": "arrayLikeKeys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                104
            ],
            "filename": "keys.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008693",
                "name": "baseKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseKeys",
        "longname": "baseKeys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                148
            ],
            "filename": "keys.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008698",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */",
        "meta": {
            "range": [
                794,
                892
            ],
            "filename": "keys.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008705",
                "name": "keys",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            }
        },
        "description": "Creates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\nfor more details.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the array of property names."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n\n_.keys('hi');\n// => ['0', '1']"
        ],
        "name": "keys",
        "longname": "_.keys",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                894,
                915
            ],
            "filename": "keys.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008721",
                "name": "module.exports",
                "type": "Identifier",
                "value": "keys",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "keysIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008729",
                "name": "arrayLikeKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayLikeKeys",
        "longname": "arrayLikeKeys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                108
            ],
            "filename": "keysIn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008734",
                "name": "baseKeysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseKeysIn",
        "longname": "baseKeysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                152
            ],
            "filename": "keysIn.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008739",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */",
        "meta": {
            "range": [
                676,
                784
            ],
            "filename": "keysIn.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008746",
                "name": "keysIn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            }
        },
        "description": "Creates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the array of property names."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keysIn(new Foo);\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)"
        ],
        "name": "keysIn",
        "longname": "_.keysIn",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                786,
                809
            ],
            "filename": "keysIn.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008763",
                "name": "module.exports",
                "type": "Identifier",
                "value": "keysIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                2135
            ],
            "filename": "lang.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008771",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                56
            ],
            "filename": "lang.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008776",
                "name": "castArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castArray",
        "longname": "module.exports.castArray",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                87
            ],
            "filename": "lang.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008780",
                "name": "clone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "module.exports.clone",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                91,
                126
            ],
            "filename": "lang.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008784",
                "name": "cloneDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "cloneDeep",
        "longname": "module.exports.cloneDeep",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                130,
                173
            ],
            "filename": "lang.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008788",
                "name": "cloneDeepWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "cloneDeepWith",
        "longname": "module.exports.cloneDeepWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                177,
                212
            ],
            "filename": "lang.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008792",
                "name": "cloneWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "cloneWith",
        "longname": "module.exports.cloneWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                216,
                253
            ],
            "filename": "lang.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008796",
                "name": "conformsTo",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "conformsTo",
        "longname": "module.exports.conformsTo",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                257,
                278
            ],
            "filename": "lang.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008800",
                "name": "eq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "eq",
        "longname": "module.exports.eq",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                282,
                303
            ],
            "filename": "lang.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008804",
                "name": "gt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "gt",
        "longname": "module.exports.gt",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                307,
                330
            ],
            "filename": "lang.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008808",
                "name": "gte",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "gte",
        "longname": "module.exports.gte",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                334,
                373
            ],
            "filename": "lang.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008812",
                "name": "isArguments",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArguments",
        "longname": "module.exports.isArguments",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                377,
                408
            ],
            "filename": "lang.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008816",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "module.exports.isArray",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                412,
                455
            ],
            "filename": "lang.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008820",
                "name": "isArrayBuffer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayBuffer",
        "longname": "module.exports.isArrayBuffer",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                459,
                498
            ],
            "filename": "lang.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008824",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "module.exports.isArrayLike",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                502,
                553
            ],
            "filename": "lang.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008828",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "module.exports.isArrayLikeObject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                557,
                592
            ],
            "filename": "lang.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008832",
                "name": "isBoolean",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isBoolean",
        "longname": "module.exports.isBoolean",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                596,
                629
            ],
            "filename": "lang.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008836",
                "name": "isBuffer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isBuffer",
        "longname": "module.exports.isBuffer",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                633,
                662
            ],
            "filename": "lang.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008840",
                "name": "isDate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isDate",
        "longname": "module.exports.isDate",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                666,
                701
            ],
            "filename": "lang.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008844",
                "name": "isElement",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isElement",
        "longname": "module.exports.isElement",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                705,
                736
            ],
            "filename": "lang.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008848",
                "name": "isEmpty",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isEmpty",
        "longname": "module.exports.isEmpty",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                740,
                771
            ],
            "filename": "lang.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008852",
                "name": "isEqual",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isEqual",
        "longname": "module.exports.isEqual",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                775,
                814
            ],
            "filename": "lang.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008856",
                "name": "isEqualWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isEqualWith",
        "longname": "module.exports.isEqualWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                818,
                849
            ],
            "filename": "lang.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008860",
                "name": "isError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isError",
        "longname": "module.exports.isError",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                853,
                886
            ],
            "filename": "lang.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008864",
                "name": "isFinite",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFinite",
        "longname": "module.exports.isFinite",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                890,
                927
            ],
            "filename": "lang.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008868",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "module.exports.isFunction",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                931,
                966
            ],
            "filename": "lang.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008872",
                "name": "isInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isInteger",
        "longname": "module.exports.isInteger",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                970,
                1003
            ],
            "filename": "lang.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008876",
                "name": "isLength",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isLength",
        "longname": "module.exports.isLength",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1007,
                1034
            ],
            "filename": "lang.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008880",
                "name": "isMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isMap",
        "longname": "module.exports.isMap",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1038,
                1069
            ],
            "filename": "lang.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008884",
                "name": "isMatch",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isMatch",
        "longname": "module.exports.isMatch",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1073,
                1112
            ],
            "filename": "lang.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008888",
                "name": "isMatchWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isMatchWith",
        "longname": "module.exports.isMatchWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1116,
                1143
            ],
            "filename": "lang.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008892",
                "name": "isNaN",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isNaN",
        "longname": "module.exports.isNaN",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1147,
                1180
            ],
            "filename": "lang.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008896",
                "name": "isNative",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isNative",
        "longname": "module.exports.isNative",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1184,
                1211
            ],
            "filename": "lang.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008900",
                "name": "isNil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isNil",
        "longname": "module.exports.isNil",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1215,
                1244
            ],
            "filename": "lang.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008904",
                "name": "isNull",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isNull",
        "longname": "module.exports.isNull",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1248,
                1281
            ],
            "filename": "lang.js",
            "lineno": 35,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008908",
                "name": "isNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isNumber",
        "longname": "module.exports.isNumber",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1285,
                1318
            ],
            "filename": "lang.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008912",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "module.exports.isObject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1322,
                1363
            ],
            "filename": "lang.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008916",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "module.exports.isObjectLike",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1367,
                1410
            ],
            "filename": "lang.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008920",
                "name": "isPlainObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isPlainObject",
        "longname": "module.exports.isPlainObject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1414,
                1447
            ],
            "filename": "lang.js",
            "lineno": 39,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008924",
                "name": "isRegExp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isRegExp",
        "longname": "module.exports.isRegExp",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1451,
                1494
            ],
            "filename": "lang.js",
            "lineno": 40,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008928",
                "name": "isSafeInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isSafeInteger",
        "longname": "module.exports.isSafeInteger",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1498,
                1525
            ],
            "filename": "lang.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008932",
                "name": "isSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isSet",
        "longname": "module.exports.isSet",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1529,
                1562
            ],
            "filename": "lang.js",
            "lineno": 42,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008936",
                "name": "isString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isString",
        "longname": "module.exports.isString",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1566,
                1599
            ],
            "filename": "lang.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008940",
                "name": "isSymbol",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isSymbol",
        "longname": "module.exports.isSymbol",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1603,
                1644
            ],
            "filename": "lang.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008944",
                "name": "isTypedArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isTypedArray",
        "longname": "module.exports.isTypedArray",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1648,
                1687
            ],
            "filename": "lang.js",
            "lineno": 45,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008948",
                "name": "isUndefined",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isUndefined",
        "longname": "module.exports.isUndefined",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1691,
                1726
            ],
            "filename": "lang.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008952",
                "name": "isWeakMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isWeakMap",
        "longname": "module.exports.isWeakMap",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1730,
                1765
            ],
            "filename": "lang.js",
            "lineno": 47,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008956",
                "name": "isWeakSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isWeakSet",
        "longname": "module.exports.isWeakSet",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1769,
                1790
            ],
            "filename": "lang.js",
            "lineno": 48,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008960",
                "name": "lt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lt",
        "longname": "module.exports.lt",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1794,
                1817
            ],
            "filename": "lang.js",
            "lineno": 49,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008964",
                "name": "lte",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lte",
        "longname": "module.exports.lte",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1821,
                1852
            ],
            "filename": "lang.js",
            "lineno": 50,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008968",
                "name": "toArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toArray",
        "longname": "module.exports.toArray",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1856,
                1889
            ],
            "filename": "lang.js",
            "lineno": 51,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008972",
                "name": "toFinite",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toFinite",
        "longname": "module.exports.toFinite",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1893,
                1928
            ],
            "filename": "lang.js",
            "lineno": 52,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008976",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "module.exports.toInteger",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1932,
                1965
            ],
            "filename": "lang.js",
            "lineno": 53,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008980",
                "name": "toLength",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toLength",
        "longname": "module.exports.toLength",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1969,
                2002
            ],
            "filename": "lang.js",
            "lineno": 54,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008984",
                "name": "toNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "module.exports.toNumber",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2006,
                2049
            ],
            "filename": "lang.js",
            "lineno": 55,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008988",
                "name": "toPlainObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toPlainObject",
        "longname": "module.exports.toPlainObject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2053,
                2096
            ],
            "filename": "lang.js",
            "lineno": 56,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008992",
                "name": "toSafeInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toSafeInteger",
        "longname": "module.exports.toSafeInteger",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2100,
                2133
            ],
            "filename": "lang.js",
            "lineno": 57,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100008996",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "module.exports.toString",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {array} array The array to query.\n * @author element\n * @returns {array_tail} A js element (e.g number, variable, function etc)\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */",
        "meta": {
            "range": [
                310,
                432
            ],
            "filename": "last.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009004",
                "name": "last",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "length": "_.last~length"
            }
        },
        "description": "Gets the last element of `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array_tail"
                    ]
                },
                "description": "A js element (e.g number, variable, function etc)"
            }
        ],
        "examples": [
            "_.last([1, 2, 3]);\n// => 3"
        ],
        "name": "last",
        "longname": "_.last",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                339,
                380
            ],
            "filename": "last.js",
            "lineno": 19,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009009",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.last~length",
        "kind": "member",
        "memberof": "_.last",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                434,
                455
            ],
            "filename": "last.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009029",
                "name": "module.exports",
                "type": "Identifier",
                "value": "last",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "lastIndexOf.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009037",
                "name": "baseFindIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFindIndex",
        "longname": "baseFindIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                106
            ],
            "filename": "lastIndexOf.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009042",
                "name": "baseIsNaN",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIsNaN",
        "longname": "baseIsNaN",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                172
            ],
            "filename": "lastIndexOf.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009047",
                "name": "strictLastIndexOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strictLastIndexOf",
        "longname": "strictLastIndexOf",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                178,
                212
            ],
            "filename": "lastIndexOf.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009052",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                323,
                343
            ],
            "filename": "lastIndexOf.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009060",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                349,
                369
            ],
            "filename": "lastIndexOf.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009065",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */",
        "meta": {
            "range": [
                934,
                1368
            ],
            "filename": "lastIndexOf.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009070",
                "name": "lastIndexOf",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value",
                    "fromIndex"
                ]
            },
            "vars": {
                "length": "_.lastIndexOf~length",
                "index": "_.lastIndexOf~index"
            }
        },
        "description": "This method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to search for.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "array.length-1",
                "description": "The index to search from.",
                "name": "fromIndex"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index of the matched value, else `-1`."
            }
        ],
        "examples": [
            "_.lastIndexOf([1, 2, 1, 2], 2);\n// => 3\n\n// Search from the `fromIndex`.\n_.lastIndexOf([1, 2, 1, 2], 2, 2);\n// => 1"
        ],
        "name": "lastIndexOf",
        "longname": "_.lastIndexOf",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                988,
                1029
            ],
            "filename": "lastIndexOf.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009077",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.lastIndexOf~length",
        "kind": "member",
        "memberof": "_.lastIndexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1073,
                1087
            ],
            "filename": "lastIndexOf.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009095",
                "name": "index",
                "type": "Identifier",
                "value": "length"
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.lastIndexOf~index",
        "kind": "member",
        "memberof": "_.lastIndexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1126,
                1154
            ],
            "filename": "lastIndexOf.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009104",
                "name": "index",
                "type": "CallExpression",
                "funcscope": "_.lastIndexOf",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.lastIndexOf~index",
        "kind": "member",
        "memberof": "_.lastIndexOf",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1160,
                1239
            ],
            "filename": "lastIndexOf.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009110",
                "name": "index",
                "type": "ConditionalExpression",
                "funcscope": "_.lastIndexOf",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.lastIndexOf~index",
        "kind": "member",
        "memberof": "_.lastIndexOf",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1370,
                1398
            ],
            "filename": "lastIndexOf.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009145",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lastIndexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize strict`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */",
        "meta": {
            "range": [
                390,
                416
            ],
            "filename": "lodash.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009153",
                "name": "array",
                "type": "CallExpression",
                "value": ""
            }
        },
        "license": "Lodash (Custom Build) <https://lodash.com/>\nBuild: `lodash modularize strict`\nCopyright JS Foundation and other contributors <https://js.foundation/>\nReleased under MIT license <https://lodash.com/license>\nBased on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\nCopyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "name": "array",
        "longname": "array",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                422,
                458
            ],
            "filename": "lodash.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009158",
                "name": "collection",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "collection",
        "longname": "collection",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                464,
                488
            ],
            "filename": "lodash.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009163",
                "name": "date",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "date",
        "longname": "date",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                522
            ],
            "filename": "lodash.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009168",
                "name": "func",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                528,
                552
            ],
            "filename": "lodash.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009173",
                "name": "lang",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lang",
        "longname": "lang",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                558,
                582
            ],
            "filename": "lodash.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009178",
                "name": "math",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "math",
        "longname": "math",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                588,
                616
            ],
            "filename": "lodash.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009183",
                "name": "number",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "number",
        "longname": "number",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                622,
                650
            ],
            "filename": "lodash.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009188",
                "name": "object",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "object",
        "longname": "object",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                656,
                678
            ],
            "filename": "lodash.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009193",
                "name": "seq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "seq",
        "longname": "seq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                684,
                712
            ],
            "filename": "lodash.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009198",
                "name": "string",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "string",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                718,
                742
            ],
            "filename": "lodash.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009203",
                "name": "util",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "util",
        "longname": "util",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                748,
                796
            ],
            "filename": "lodash.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009208",
                "name": "LazyWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LazyWrapper",
        "longname": "LazyWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                802,
                854
            ],
            "filename": "lodash.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009213",
                "name": "LodashWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LodashWrapper",
        "longname": "LodashWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                860,
                898
            ],
            "filename": "lodash.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009218",
                "name": "Symbol",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Symbol",
        "longname": "Symbol",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                904,
                948
            ],
            "filename": "lodash.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009223",
                "name": "arrayEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEach",
        "longname": "arrayEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                954,
                998
            ],
            "filename": "lodash.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009228",
                "name": "arrayPush",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayPush",
        "longname": "arrayPush",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1004,
                1050
            ],
            "filename": "lodash.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009233",
                "name": "baseForOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwn",
        "longname": "baseForOwn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1056,
                1108
            ],
            "filename": "lodash.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009238",
                "name": "baseFunctions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFunctions",
        "longname": "baseFunctions",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1114,
                1160
            ],
            "filename": "lodash.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009243",
                "name": "baseInvoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseInvoke",
        "longname": "baseInvoke",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1166,
                1216
            ],
            "filename": "lodash.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009248",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1222,
                1264
            ],
            "filename": "lodash.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009253",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1270,
                1320
            ],
            "filename": "lodash.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009258",
                "name": "createHybrid",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createHybrid",
        "longname": "createHybrid",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1326,
                1358
            ],
            "filename": "lodash.js",
            "lineno": 32,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009263",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1364,
                1394
            ],
            "filename": "lodash.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009268",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1400,
                1432
            ],
            "filename": "lodash.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009273",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1438,
                1462
            ],
            "filename": "lodash.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009278",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1468,
                1492
            ],
            "filename": "lodash.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009283",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1498,
                1542
            ],
            "filename": "lodash.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009288",
                "name": "lazyClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lazyClone",
        "longname": "lazyClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1548,
                1596
            ],
            "filename": "lodash.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009293",
                "name": "lazyReverse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lazyReverse",
        "longname": "lazyReverse",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1602,
                1646
            ],
            "filename": "lodash.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009298",
                "name": "lazyValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lazyValue",
        "longname": "lazyValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1652,
                1678
            ],
            "filename": "lodash.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009303",
                "name": "mixin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mixin",
        "longname": "mixin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1684,
                1712
            ],
            "filename": "lodash.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009308",
                "name": "negate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "negate",
        "longname": "negate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1718,
                1762
            ],
            "filename": "lodash.js",
            "lineno": 42,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009313",
                "name": "realNames",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "realNames",
        "longname": "realNames",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1768,
                1792
            ],
            "filename": "lodash.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009318",
                "name": "thru",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "thru",
        "longname": "thru",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1798,
                1832
            ],
            "filename": "lodash.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009323",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1838,
                1873
            ],
            "filename": "lodash.js",
            "lineno": 45,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009328",
                "name": "lodash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lodash",
        "longname": "lodash",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as the semantic version number. */",
        "meta": {
            "range": [
                1939,
                1957
            ],
            "filename": "lodash.js",
            "lineno": 50,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009336",
                "name": "VERSION",
                "type": "Literal",
                "value": "4.17.4"
            }
        },
        "description": "Used as the semantic version number.",
        "name": "VERSION",
        "longname": "VERSION",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                2019,
                2041
            ],
            "filename": "lodash.js",
            "lineno": 53,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009340",
                "name": "WRAP_BIND_KEY_FLAG",
                "type": "Literal",
                "value": 2
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_BIND_KEY_FLAG",
        "longname": "WRAP_BIND_KEY_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to indicate the type of lazy iteratees. */",
        "meta": {
            "range": [
                2100,
                2120
            ],
            "filename": "lodash.js",
            "lineno": 56,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009344",
                "name": "LAZY_FILTER_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to indicate the type of lazy iteratees.",
        "name": "LAZY_FILTER_FLAG",
        "longname": "LAZY_FILTER_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2126,
                2145
            ],
            "filename": "lodash.js",
            "lineno": 57,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009347",
                "name": "LAZY_WHILE_FLAG",
                "type": "Literal",
                "value": 3
            }
        },
        "undocumented": true,
        "name": "LAZY_WHILE_FLAG",
        "longname": "LAZY_WHILE_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for the maximum length and index of an array. */",
        "meta": {
            "range": [
                2224,
                2253
            ],
            "filename": "lodash.js",
            "lineno": 60,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009351",
                "name": "MAX_ARRAY_LENGTH",
                "type": "Literal",
                "value": 4294967295
            }
        },
        "description": "Used as references for the maximum length and index of an array.",
        "name": "MAX_ARRAY_LENGTH",
        "longname": "MAX_ARRAY_LENGTH",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                2304,
                2332
            ],
            "filename": "lodash.js",
            "lineno": 63,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009355",
                "name": "arrayProto",
                "type": "MemberExpression",
                "value": "Array.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "arrayProto",
        "longname": "arrayProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2338,
                2368
            ],
            "filename": "lodash.js",
            "lineno": 64,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009360",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "undocumented": true,
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                2424,
                2467
            ],
            "filename": "lodash.js",
            "lineno": 67,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009366",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Built-in value references. */",
        "meta": {
            "range": [
                2508,
                2558
            ],
            "filename": "lodash.js",
            "lineno": 70,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009372",
                "name": "symIterator",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Built-in value references.",
        "name": "symIterator",
        "longname": "symIterator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2654,
                2674
            ],
            "filename": "lodash.js",
            "lineno": 73,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009381",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2680,
                2700
            ],
            "filename": "lodash.js",
            "lineno": 74,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009386",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2765,
                3221
            ],
            "filename": "lodash.js",
            "lineno": 77,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009392",
                "name": "mixin",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mixin",
        "longname": "mixin",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2873,
                2897
            ],
            "filename": "lodash.js",
            "lineno": 80,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009410",
                "name": "isObj",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObj",
        "longname": "<anonymous>~isObj",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2909,
                2938
            ],
            "filename": "lodash.js",
            "lineno": 81,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009415",
                "name": "props",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "props",
        "longname": "<anonymous>~props",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2950,
                3017
            ],
            "filename": "lodash.js",
            "lineno": 82,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009422",
                "name": "methodNames",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "methodNames",
        "longname": "<anonymous>~methodNames",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3085,
                3101
            ],
            "filename": "lodash.js",
            "lineno": 85,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009444",
                "name": "options",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "source",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "options",
        "longname": "<anonymous>~options",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3111,
                3126
            ],
            "filename": "lodash.js",
            "lineno": 86,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009448",
                "name": "source",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "object",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "<anonymous>~source",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3136,
                3149
            ],
            "filename": "lodash.js",
            "lineno": 87,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009452",
                "name": "object",
                "type": "ThisExpression",
                "funcscope": "<anonymous>",
                "value": "this",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "object",
        "longname": "<anonymous>~object",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3286,
                3311
            ],
            "filename": "lodash.js",
            "lineno": 95,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009463",
                "name": "lodash.after",
                "type": "MemberExpression",
                "value": "func.after",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "after",
        "longname": "lodash.after",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3313,
                3334
            ],
            "filename": "lodash.js",
            "lineno": 96,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009471",
                "name": "lodash.ary",
                "type": "MemberExpression",
                "value": "func.ary",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ary",
        "longname": "lodash.ary",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3336,
                3365
            ],
            "filename": "lodash.js",
            "lineno": 97,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009479",
                "name": "lodash.assign",
                "type": "MemberExpression",
                "value": "object.assign",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "assign",
        "longname": "lodash.assign",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3367,
                3400
            ],
            "filename": "lodash.js",
            "lineno": 98,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009487",
                "name": "lodash.assignIn",
                "type": "MemberExpression",
                "value": "object.assignIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "assignIn",
        "longname": "lodash.assignIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3402,
                3443
            ],
            "filename": "lodash.js",
            "lineno": 99,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009495",
                "name": "lodash.assignInWith",
                "type": "MemberExpression",
                "value": "object.assignInWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "assignInWith",
        "longname": "lodash.assignInWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3445,
                3482
            ],
            "filename": "lodash.js",
            "lineno": 100,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009503",
                "name": "lodash.assignWith",
                "type": "MemberExpression",
                "value": "object.assignWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "assignWith",
        "longname": "lodash.assignWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3484,
                3505
            ],
            "filename": "lodash.js",
            "lineno": 101,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009511",
                "name": "lodash.at",
                "type": "MemberExpression",
                "value": "object.at",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "at",
        "longname": "lodash.at",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3507,
                3534
            ],
            "filename": "lodash.js",
            "lineno": 102,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009519",
                "name": "lodash.before",
                "type": "MemberExpression",
                "value": "func.before",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "before",
        "longname": "lodash.before",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3536,
                3559
            ],
            "filename": "lodash.js",
            "lineno": 103,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009527",
                "name": "lodash.bind",
                "type": "MemberExpression",
                "value": "func.bind",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bind",
        "longname": "lodash.bind",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3561,
                3590
            ],
            "filename": "lodash.js",
            "lineno": 104,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009535",
                "name": "lodash.bindAll",
                "type": "MemberExpression",
                "value": "util.bindAll",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bindAll",
        "longname": "lodash.bindAll",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3592,
                3621
            ],
            "filename": "lodash.js",
            "lineno": 105,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009543",
                "name": "lodash.bindKey",
                "type": "MemberExpression",
                "value": "func.bindKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "bindKey",
        "longname": "lodash.bindKey",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3623,
                3656
            ],
            "filename": "lodash.js",
            "lineno": 106,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009551",
                "name": "lodash.castArray",
                "type": "MemberExpression",
                "value": "lang.castArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "castArray",
        "longname": "lodash.castArray",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3658,
                3682
            ],
            "filename": "lodash.js",
            "lineno": 107,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009559",
                "name": "lodash.chain",
                "type": "MemberExpression",
                "value": "seq.chain",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "lodash.chain",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3684,
                3710
            ],
            "filename": "lodash.js",
            "lineno": 108,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009567",
                "name": "lodash.chunk",
                "type": "MemberExpression",
                "value": "array.chunk",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "lodash.chunk",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3712,
                3742
            ],
            "filename": "lodash.js",
            "lineno": 109,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009575",
                "name": "lodash.compact",
                "type": "MemberExpression",
                "value": "array.compact",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "compact",
        "longname": "lodash.compact",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3744,
                3772
            ],
            "filename": "lodash.js",
            "lineno": 110,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009583",
                "name": "lodash.concat",
                "type": "MemberExpression",
                "value": "array.concat",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "concat",
        "longname": "lodash.concat",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3774,
                3797
            ],
            "filename": "lodash.js",
            "lineno": 111,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009591",
                "name": "lodash.cond",
                "type": "MemberExpression",
                "value": "util.cond",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cond",
        "longname": "lodash.cond",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3799,
                3830
            ],
            "filename": "lodash.js",
            "lineno": 112,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009599",
                "name": "lodash.conforms",
                "type": "MemberExpression",
                "value": "util.conforms",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "conforms",
        "longname": "lodash.conforms",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3832,
                3863
            ],
            "filename": "lodash.js",
            "lineno": 113,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009607",
                "name": "lodash.constant",
                "type": "MemberExpression",
                "value": "util.constant",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "constant",
        "longname": "lodash.constant",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3865,
                3900
            ],
            "filename": "lodash.js",
            "lineno": 114,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009615",
                "name": "lodash.countBy",
                "type": "MemberExpression",
                "value": "collection.countBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "countBy",
        "longname": "lodash.countBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3902,
                3931
            ],
            "filename": "lodash.js",
            "lineno": 115,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009623",
                "name": "lodash.create",
                "type": "MemberExpression",
                "value": "object.create",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "create",
        "longname": "lodash.create",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3933,
                3958
            ],
            "filename": "lodash.js",
            "lineno": 116,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009631",
                "name": "lodash.curry",
                "type": "MemberExpression",
                "value": "func.curry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "curry",
        "longname": "lodash.curry",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3960,
                3995
            ],
            "filename": "lodash.js",
            "lineno": 117,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009639",
                "name": "lodash.curryRight",
                "type": "MemberExpression",
                "value": "func.curryRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "curryRight",
        "longname": "lodash.curryRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3997,
                4028
            ],
            "filename": "lodash.js",
            "lineno": 118,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009647",
                "name": "lodash.debounce",
                "type": "MemberExpression",
                "value": "func.debounce",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "debounce",
        "longname": "lodash.debounce",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4030,
                4063
            ],
            "filename": "lodash.js",
            "lineno": 119,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009655",
                "name": "lodash.defaults",
                "type": "MemberExpression",
                "value": "object.defaults",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defaults",
        "longname": "lodash.defaults",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4065,
                4106
            ],
            "filename": "lodash.js",
            "lineno": 120,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009663",
                "name": "lodash.defaultsDeep",
                "type": "MemberExpression",
                "value": "object.defaultsDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defaultsDeep",
        "longname": "lodash.defaultsDeep",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4108,
                4133
            ],
            "filename": "lodash.js",
            "lineno": 121,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009671",
                "name": "lodash.defer",
                "type": "MemberExpression",
                "value": "func.defer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defer",
        "longname": "lodash.defer",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4135,
                4160
            ],
            "filename": "lodash.js",
            "lineno": 122,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009679",
                "name": "lodash.delay",
                "type": "MemberExpression",
                "value": "func.delay",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "delay",
        "longname": "lodash.delay",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4162,
                4198
            ],
            "filename": "lodash.js",
            "lineno": 123,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009687",
                "name": "lodash.difference",
                "type": "MemberExpression",
                "value": "array.difference",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "lodash.difference",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4200,
                4240
            ],
            "filename": "lodash.js",
            "lineno": 124,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009695",
                "name": "lodash.differenceBy",
                "type": "MemberExpression",
                "value": "array.differenceBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "differenceBy",
        "longname": "lodash.differenceBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4242,
                4286
            ],
            "filename": "lodash.js",
            "lineno": 125,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009703",
                "name": "lodash.differenceWith",
                "type": "MemberExpression",
                "value": "array.differenceWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "differenceWith",
        "longname": "lodash.differenceWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4288,
                4312
            ],
            "filename": "lodash.js",
            "lineno": 126,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009711",
                "name": "lodash.drop",
                "type": "MemberExpression",
                "value": "array.drop",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "drop",
        "longname": "lodash.drop",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4314,
                4348
            ],
            "filename": "lodash.js",
            "lineno": 127,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009719",
                "name": "lodash.dropRight",
                "type": "MemberExpression",
                "value": "array.dropRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "dropRight",
        "longname": "lodash.dropRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4350,
                4394
            ],
            "filename": "lodash.js",
            "lineno": 128,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009727",
                "name": "lodash.dropRightWhile",
                "type": "MemberExpression",
                "value": "array.dropRightWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "dropRightWhile",
        "longname": "lodash.dropRightWhile",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4396,
                4430
            ],
            "filename": "lodash.js",
            "lineno": 129,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009735",
                "name": "lodash.dropWhile",
                "type": "MemberExpression",
                "value": "array.dropWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "dropWhile",
        "longname": "lodash.dropWhile",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4432,
                4456
            ],
            "filename": "lodash.js",
            "lineno": 130,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009743",
                "name": "lodash.fill",
                "type": "MemberExpression",
                "value": "array.fill",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fill",
        "longname": "lodash.fill",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4458,
                4491
            ],
            "filename": "lodash.js",
            "lineno": 131,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009751",
                "name": "lodash.filter",
                "type": "MemberExpression",
                "value": "collection.filter",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "filter",
        "longname": "lodash.filter",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4493,
                4528
            ],
            "filename": "lodash.js",
            "lineno": 132,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009759",
                "name": "lodash.flatMap",
                "type": "MemberExpression",
                "value": "collection.flatMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flatMap",
        "longname": "lodash.flatMap",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4530,
                4573
            ],
            "filename": "lodash.js",
            "lineno": 133,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009767",
                "name": "lodash.flatMapDeep",
                "type": "MemberExpression",
                "value": "collection.flatMapDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flatMapDeep",
        "longname": "lodash.flatMapDeep",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4575,
                4620
            ],
            "filename": "lodash.js",
            "lineno": 134,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009775",
                "name": "lodash.flatMapDepth",
                "type": "MemberExpression",
                "value": "collection.flatMapDepth",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flatMapDepth",
        "longname": "lodash.flatMapDepth",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4622,
                4652
            ],
            "filename": "lodash.js",
            "lineno": 135,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009783",
                "name": "lodash.flatten",
                "type": "MemberExpression",
                "value": "array.flatten",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flatten",
        "longname": "lodash.flatten",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4654,
                4692
            ],
            "filename": "lodash.js",
            "lineno": 136,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009791",
                "name": "lodash.flattenDeep",
                "type": "MemberExpression",
                "value": "array.flattenDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flattenDeep",
        "longname": "lodash.flattenDeep",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4694,
                4734
            ],
            "filename": "lodash.js",
            "lineno": 137,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009799",
                "name": "lodash.flattenDepth",
                "type": "MemberExpression",
                "value": "array.flattenDepth",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flattenDepth",
        "longname": "lodash.flattenDepth",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4736,
                4759
            ],
            "filename": "lodash.js",
            "lineno": 138,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009807",
                "name": "lodash.flip",
                "type": "MemberExpression",
                "value": "func.flip",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flip",
        "longname": "lodash.flip",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4761,
                4784
            ],
            "filename": "lodash.js",
            "lineno": 139,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009815",
                "name": "lodash.flow",
                "type": "MemberExpression",
                "value": "util.flow",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flow",
        "longname": "lodash.flow",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4786,
                4819
            ],
            "filename": "lodash.js",
            "lineno": 140,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009823",
                "name": "lodash.flowRight",
                "type": "MemberExpression",
                "value": "util.flowRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "flowRight",
        "longname": "lodash.flowRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4821,
                4855
            ],
            "filename": "lodash.js",
            "lineno": 141,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009831",
                "name": "lodash.fromPairs",
                "type": "MemberExpression",
                "value": "array.fromPairs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fromPairs",
        "longname": "lodash.fromPairs",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4857,
                4892
            ],
            "filename": "lodash.js",
            "lineno": 142,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009839",
                "name": "lodash.functions",
                "type": "MemberExpression",
                "value": "object.functions",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "functions",
        "longname": "lodash.functions",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4894,
                4933
            ],
            "filename": "lodash.js",
            "lineno": 143,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009847",
                "name": "lodash.functionsIn",
                "type": "MemberExpression",
                "value": "object.functionsIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "functionsIn",
        "longname": "lodash.functionsIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4935,
                4970
            ],
            "filename": "lodash.js",
            "lineno": 144,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009855",
                "name": "lodash.groupBy",
                "type": "MemberExpression",
                "value": "collection.groupBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "groupBy",
        "longname": "lodash.groupBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4972,
                5002
            ],
            "filename": "lodash.js",
            "lineno": 145,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009863",
                "name": "lodash.initial",
                "type": "MemberExpression",
                "value": "array.initial",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "initial",
        "longname": "lodash.initial",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5004,
                5044
            ],
            "filename": "lodash.js",
            "lineno": 146,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009871",
                "name": "lodash.intersection",
                "type": "MemberExpression",
                "value": "array.intersection",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "intersection",
        "longname": "lodash.intersection",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5046,
                5090
            ],
            "filename": "lodash.js",
            "lineno": 147,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009879",
                "name": "lodash.intersectionBy",
                "type": "MemberExpression",
                "value": "array.intersectionBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "intersectionBy",
        "longname": "lodash.intersectionBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5092,
                5140
            ],
            "filename": "lodash.js",
            "lineno": 148,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009887",
                "name": "lodash.intersectionWith",
                "type": "MemberExpression",
                "value": "array.intersectionWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "intersectionWith",
        "longname": "lodash.intersectionWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5142,
                5171
            ],
            "filename": "lodash.js",
            "lineno": 149,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009895",
                "name": "lodash.invert",
                "type": "MemberExpression",
                "value": "object.invert",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "invert",
        "longname": "lodash.invert",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5173,
                5206
            ],
            "filename": "lodash.js",
            "lineno": 150,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009903",
                "name": "lodash.invertBy",
                "type": "MemberExpression",
                "value": "object.invertBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "invertBy",
        "longname": "lodash.invertBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5208,
                5247
            ],
            "filename": "lodash.js",
            "lineno": 151,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009911",
                "name": "lodash.invokeMap",
                "type": "MemberExpression",
                "value": "collection.invokeMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "invokeMap",
        "longname": "lodash.invokeMap",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5249,
                5280
            ],
            "filename": "lodash.js",
            "lineno": 152,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009919",
                "name": "lodash.iteratee",
                "type": "MemberExpression",
                "value": "util.iteratee",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "lodash.iteratee",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5282,
                5313
            ],
            "filename": "lodash.js",
            "lineno": 153,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009927",
                "name": "lodash.keyBy",
                "type": "MemberExpression",
                "value": "collection.keyBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "keyBy",
        "longname": "lodash.keyBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5315,
                5333
            ],
            "filename": "lodash.js",
            "lineno": 154,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009935",
                "name": "lodash.keys",
                "type": "Identifier",
                "value": "keys",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "lodash.keys",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5335,
                5364
            ],
            "filename": "lodash.js",
            "lineno": 155,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009941",
                "name": "lodash.keysIn",
                "type": "MemberExpression",
                "value": "object.keysIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "lodash.keysIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5366,
                5393
            ],
            "filename": "lodash.js",
            "lineno": 156,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009949",
                "name": "lodash.map",
                "type": "MemberExpression",
                "value": "collection.map",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "lodash.map",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5395,
                5426
            ],
            "filename": "lodash.js",
            "lineno": 157,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009957",
                "name": "lodash.mapKeys",
                "type": "MemberExpression",
                "value": "object.mapKeys",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mapKeys",
        "longname": "lodash.mapKeys",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5428,
                5463
            ],
            "filename": "lodash.js",
            "lineno": 158,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009965",
                "name": "lodash.mapValues",
                "type": "MemberExpression",
                "value": "object.mapValues",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mapValues",
        "longname": "lodash.mapValues",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5465,
                5494
            ],
            "filename": "lodash.js",
            "lineno": 159,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009973",
                "name": "lodash.matches",
                "type": "MemberExpression",
                "value": "util.matches",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "matches",
        "longname": "lodash.matches",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5496,
                5541
            ],
            "filename": "lodash.js",
            "lineno": 160,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009981",
                "name": "lodash.matchesProperty",
                "type": "MemberExpression",
                "value": "util.matchesProperty",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "matchesProperty",
        "longname": "lodash.matchesProperty",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5543,
                5572
            ],
            "filename": "lodash.js",
            "lineno": 161,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009989",
                "name": "lodash.memoize",
                "type": "MemberExpression",
                "value": "func.memoize",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "memoize",
        "longname": "lodash.memoize",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5574,
                5601
            ],
            "filename": "lodash.js",
            "lineno": 162,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100009997",
                "name": "lodash.merge",
                "type": "MemberExpression",
                "value": "object.merge",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "lodash.merge",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5603,
                5638
            ],
            "filename": "lodash.js",
            "lineno": 163,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010005",
                "name": "lodash.mergeWith",
                "type": "MemberExpression",
                "value": "object.mergeWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mergeWith",
        "longname": "lodash.mergeWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5640,
                5667
            ],
            "filename": "lodash.js",
            "lineno": 164,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010013",
                "name": "lodash.method",
                "type": "MemberExpression",
                "value": "util.method",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "method",
        "longname": "lodash.method",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5669,
                5700
            ],
            "filename": "lodash.js",
            "lineno": 165,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010021",
                "name": "lodash.methodOf",
                "type": "MemberExpression",
                "value": "util.methodOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "methodOf",
        "longname": "lodash.methodOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5702,
                5722
            ],
            "filename": "lodash.js",
            "lineno": 166,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010029",
                "name": "lodash.mixin",
                "type": "Identifier",
                "value": "mixin",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mixin",
        "longname": "lodash.mixin",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5724,
                5746
            ],
            "filename": "lodash.js",
            "lineno": 167,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010035",
                "name": "lodash.negate",
                "type": "Identifier",
                "value": "negate",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "negate",
        "longname": "lodash.negate",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5748,
                5775
            ],
            "filename": "lodash.js",
            "lineno": 168,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010041",
                "name": "lodash.nthArg",
                "type": "MemberExpression",
                "value": "util.nthArg",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nthArg",
        "longname": "lodash.nthArg",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5777,
                5802
            ],
            "filename": "lodash.js",
            "lineno": 169,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010049",
                "name": "lodash.omit",
                "type": "MemberExpression",
                "value": "object.omit",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "omit",
        "longname": "lodash.omit",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5804,
                5833
            ],
            "filename": "lodash.js",
            "lineno": 170,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010057",
                "name": "lodash.omitBy",
                "type": "MemberExpression",
                "value": "object.omitBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "omitBy",
        "longname": "lodash.omitBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5835,
                5858
            ],
            "filename": "lodash.js",
            "lineno": 171,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010065",
                "name": "lodash.once",
                "type": "MemberExpression",
                "value": "func.once",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "once",
        "longname": "lodash.once",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5860,
                5895
            ],
            "filename": "lodash.js",
            "lineno": 172,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010073",
                "name": "lodash.orderBy",
                "type": "MemberExpression",
                "value": "collection.orderBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "orderBy",
        "longname": "lodash.orderBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5897,
                5920
            ],
            "filename": "lodash.js",
            "lineno": 173,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010081",
                "name": "lodash.over",
                "type": "MemberExpression",
                "value": "util.over",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "over",
        "longname": "lodash.over",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5922,
                5953
            ],
            "filename": "lodash.js",
            "lineno": 174,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010089",
                "name": "lodash.overArgs",
                "type": "MemberExpression",
                "value": "func.overArgs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "overArgs",
        "longname": "lodash.overArgs",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5955,
                5988
            ],
            "filename": "lodash.js",
            "lineno": 175,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010097",
                "name": "lodash.overEvery",
                "type": "MemberExpression",
                "value": "util.overEvery",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "overEvery",
        "longname": "lodash.overEvery",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5990,
                6021
            ],
            "filename": "lodash.js",
            "lineno": 176,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010105",
                "name": "lodash.overSome",
                "type": "MemberExpression",
                "value": "util.overSome",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "overSome",
        "longname": "lodash.overSome",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6023,
                6052
            ],
            "filename": "lodash.js",
            "lineno": 177,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010113",
                "name": "lodash.partial",
                "type": "MemberExpression",
                "value": "func.partial",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "partial",
        "longname": "lodash.partial",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6054,
                6093
            ],
            "filename": "lodash.js",
            "lineno": 178,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010121",
                "name": "lodash.partialRight",
                "type": "MemberExpression",
                "value": "func.partialRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "partialRight",
        "longname": "lodash.partialRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6095,
                6134
            ],
            "filename": "lodash.js",
            "lineno": 179,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010129",
                "name": "lodash.partition",
                "type": "MemberExpression",
                "value": "collection.partition",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "partition",
        "longname": "lodash.partition",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6136,
                6161
            ],
            "filename": "lodash.js",
            "lineno": 180,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010137",
                "name": "lodash.pick",
                "type": "MemberExpression",
                "value": "object.pick",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pick",
        "longname": "lodash.pick",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6163,
                6192
            ],
            "filename": "lodash.js",
            "lineno": 181,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010145",
                "name": "lodash.pickBy",
                "type": "MemberExpression",
                "value": "object.pickBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pickBy",
        "longname": "lodash.pickBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6194,
                6225
            ],
            "filename": "lodash.js",
            "lineno": 182,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010153",
                "name": "lodash.property",
                "type": "MemberExpression",
                "value": "util.property",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "property",
        "longname": "lodash.property",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6227,
                6262
            ],
            "filename": "lodash.js",
            "lineno": 183,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010161",
                "name": "lodash.propertyOf",
                "type": "MemberExpression",
                "value": "util.propertyOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "propertyOf",
        "longname": "lodash.propertyOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6264,
                6288
            ],
            "filename": "lodash.js",
            "lineno": 184,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010169",
                "name": "lodash.pull",
                "type": "MemberExpression",
                "value": "array.pull",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pull",
        "longname": "lodash.pull",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6290,
                6320
            ],
            "filename": "lodash.js",
            "lineno": 185,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010177",
                "name": "lodash.pullAll",
                "type": "MemberExpression",
                "value": "array.pullAll",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pullAll",
        "longname": "lodash.pullAll",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6322,
                6356
            ],
            "filename": "lodash.js",
            "lineno": 186,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010185",
                "name": "lodash.pullAllBy",
                "type": "MemberExpression",
                "value": "array.pullAllBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pullAllBy",
        "longname": "lodash.pullAllBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6358,
                6396
            ],
            "filename": "lodash.js",
            "lineno": 187,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010193",
                "name": "lodash.pullAllWith",
                "type": "MemberExpression",
                "value": "array.pullAllWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pullAllWith",
        "longname": "lodash.pullAllWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6398,
                6426
            ],
            "filename": "lodash.js",
            "lineno": 188,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010201",
                "name": "lodash.pullAt",
                "type": "MemberExpression",
                "value": "array.pullAt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pullAt",
        "longname": "lodash.pullAt",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6428,
                6453
            ],
            "filename": "lodash.js",
            "lineno": 189,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010209",
                "name": "lodash.range",
                "type": "MemberExpression",
                "value": "util.range",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "range",
        "longname": "lodash.range",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6455,
                6490
            ],
            "filename": "lodash.js",
            "lineno": 190,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010217",
                "name": "lodash.rangeRight",
                "type": "MemberExpression",
                "value": "util.rangeRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "rangeRight",
        "longname": "lodash.rangeRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6492,
                6517
            ],
            "filename": "lodash.js",
            "lineno": 191,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010225",
                "name": "lodash.rearg",
                "type": "MemberExpression",
                "value": "func.rearg",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "rearg",
        "longname": "lodash.rearg",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6519,
                6552
            ],
            "filename": "lodash.js",
            "lineno": 192,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010233",
                "name": "lodash.reject",
                "type": "MemberExpression",
                "value": "collection.reject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "reject",
        "longname": "lodash.reject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6554,
                6582
            ],
            "filename": "lodash.js",
            "lineno": 193,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010241",
                "name": "lodash.remove",
                "type": "MemberExpression",
                "value": "array.remove",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "remove",
        "longname": "lodash.remove",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6584,
                6607
            ],
            "filename": "lodash.js",
            "lineno": 194,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010249",
                "name": "lodash.rest",
                "type": "MemberExpression",
                "value": "func.rest",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "rest",
        "longname": "lodash.rest",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6609,
                6639
            ],
            "filename": "lodash.js",
            "lineno": 195,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010257",
                "name": "lodash.reverse",
                "type": "MemberExpression",
                "value": "array.reverse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "reverse",
        "longname": "lodash.reverse",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6641,
                6682
            ],
            "filename": "lodash.js",
            "lineno": 196,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010265",
                "name": "lodash.sampleSize",
                "type": "MemberExpression",
                "value": "collection.sampleSize",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sampleSize",
        "longname": "lodash.sampleSize",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6684,
                6707
            ],
            "filename": "lodash.js",
            "lineno": 197,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010273",
                "name": "lodash.set",
                "type": "MemberExpression",
                "value": "object.set",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "set",
        "longname": "lodash.set",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6709,
                6740
            ],
            "filename": "lodash.js",
            "lineno": 198,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010281",
                "name": "lodash.setWith",
                "type": "MemberExpression",
                "value": "object.setWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "setWith",
        "longname": "lodash.setWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6742,
                6777
            ],
            "filename": "lodash.js",
            "lineno": 199,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010289",
                "name": "lodash.shuffle",
                "type": "MemberExpression",
                "value": "collection.shuffle",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "shuffle",
        "longname": "lodash.shuffle",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6779,
                6805
            ],
            "filename": "lodash.js",
            "lineno": 200,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010297",
                "name": "lodash.slice",
                "type": "MemberExpression",
                "value": "array.slice",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "slice",
        "longname": "lodash.slice",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6807,
                6840
            ],
            "filename": "lodash.js",
            "lineno": 201,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010305",
                "name": "lodash.sortBy",
                "type": "MemberExpression",
                "value": "collection.sortBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortBy",
        "longname": "lodash.sortBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6842,
                6878
            ],
            "filename": "lodash.js",
            "lineno": 202,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010313",
                "name": "lodash.sortedUniq",
                "type": "MemberExpression",
                "value": "array.sortedUniq",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedUniq",
        "longname": "lodash.sortedUniq",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6880,
                6920
            ],
            "filename": "lodash.js",
            "lineno": 203,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010321",
                "name": "lodash.sortedUniqBy",
                "type": "MemberExpression",
                "value": "array.sortedUniqBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedUniqBy",
        "longname": "lodash.sortedUniqBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6922,
                6949
            ],
            "filename": "lodash.js",
            "lineno": 204,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010329",
                "name": "lodash.split",
                "type": "MemberExpression",
                "value": "string.split",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "split",
        "longname": "lodash.split",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6951,
                6978
            ],
            "filename": "lodash.js",
            "lineno": 205,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010337",
                "name": "lodash.spread",
                "type": "MemberExpression",
                "value": "func.spread",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "spread",
        "longname": "lodash.spread",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6980,
                7004
            ],
            "filename": "lodash.js",
            "lineno": 206,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010345",
                "name": "lodash.tail",
                "type": "MemberExpression",
                "value": "array.tail",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "tail",
        "longname": "lodash.tail",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7006,
                7030
            ],
            "filename": "lodash.js",
            "lineno": 207,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010353",
                "name": "lodash.take",
                "type": "MemberExpression",
                "value": "array.take",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "take",
        "longname": "lodash.take",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7032,
                7066
            ],
            "filename": "lodash.js",
            "lineno": 208,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010361",
                "name": "lodash.takeRight",
                "type": "MemberExpression",
                "value": "array.takeRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "takeRight",
        "longname": "lodash.takeRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7068,
                7112
            ],
            "filename": "lodash.js",
            "lineno": 209,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010369",
                "name": "lodash.takeRightWhile",
                "type": "MemberExpression",
                "value": "array.takeRightWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "takeRightWhile",
        "longname": "lodash.takeRightWhile",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7114,
                7148
            ],
            "filename": "lodash.js",
            "lineno": 210,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010377",
                "name": "lodash.takeWhile",
                "type": "MemberExpression",
                "value": "array.takeWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "takeWhile",
        "longname": "lodash.takeWhile",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7150,
                7170
            ],
            "filename": "lodash.js",
            "lineno": 211,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010385",
                "name": "lodash.tap",
                "type": "MemberExpression",
                "value": "seq.tap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "tap",
        "longname": "lodash.tap",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7172,
                7203
            ],
            "filename": "lodash.js",
            "lineno": 212,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010393",
                "name": "lodash.throttle",
                "type": "MemberExpression",
                "value": "func.throttle",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "throttle",
        "longname": "lodash.throttle",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7205,
                7223
            ],
            "filename": "lodash.js",
            "lineno": 213,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010401",
                "name": "lodash.thru",
                "type": "Identifier",
                "value": "thru",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "thru",
        "longname": "lodash.thru",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7225,
                7254
            ],
            "filename": "lodash.js",
            "lineno": 214,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010407",
                "name": "lodash.toArray",
                "type": "MemberExpression",
                "value": "lang.toArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toArray",
        "longname": "lodash.toArray",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7256,
                7287
            ],
            "filename": "lodash.js",
            "lineno": 215,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010415",
                "name": "lodash.toPairs",
                "type": "MemberExpression",
                "value": "object.toPairs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toPairs",
        "longname": "lodash.toPairs",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7289,
                7324
            ],
            "filename": "lodash.js",
            "lineno": 216,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010423",
                "name": "lodash.toPairsIn",
                "type": "MemberExpression",
                "value": "object.toPairsIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toPairsIn",
        "longname": "lodash.toPairsIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7326,
                7353
            ],
            "filename": "lodash.js",
            "lineno": 217,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010431",
                "name": "lodash.toPath",
                "type": "MemberExpression",
                "value": "util.toPath",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toPath",
        "longname": "lodash.toPath",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7355,
                7396
            ],
            "filename": "lodash.js",
            "lineno": 218,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010439",
                "name": "lodash.toPlainObject",
                "type": "MemberExpression",
                "value": "lang.toPlainObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toPlainObject",
        "longname": "lodash.toPlainObject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7398,
                7433
            ],
            "filename": "lodash.js",
            "lineno": 219,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010447",
                "name": "lodash.transform",
                "type": "MemberExpression",
                "value": "object.transform",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "transform",
        "longname": "lodash.transform",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7435,
                7460
            ],
            "filename": "lodash.js",
            "lineno": 220,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010455",
                "name": "lodash.unary",
                "type": "MemberExpression",
                "value": "func.unary",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unary",
        "longname": "lodash.unary",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7462,
                7488
            ],
            "filename": "lodash.js",
            "lineno": 221,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010463",
                "name": "lodash.union",
                "type": "MemberExpression",
                "value": "array.union",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "union",
        "longname": "lodash.union",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7490,
                7520
            ],
            "filename": "lodash.js",
            "lineno": 222,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010471",
                "name": "lodash.unionBy",
                "type": "MemberExpression",
                "value": "array.unionBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unionBy",
        "longname": "lodash.unionBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7522,
                7556
            ],
            "filename": "lodash.js",
            "lineno": 223,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010479",
                "name": "lodash.unionWith",
                "type": "MemberExpression",
                "value": "array.unionWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unionWith",
        "longname": "lodash.unionWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7558,
                7582
            ],
            "filename": "lodash.js",
            "lineno": 224,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010487",
                "name": "lodash.uniq",
                "type": "MemberExpression",
                "value": "array.uniq",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "uniq",
        "longname": "lodash.uniq",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7584,
                7612
            ],
            "filename": "lodash.js",
            "lineno": 225,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010495",
                "name": "lodash.uniqBy",
                "type": "MemberExpression",
                "value": "array.uniqBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "uniqBy",
        "longname": "lodash.uniqBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7614,
                7646
            ],
            "filename": "lodash.js",
            "lineno": 226,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010503",
                "name": "lodash.uniqWith",
                "type": "MemberExpression",
                "value": "array.uniqWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "uniqWith",
        "longname": "lodash.uniqWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7648,
                7675
            ],
            "filename": "lodash.js",
            "lineno": 227,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010511",
                "name": "lodash.unset",
                "type": "MemberExpression",
                "value": "object.unset",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unset",
        "longname": "lodash.unset",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7677,
                7703
            ],
            "filename": "lodash.js",
            "lineno": 228,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010519",
                "name": "lodash.unzip",
                "type": "MemberExpression",
                "value": "array.unzip",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unzip",
        "longname": "lodash.unzip",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7705,
                7739
            ],
            "filename": "lodash.js",
            "lineno": 229,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010527",
                "name": "lodash.unzipWith",
                "type": "MemberExpression",
                "value": "array.unzipWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unzipWith",
        "longname": "lodash.unzipWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7741,
                7770
            ],
            "filename": "lodash.js",
            "lineno": 230,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010535",
                "name": "lodash.update",
                "type": "MemberExpression",
                "value": "object.update",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "update",
        "longname": "lodash.update",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7772,
                7809
            ],
            "filename": "lodash.js",
            "lineno": 231,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010543",
                "name": "lodash.updateWith",
                "type": "MemberExpression",
                "value": "object.updateWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "updateWith",
        "longname": "lodash.updateWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7811,
                7840
            ],
            "filename": "lodash.js",
            "lineno": 232,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010551",
                "name": "lodash.values",
                "type": "MemberExpression",
                "value": "object.values",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "lodash.values",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7842,
                7875
            ],
            "filename": "lodash.js",
            "lineno": 233,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010559",
                "name": "lodash.valuesIn",
                "type": "MemberExpression",
                "value": "object.valuesIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "valuesIn",
        "longname": "lodash.valuesIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7877,
                7907
            ],
            "filename": "lodash.js",
            "lineno": 234,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010567",
                "name": "lodash.without",
                "type": "MemberExpression",
                "value": "array.without",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "without",
        "longname": "lodash.without",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7909,
                7936
            ],
            "filename": "lodash.js",
            "lineno": 235,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010575",
                "name": "lodash.words",
                "type": "MemberExpression",
                "value": "string.words",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "words",
        "longname": "lodash.words",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7938,
                7961
            ],
            "filename": "lodash.js",
            "lineno": 236,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010583",
                "name": "lodash.wrap",
                "type": "MemberExpression",
                "value": "func.wrap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrap",
        "longname": "lodash.wrap",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7963,
                7985
            ],
            "filename": "lodash.js",
            "lineno": 237,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010591",
                "name": "lodash.xor",
                "type": "MemberExpression",
                "value": "array.xor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "xor",
        "longname": "lodash.xor",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7987,
                8013
            ],
            "filename": "lodash.js",
            "lineno": 238,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010599",
                "name": "lodash.xorBy",
                "type": "MemberExpression",
                "value": "array.xorBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "xorBy",
        "longname": "lodash.xorBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8015,
                8045
            ],
            "filename": "lodash.js",
            "lineno": 239,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010607",
                "name": "lodash.xorWith",
                "type": "MemberExpression",
                "value": "array.xorWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "xorWith",
        "longname": "lodash.xorWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8047,
                8069
            ],
            "filename": "lodash.js",
            "lineno": 240,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010615",
                "name": "lodash.zip",
                "type": "MemberExpression",
                "value": "array.zip",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "zip",
        "longname": "lodash.zip",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8071,
                8105
            ],
            "filename": "lodash.js",
            "lineno": 241,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010623",
                "name": "lodash.zipObject",
                "type": "MemberExpression",
                "value": "array.zipObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "zipObject",
        "longname": "lodash.zipObject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8107,
                8149
            ],
            "filename": "lodash.js",
            "lineno": 242,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010631",
                "name": "lodash.zipObjectDeep",
                "type": "MemberExpression",
                "value": "array.zipObjectDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "zipObjectDeep",
        "longname": "lodash.zipObjectDeep",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8151,
                8181
            ],
            "filename": "lodash.js",
            "lineno": 243,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010639",
                "name": "lodash.zipWith",
                "type": "MemberExpression",
                "value": "array.zipWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "zipWith",
        "longname": "lodash.zipWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8200,
                8231
            ],
            "filename": "lodash.js",
            "lineno": 246,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010647",
                "name": "lodash.entries",
                "type": "MemberExpression",
                "value": "object.toPairs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "lodash.entries",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8233,
                8268
            ],
            "filename": "lodash.js",
            "lineno": 247,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010655",
                "name": "lodash.entriesIn",
                "type": "MemberExpression",
                "value": "object.toPairsIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "entriesIn",
        "longname": "lodash.entriesIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8270,
                8301
            ],
            "filename": "lodash.js",
            "lineno": 248,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010663",
                "name": "lodash.extend",
                "type": "MemberExpression",
                "value": "object.assignIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "extend",
        "longname": "lodash.extend",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8303,
                8342
            ],
            "filename": "lodash.js",
            "lineno": 249,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010671",
                "name": "lodash.extendWith",
                "type": "MemberExpression",
                "value": "object.assignInWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "extendWith",
        "longname": "lodash.extendWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8471,
                8492
            ],
            "filename": "lodash.js",
            "lineno": 255,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010684",
                "name": "lodash.add",
                "type": "MemberExpression",
                "value": "math.add",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "add",
        "longname": "lodash.add",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8494,
                8523
            ],
            "filename": "lodash.js",
            "lineno": 256,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010692",
                "name": "lodash.attempt",
                "type": "MemberExpression",
                "value": "util.attempt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "attempt",
        "longname": "lodash.attempt",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8525,
                8560
            ],
            "filename": "lodash.js",
            "lineno": 257,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010700",
                "name": "lodash.camelCase",
                "type": "MemberExpression",
                "value": "string.camelCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "camelCase",
        "longname": "lodash.camelCase",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8562,
                8599
            ],
            "filename": "lodash.js",
            "lineno": 258,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010708",
                "name": "lodash.capitalize",
                "type": "MemberExpression",
                "value": "string.capitalize",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "capitalize",
        "longname": "lodash.capitalize",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8601,
                8624
            ],
            "filename": "lodash.js",
            "lineno": 259,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010716",
                "name": "lodash.ceil",
                "type": "MemberExpression",
                "value": "math.ceil",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ceil",
        "longname": "lodash.ceil",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8626,
                8653
            ],
            "filename": "lodash.js",
            "lineno": 260,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010724",
                "name": "lodash.clamp",
                "type": "MemberExpression",
                "value": "number.clamp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "clamp",
        "longname": "lodash.clamp",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8655,
                8680
            ],
            "filename": "lodash.js",
            "lineno": 261,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010732",
                "name": "lodash.clone",
                "type": "MemberExpression",
                "value": "lang.clone",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "lodash.clone",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8682,
                8715
            ],
            "filename": "lodash.js",
            "lineno": 262,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010740",
                "name": "lodash.cloneDeep",
                "type": "MemberExpression",
                "value": "lang.cloneDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cloneDeep",
        "longname": "lodash.cloneDeep",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8717,
                8758
            ],
            "filename": "lodash.js",
            "lineno": 263,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010748",
                "name": "lodash.cloneDeepWith",
                "type": "MemberExpression",
                "value": "lang.cloneDeepWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cloneDeepWith",
        "longname": "lodash.cloneDeepWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8760,
                8793
            ],
            "filename": "lodash.js",
            "lineno": 264,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010756",
                "name": "lodash.cloneWith",
                "type": "MemberExpression",
                "value": "lang.cloneWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cloneWith",
        "longname": "lodash.cloneWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8795,
                8830
            ],
            "filename": "lodash.js",
            "lineno": 265,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010764",
                "name": "lodash.conformsTo",
                "type": "MemberExpression",
                "value": "lang.conformsTo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "conformsTo",
        "longname": "lodash.conformsTo",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8832,
                8861
            ],
            "filename": "lodash.js",
            "lineno": 266,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010772",
                "name": "lodash.deburr",
                "type": "MemberExpression",
                "value": "string.deburr",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "deburr",
        "longname": "lodash.deburr",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8863,
                8896
            ],
            "filename": "lodash.js",
            "lineno": 267,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010780",
                "name": "lodash.defaultTo",
                "type": "MemberExpression",
                "value": "util.defaultTo",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defaultTo",
        "longname": "lodash.defaultTo",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8898,
                8925
            ],
            "filename": "lodash.js",
            "lineno": 268,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010788",
                "name": "lodash.divide",
                "type": "MemberExpression",
                "value": "math.divide",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "divide",
        "longname": "lodash.divide",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8927,
                8960
            ],
            "filename": "lodash.js",
            "lineno": 269,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010796",
                "name": "lodash.endsWith",
                "type": "MemberExpression",
                "value": "string.endsWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "endsWith",
        "longname": "lodash.endsWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8962,
                8981
            ],
            "filename": "lodash.js",
            "lineno": 270,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010804",
                "name": "lodash.eq",
                "type": "MemberExpression",
                "value": "lang.eq",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "eq",
        "longname": "lodash.eq",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8983,
                9012
            ],
            "filename": "lodash.js",
            "lineno": 271,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010812",
                "name": "lodash.escape",
                "type": "MemberExpression",
                "value": "string.escape",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "escape",
        "longname": "lodash.escape",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9014,
                9055
            ],
            "filename": "lodash.js",
            "lineno": 272,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010820",
                "name": "lodash.escapeRegExp",
                "type": "MemberExpression",
                "value": "string.escapeRegExp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "escapeRegExp",
        "longname": "lodash.escapeRegExp",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9057,
                9088
            ],
            "filename": "lodash.js",
            "lineno": 273,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010828",
                "name": "lodash.every",
                "type": "MemberExpression",
                "value": "collection.every",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "every",
        "longname": "lodash.every",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9090,
                9119
            ],
            "filename": "lodash.js",
            "lineno": 274,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010836",
                "name": "lodash.find",
                "type": "MemberExpression",
                "value": "collection.find",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "find",
        "longname": "lodash.find",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9121,
                9155
            ],
            "filename": "lodash.js",
            "lineno": 275,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010844",
                "name": "lodash.findIndex",
                "type": "MemberExpression",
                "value": "array.findIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "findIndex",
        "longname": "lodash.findIndex",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9157,
                9188
            ],
            "filename": "lodash.js",
            "lineno": 276,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010852",
                "name": "lodash.findKey",
                "type": "MemberExpression",
                "value": "object.findKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "findKey",
        "longname": "lodash.findKey",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9190,
                9227
            ],
            "filename": "lodash.js",
            "lineno": 277,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010860",
                "name": "lodash.findLast",
                "type": "MemberExpression",
                "value": "collection.findLast",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "findLast",
        "longname": "lodash.findLast",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9229,
                9271
            ],
            "filename": "lodash.js",
            "lineno": 278,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010868",
                "name": "lodash.findLastIndex",
                "type": "MemberExpression",
                "value": "array.findLastIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "findLastIndex",
        "longname": "lodash.findLastIndex",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9273,
                9312
            ],
            "filename": "lodash.js",
            "lineno": 279,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010876",
                "name": "lodash.findLastKey",
                "type": "MemberExpression",
                "value": "object.findLastKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "findLastKey",
        "longname": "lodash.findLastKey",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9314,
                9339
            ],
            "filename": "lodash.js",
            "lineno": 280,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010884",
                "name": "lodash.floor",
                "type": "MemberExpression",
                "value": "math.floor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "floor",
        "longname": "lodash.floor",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9341,
                9376
            ],
            "filename": "lodash.js",
            "lineno": 281,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010892",
                "name": "lodash.forEach",
                "type": "MemberExpression",
                "value": "collection.forEach",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "forEach",
        "longname": "lodash.forEach",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9378,
                9423
            ],
            "filename": "lodash.js",
            "lineno": 282,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010900",
                "name": "lodash.forEachRight",
                "type": "MemberExpression",
                "value": "collection.forEachRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "forEachRight",
        "longname": "lodash.forEachRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9425,
                9452
            ],
            "filename": "lodash.js",
            "lineno": 283,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010908",
                "name": "lodash.forIn",
                "type": "MemberExpression",
                "value": "object.forIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "forIn",
        "longname": "lodash.forIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9454,
                9491
            ],
            "filename": "lodash.js",
            "lineno": 284,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010916",
                "name": "lodash.forInRight",
                "type": "MemberExpression",
                "value": "object.forInRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "forInRight",
        "longname": "lodash.forInRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9493,
                9522
            ],
            "filename": "lodash.js",
            "lineno": 285,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010924",
                "name": "lodash.forOwn",
                "type": "MemberExpression",
                "value": "object.forOwn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "forOwn",
        "longname": "lodash.forOwn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9524,
                9563
            ],
            "filename": "lodash.js",
            "lineno": 286,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010932",
                "name": "lodash.forOwnRight",
                "type": "MemberExpression",
                "value": "object.forOwnRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "forOwnRight",
        "longname": "lodash.forOwnRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9565,
                9588
            ],
            "filename": "lodash.js",
            "lineno": 287,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010940",
                "name": "lodash.get",
                "type": "MemberExpression",
                "value": "object.get",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "lodash.get",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9590,
                9609
            ],
            "filename": "lodash.js",
            "lineno": 288,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010948",
                "name": "lodash.gt",
                "type": "MemberExpression",
                "value": "lang.gt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "gt",
        "longname": "lodash.gt",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9611,
                9632
            ],
            "filename": "lodash.js",
            "lineno": 289,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010956",
                "name": "lodash.gte",
                "type": "MemberExpression",
                "value": "lang.gte",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "gte",
        "longname": "lodash.gte",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9634,
                9657
            ],
            "filename": "lodash.js",
            "lineno": 290,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010964",
                "name": "lodash.has",
                "type": "MemberExpression",
                "value": "object.has",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "has",
        "longname": "lodash.has",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9659,
                9686
            ],
            "filename": "lodash.js",
            "lineno": 291,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010972",
                "name": "lodash.hasIn",
                "type": "MemberExpression",
                "value": "object.hasIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "hasIn",
        "longname": "lodash.hasIn",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9688,
                9712
            ],
            "filename": "lodash.js",
            "lineno": 292,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010980",
                "name": "lodash.head",
                "type": "MemberExpression",
                "value": "array.head",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "head",
        "longname": "lodash.head",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9714,
                9740
            ],
            "filename": "lodash.js",
            "lineno": 293,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010988",
                "name": "lodash.identity",
                "type": "Identifier",
                "value": "identity",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "lodash.identity",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9742,
                9779
            ],
            "filename": "lodash.js",
            "lineno": 294,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100010994",
                "name": "lodash.includes",
                "type": "MemberExpression",
                "value": "collection.includes",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "includes",
        "longname": "lodash.includes",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9781,
                9811
            ],
            "filename": "lodash.js",
            "lineno": 295,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011002",
                "name": "lodash.indexOf",
                "type": "MemberExpression",
                "value": "array.indexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "indexOf",
        "longname": "lodash.indexOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9813,
                9844
            ],
            "filename": "lodash.js",
            "lineno": 296,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011010",
                "name": "lodash.inRange",
                "type": "MemberExpression",
                "value": "number.inRange",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "inRange",
        "longname": "lodash.inRange",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9846,
                9875
            ],
            "filename": "lodash.js",
            "lineno": 297,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011018",
                "name": "lodash.invoke",
                "type": "MemberExpression",
                "value": "object.invoke",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "invoke",
        "longname": "lodash.invoke",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9877,
                9914
            ],
            "filename": "lodash.js",
            "lineno": 298,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011026",
                "name": "lodash.isArguments",
                "type": "MemberExpression",
                "value": "lang.isArguments",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isArguments",
        "longname": "lodash.isArguments",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9916,
                9940
            ],
            "filename": "lodash.js",
            "lineno": 299,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011034",
                "name": "lodash.isArray",
                "type": "Identifier",
                "value": "isArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "lodash.isArray",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9942,
                9983
            ],
            "filename": "lodash.js",
            "lineno": 300,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011040",
                "name": "lodash.isArrayBuffer",
                "type": "MemberExpression",
                "value": "lang.isArrayBuffer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isArrayBuffer",
        "longname": "lodash.isArrayBuffer",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9985,
                10022
            ],
            "filename": "lodash.js",
            "lineno": 301,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011048",
                "name": "lodash.isArrayLike",
                "type": "MemberExpression",
                "value": "lang.isArrayLike",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "lodash.isArrayLike",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10024,
                10073
            ],
            "filename": "lodash.js",
            "lineno": 302,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011056",
                "name": "lodash.isArrayLikeObject",
                "type": "MemberExpression",
                "value": "lang.isArrayLikeObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "lodash.isArrayLikeObject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10075,
                10108
            ],
            "filename": "lodash.js",
            "lineno": 303,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011064",
                "name": "lodash.isBoolean",
                "type": "MemberExpression",
                "value": "lang.isBoolean",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isBoolean",
        "longname": "lodash.isBoolean",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10110,
                10141
            ],
            "filename": "lodash.js",
            "lineno": 304,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011072",
                "name": "lodash.isBuffer",
                "type": "MemberExpression",
                "value": "lang.isBuffer",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isBuffer",
        "longname": "lodash.isBuffer",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10143,
                10170
            ],
            "filename": "lodash.js",
            "lineno": 305,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011080",
                "name": "lodash.isDate",
                "type": "MemberExpression",
                "value": "lang.isDate",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isDate",
        "longname": "lodash.isDate",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10172,
                10205
            ],
            "filename": "lodash.js",
            "lineno": 306,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011088",
                "name": "lodash.isElement",
                "type": "MemberExpression",
                "value": "lang.isElement",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isElement",
        "longname": "lodash.isElement",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10207,
                10236
            ],
            "filename": "lodash.js",
            "lineno": 307,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011096",
                "name": "lodash.isEmpty",
                "type": "MemberExpression",
                "value": "lang.isEmpty",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isEmpty",
        "longname": "lodash.isEmpty",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10238,
                10267
            ],
            "filename": "lodash.js",
            "lineno": 308,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011104",
                "name": "lodash.isEqual",
                "type": "MemberExpression",
                "value": "lang.isEqual",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isEqual",
        "longname": "lodash.isEqual",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10269,
                10306
            ],
            "filename": "lodash.js",
            "lineno": 309,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011112",
                "name": "lodash.isEqualWith",
                "type": "MemberExpression",
                "value": "lang.isEqualWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isEqualWith",
        "longname": "lodash.isEqualWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10308,
                10337
            ],
            "filename": "lodash.js",
            "lineno": 310,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011120",
                "name": "lodash.isError",
                "type": "MemberExpression",
                "value": "lang.isError",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isError",
        "longname": "lodash.isError",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10339,
                10370
            ],
            "filename": "lodash.js",
            "lineno": 311,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011128",
                "name": "lodash.isFinite",
                "type": "MemberExpression",
                "value": "lang.isFinite",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isFinite",
        "longname": "lodash.isFinite",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10372,
                10407
            ],
            "filename": "lodash.js",
            "lineno": 312,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011136",
                "name": "lodash.isFunction",
                "type": "MemberExpression",
                "value": "lang.isFunction",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "lodash.isFunction",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10409,
                10442
            ],
            "filename": "lodash.js",
            "lineno": 313,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011144",
                "name": "lodash.isInteger",
                "type": "MemberExpression",
                "value": "lang.isInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isInteger",
        "longname": "lodash.isInteger",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10444,
                10475
            ],
            "filename": "lodash.js",
            "lineno": 314,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011152",
                "name": "lodash.isLength",
                "type": "MemberExpression",
                "value": "lang.isLength",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLength",
        "longname": "lodash.isLength",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10477,
                10502
            ],
            "filename": "lodash.js",
            "lineno": 315,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011160",
                "name": "lodash.isMap",
                "type": "MemberExpression",
                "value": "lang.isMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isMap",
        "longname": "lodash.isMap",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10504,
                10533
            ],
            "filename": "lodash.js",
            "lineno": 316,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011168",
                "name": "lodash.isMatch",
                "type": "MemberExpression",
                "value": "lang.isMatch",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isMatch",
        "longname": "lodash.isMatch",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10535,
                10572
            ],
            "filename": "lodash.js",
            "lineno": 317,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011176",
                "name": "lodash.isMatchWith",
                "type": "MemberExpression",
                "value": "lang.isMatchWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isMatchWith",
        "longname": "lodash.isMatchWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10574,
                10599
            ],
            "filename": "lodash.js",
            "lineno": 318,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011184",
                "name": "lodash.isNaN",
                "type": "MemberExpression",
                "value": "lang.isNaN",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNaN",
        "longname": "lodash.isNaN",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10601,
                10632
            ],
            "filename": "lodash.js",
            "lineno": 319,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011192",
                "name": "lodash.isNative",
                "type": "MemberExpression",
                "value": "lang.isNative",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNative",
        "longname": "lodash.isNative",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10634,
                10659
            ],
            "filename": "lodash.js",
            "lineno": 320,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011200",
                "name": "lodash.isNil",
                "type": "MemberExpression",
                "value": "lang.isNil",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNil",
        "longname": "lodash.isNil",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10661,
                10688
            ],
            "filename": "lodash.js",
            "lineno": 321,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011208",
                "name": "lodash.isNull",
                "type": "MemberExpression",
                "value": "lang.isNull",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNull",
        "longname": "lodash.isNull",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10690,
                10721
            ],
            "filename": "lodash.js",
            "lineno": 322,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011216",
                "name": "lodash.isNumber",
                "type": "MemberExpression",
                "value": "lang.isNumber",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNumber",
        "longname": "lodash.isNumber",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10723,
                10749
            ],
            "filename": "lodash.js",
            "lineno": 323,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011224",
                "name": "lodash.isObject",
                "type": "Identifier",
                "value": "isObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "lodash.isObject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10751,
                10790
            ],
            "filename": "lodash.js",
            "lineno": 324,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011230",
                "name": "lodash.isObjectLike",
                "type": "MemberExpression",
                "value": "lang.isObjectLike",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "lodash.isObjectLike",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10792,
                10833
            ],
            "filename": "lodash.js",
            "lineno": 325,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011238",
                "name": "lodash.isPlainObject",
                "type": "MemberExpression",
                "value": "lang.isPlainObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isPlainObject",
        "longname": "lodash.isPlainObject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10835,
                10866
            ],
            "filename": "lodash.js",
            "lineno": 326,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011246",
                "name": "lodash.isRegExp",
                "type": "MemberExpression",
                "value": "lang.isRegExp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isRegExp",
        "longname": "lodash.isRegExp",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10868,
                10909
            ],
            "filename": "lodash.js",
            "lineno": 327,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011254",
                "name": "lodash.isSafeInteger",
                "type": "MemberExpression",
                "value": "lang.isSafeInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isSafeInteger",
        "longname": "lodash.isSafeInteger",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10911,
                10936
            ],
            "filename": "lodash.js",
            "lineno": 328,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011262",
                "name": "lodash.isSet",
                "type": "MemberExpression",
                "value": "lang.isSet",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isSet",
        "longname": "lodash.isSet",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10938,
                10969
            ],
            "filename": "lodash.js",
            "lineno": 329,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011270",
                "name": "lodash.isString",
                "type": "MemberExpression",
                "value": "lang.isString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isString",
        "longname": "lodash.isString",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10971,
                11002
            ],
            "filename": "lodash.js",
            "lineno": 330,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011278",
                "name": "lodash.isSymbol",
                "type": "MemberExpression",
                "value": "lang.isSymbol",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isSymbol",
        "longname": "lodash.isSymbol",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11004,
                11043
            ],
            "filename": "lodash.js",
            "lineno": 331,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011286",
                "name": "lodash.isTypedArray",
                "type": "MemberExpression",
                "value": "lang.isTypedArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isTypedArray",
        "longname": "lodash.isTypedArray",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11045,
                11082
            ],
            "filename": "lodash.js",
            "lineno": 332,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011294",
                "name": "lodash.isUndefined",
                "type": "MemberExpression",
                "value": "lang.isUndefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isUndefined",
        "longname": "lodash.isUndefined",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11084,
                11117
            ],
            "filename": "lodash.js",
            "lineno": 333,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011302",
                "name": "lodash.isWeakMap",
                "type": "MemberExpression",
                "value": "lang.isWeakMap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isWeakMap",
        "longname": "lodash.isWeakMap",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11119,
                11152
            ],
            "filename": "lodash.js",
            "lineno": 334,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011310",
                "name": "lodash.isWeakSet",
                "type": "MemberExpression",
                "value": "lang.isWeakSet",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isWeakSet",
        "longname": "lodash.isWeakSet",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11154,
                11178
            ],
            "filename": "lodash.js",
            "lineno": 335,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011318",
                "name": "lodash.join",
                "type": "MemberExpression",
                "value": "array.join",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "join",
        "longname": "lodash.join",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11180,
                11215
            ],
            "filename": "lodash.js",
            "lineno": 336,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011326",
                "name": "lodash.kebabCase",
                "type": "MemberExpression",
                "value": "string.kebabCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "kebabCase",
        "longname": "lodash.kebabCase",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11217,
                11235
            ],
            "filename": "lodash.js",
            "lineno": 337,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011334",
                "name": "lodash.last",
                "type": "Identifier",
                "value": "last",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "lodash.last",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11237,
                11275
            ],
            "filename": "lodash.js",
            "lineno": 338,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011340",
                "name": "lodash.lastIndexOf",
                "type": "MemberExpression",
                "value": "array.lastIndexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastIndexOf",
        "longname": "lodash.lastIndexOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11277,
                11312
            ],
            "filename": "lodash.js",
            "lineno": 339,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011348",
                "name": "lodash.lowerCase",
                "type": "MemberExpression",
                "value": "string.lowerCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lowerCase",
        "longname": "lodash.lowerCase",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11314,
                11351
            ],
            "filename": "lodash.js",
            "lineno": 340,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011356",
                "name": "lodash.lowerFirst",
                "type": "MemberExpression",
                "value": "string.lowerFirst",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lowerFirst",
        "longname": "lodash.lowerFirst",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11353,
                11372
            ],
            "filename": "lodash.js",
            "lineno": 341,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011364",
                "name": "lodash.lt",
                "type": "MemberExpression",
                "value": "lang.lt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lt",
        "longname": "lodash.lt",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11374,
                11395
            ],
            "filename": "lodash.js",
            "lineno": 342,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011372",
                "name": "lodash.lte",
                "type": "MemberExpression",
                "value": "lang.lte",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lte",
        "longname": "lodash.lte",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11397,
                11418
            ],
            "filename": "lodash.js",
            "lineno": 343,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011380",
                "name": "lodash.max",
                "type": "MemberExpression",
                "value": "math.max",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "lodash.max",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11420,
                11445
            ],
            "filename": "lodash.js",
            "lineno": 344,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011388",
                "name": "lodash.maxBy",
                "type": "MemberExpression",
                "value": "math.maxBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "maxBy",
        "longname": "lodash.maxBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11447,
                11470
            ],
            "filename": "lodash.js",
            "lineno": 345,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011396",
                "name": "lodash.mean",
                "type": "MemberExpression",
                "value": "math.mean",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mean",
        "longname": "lodash.mean",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11472,
                11499
            ],
            "filename": "lodash.js",
            "lineno": 346,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011404",
                "name": "lodash.meanBy",
                "type": "MemberExpression",
                "value": "math.meanBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "meanBy",
        "longname": "lodash.meanBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11501,
                11522
            ],
            "filename": "lodash.js",
            "lineno": 347,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011412",
                "name": "lodash.min",
                "type": "MemberExpression",
                "value": "math.min",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "lodash.min",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11524,
                11549
            ],
            "filename": "lodash.js",
            "lineno": 348,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011420",
                "name": "lodash.minBy",
                "type": "MemberExpression",
                "value": "math.minBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "minBy",
        "longname": "lodash.minBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11551,
                11584
            ],
            "filename": "lodash.js",
            "lineno": 349,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011428",
                "name": "lodash.stubArray",
                "type": "MemberExpression",
                "value": "util.stubArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stubArray",
        "longname": "lodash.stubArray",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11586,
                11619
            ],
            "filename": "lodash.js",
            "lineno": 350,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011436",
                "name": "lodash.stubFalse",
                "type": "MemberExpression",
                "value": "util.stubFalse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stubFalse",
        "longname": "lodash.stubFalse",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11621,
                11656
            ],
            "filename": "lodash.js",
            "lineno": 351,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011444",
                "name": "lodash.stubObject",
                "type": "MemberExpression",
                "value": "util.stubObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stubObject",
        "longname": "lodash.stubObject",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11658,
                11693
            ],
            "filename": "lodash.js",
            "lineno": 352,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011452",
                "name": "lodash.stubString",
                "type": "MemberExpression",
                "value": "util.stubString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stubString",
        "longname": "lodash.stubString",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11695,
                11726
            ],
            "filename": "lodash.js",
            "lineno": 353,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011460",
                "name": "lodash.stubTrue",
                "type": "MemberExpression",
                "value": "util.stubTrue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stubTrue",
        "longname": "lodash.stubTrue",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11728,
                11759
            ],
            "filename": "lodash.js",
            "lineno": 354,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011468",
                "name": "lodash.multiply",
                "type": "MemberExpression",
                "value": "math.multiply",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "multiply",
        "longname": "lodash.multiply",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11761,
                11783
            ],
            "filename": "lodash.js",
            "lineno": 355,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011476",
                "name": "lodash.nth",
                "type": "MemberExpression",
                "value": "array.nth",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nth",
        "longname": "lodash.nth",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11785,
                11808
            ],
            "filename": "lodash.js",
            "lineno": 356,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011484",
                "name": "lodash.noop",
                "type": "MemberExpression",
                "value": "util.noop",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "noop",
        "longname": "lodash.noop",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11810,
                11831
            ],
            "filename": "lodash.js",
            "lineno": 357,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011492",
                "name": "lodash.now",
                "type": "MemberExpression",
                "value": "date.now",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "now",
        "longname": "lodash.now",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11833,
                11856
            ],
            "filename": "lodash.js",
            "lineno": 358,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011500",
                "name": "lodash.pad",
                "type": "MemberExpression",
                "value": "string.pad",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pad",
        "longname": "lodash.pad",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11858,
                11887
            ],
            "filename": "lodash.js",
            "lineno": 359,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011508",
                "name": "lodash.padEnd",
                "type": "MemberExpression",
                "value": "string.padEnd",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "padEnd",
        "longname": "lodash.padEnd",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11889,
                11922
            ],
            "filename": "lodash.js",
            "lineno": 360,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011516",
                "name": "lodash.padStart",
                "type": "MemberExpression",
                "value": "string.padStart",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "padStart",
        "longname": "lodash.padStart",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11924,
                11957
            ],
            "filename": "lodash.js",
            "lineno": 361,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011524",
                "name": "lodash.parseInt",
                "type": "MemberExpression",
                "value": "string.parseInt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parseInt",
        "longname": "lodash.parseInt",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11959,
                11988
            ],
            "filename": "lodash.js",
            "lineno": 362,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011532",
                "name": "lodash.random",
                "type": "MemberExpression",
                "value": "number.random",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "random",
        "longname": "lodash.random",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11990,
                12023
            ],
            "filename": "lodash.js",
            "lineno": 363,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011540",
                "name": "lodash.reduce",
                "type": "MemberExpression",
                "value": "collection.reduce",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "reduce",
        "longname": "lodash.reduce",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12025,
                12068
            ],
            "filename": "lodash.js",
            "lineno": 364,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011548",
                "name": "lodash.reduceRight",
                "type": "MemberExpression",
                "value": "collection.reduceRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "reduceRight",
        "longname": "lodash.reduceRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12070,
                12099
            ],
            "filename": "lodash.js",
            "lineno": 365,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011556",
                "name": "lodash.repeat",
                "type": "MemberExpression",
                "value": "string.repeat",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "repeat",
        "longname": "lodash.repeat",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12101,
                12132
            ],
            "filename": "lodash.js",
            "lineno": 366,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011564",
                "name": "lodash.replace",
                "type": "MemberExpression",
                "value": "string.replace",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "replace",
        "longname": "lodash.replace",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12134,
                12163
            ],
            "filename": "lodash.js",
            "lineno": 367,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011572",
                "name": "lodash.result",
                "type": "MemberExpression",
                "value": "object.result",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "lodash.result",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12165,
                12190
            ],
            "filename": "lodash.js",
            "lineno": 368,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011580",
                "name": "lodash.round",
                "type": "MemberExpression",
                "value": "math.round",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "round",
        "longname": "lodash.round",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12192,
                12225
            ],
            "filename": "lodash.js",
            "lineno": 369,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011588",
                "name": "lodash.sample",
                "type": "MemberExpression",
                "value": "collection.sample",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sample",
        "longname": "lodash.sample",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12227,
                12256
            ],
            "filename": "lodash.js",
            "lineno": 370,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011596",
                "name": "lodash.size",
                "type": "MemberExpression",
                "value": "collection.size",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "lodash.size",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12258,
                12293
            ],
            "filename": "lodash.js",
            "lineno": 371,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011604",
                "name": "lodash.snakeCase",
                "type": "MemberExpression",
                "value": "string.snakeCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "snakeCase",
        "longname": "lodash.snakeCase",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12295,
                12324
            ],
            "filename": "lodash.js",
            "lineno": 372,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011612",
                "name": "lodash.some",
                "type": "MemberExpression",
                "value": "collection.some",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "some",
        "longname": "lodash.some",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12326,
                12364
            ],
            "filename": "lodash.js",
            "lineno": 373,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011620",
                "name": "lodash.sortedIndex",
                "type": "MemberExpression",
                "value": "array.sortedIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedIndex",
        "longname": "lodash.sortedIndex",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12366,
                12408
            ],
            "filename": "lodash.js",
            "lineno": 374,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011628",
                "name": "lodash.sortedIndexBy",
                "type": "MemberExpression",
                "value": "array.sortedIndexBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedIndexBy",
        "longname": "lodash.sortedIndexBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12410,
                12452
            ],
            "filename": "lodash.js",
            "lineno": 375,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011636",
                "name": "lodash.sortedIndexOf",
                "type": "MemberExpression",
                "value": "array.sortedIndexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedIndexOf",
        "longname": "lodash.sortedIndexOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12454,
                12500
            ],
            "filename": "lodash.js",
            "lineno": 376,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011644",
                "name": "lodash.sortedLastIndex",
                "type": "MemberExpression",
                "value": "array.sortedLastIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedLastIndex",
        "longname": "lodash.sortedLastIndex",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12502,
                12552
            ],
            "filename": "lodash.js",
            "lineno": 377,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011652",
                "name": "lodash.sortedLastIndexBy",
                "type": "MemberExpression",
                "value": "array.sortedLastIndexBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedLastIndexBy",
        "longname": "lodash.sortedLastIndexBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12554,
                12604
            ],
            "filename": "lodash.js",
            "lineno": 378,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011660",
                "name": "lodash.sortedLastIndexOf",
                "type": "MemberExpression",
                "value": "array.sortedLastIndexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortedLastIndexOf",
        "longname": "lodash.sortedLastIndexOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12606,
                12641
            ],
            "filename": "lodash.js",
            "lineno": 379,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011668",
                "name": "lodash.startCase",
                "type": "MemberExpression",
                "value": "string.startCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "startCase",
        "longname": "lodash.startCase",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12643,
                12680
            ],
            "filename": "lodash.js",
            "lineno": 380,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011676",
                "name": "lodash.startsWith",
                "type": "MemberExpression",
                "value": "string.startsWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "startsWith",
        "longname": "lodash.startsWith",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12682,
                12713
            ],
            "filename": "lodash.js",
            "lineno": 381,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011684",
                "name": "lodash.subtract",
                "type": "MemberExpression",
                "value": "math.subtract",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "subtract",
        "longname": "lodash.subtract",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12715,
                12736
            ],
            "filename": "lodash.js",
            "lineno": 382,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011692",
                "name": "lodash.sum",
                "type": "MemberExpression",
                "value": "math.sum",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "lodash.sum",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12738,
                12763
            ],
            "filename": "lodash.js",
            "lineno": 383,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011700",
                "name": "lodash.sumBy",
                "type": "MemberExpression",
                "value": "math.sumBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sumBy",
        "longname": "lodash.sumBy",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12765,
                12798
            ],
            "filename": "lodash.js",
            "lineno": 384,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011708",
                "name": "lodash.template",
                "type": "MemberExpression",
                "value": "string.template",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "template",
        "longname": "lodash.template",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12800,
                12825
            ],
            "filename": "lodash.js",
            "lineno": 385,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011716",
                "name": "lodash.times",
                "type": "MemberExpression",
                "value": "util.times",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "times",
        "longname": "lodash.times",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12827,
                12858
            ],
            "filename": "lodash.js",
            "lineno": 386,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011724",
                "name": "lodash.toFinite",
                "type": "MemberExpression",
                "value": "lang.toFinite",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toFinite",
        "longname": "lodash.toFinite",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12860,
                12888
            ],
            "filename": "lodash.js",
            "lineno": 387,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011732",
                "name": "lodash.toInteger",
                "type": "Identifier",
                "value": "toInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "lodash.toInteger",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12890,
                12921
            ],
            "filename": "lodash.js",
            "lineno": 388,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011738",
                "name": "lodash.toLength",
                "type": "MemberExpression",
                "value": "lang.toLength",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toLength",
        "longname": "lodash.toLength",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12923,
                12954
            ],
            "filename": "lodash.js",
            "lineno": 389,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011746",
                "name": "lodash.toLower",
                "type": "MemberExpression",
                "value": "string.toLower",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toLower",
        "longname": "lodash.toLower",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12956,
                12987
            ],
            "filename": "lodash.js",
            "lineno": 390,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011754",
                "name": "lodash.toNumber",
                "type": "MemberExpression",
                "value": "lang.toNumber",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "lodash.toNumber",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12989,
                13030
            ],
            "filename": "lodash.js",
            "lineno": 391,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011762",
                "name": "lodash.toSafeInteger",
                "type": "MemberExpression",
                "value": "lang.toSafeInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toSafeInteger",
        "longname": "lodash.toSafeInteger",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13032,
                13063
            ],
            "filename": "lodash.js",
            "lineno": 392,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011770",
                "name": "lodash.toString",
                "type": "MemberExpression",
                "value": "lang.toString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "lodash.toString",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13065,
                13096
            ],
            "filename": "lodash.js",
            "lineno": 393,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011778",
                "name": "lodash.toUpper",
                "type": "MemberExpression",
                "value": "string.toUpper",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toUpper",
        "longname": "lodash.toUpper",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13098,
                13123
            ],
            "filename": "lodash.js",
            "lineno": 394,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011786",
                "name": "lodash.trim",
                "type": "MemberExpression",
                "value": "string.trim",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "trim",
        "longname": "lodash.trim",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13125,
                13156
            ],
            "filename": "lodash.js",
            "lineno": 395,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011794",
                "name": "lodash.trimEnd",
                "type": "MemberExpression",
                "value": "string.trimEnd",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "trimEnd",
        "longname": "lodash.trimEnd",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13158,
                13193
            ],
            "filename": "lodash.js",
            "lineno": 396,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011802",
                "name": "lodash.trimStart",
                "type": "MemberExpression",
                "value": "string.trimStart",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "trimStart",
        "longname": "lodash.trimStart",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13195,
                13228
            ],
            "filename": "lodash.js",
            "lineno": 397,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011810",
                "name": "lodash.truncate",
                "type": "MemberExpression",
                "value": "string.truncate",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "truncate",
        "longname": "lodash.truncate",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13230,
                13263
            ],
            "filename": "lodash.js",
            "lineno": 398,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011818",
                "name": "lodash.unescape",
                "type": "MemberExpression",
                "value": "string.unescape",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "unescape",
        "longname": "lodash.unescape",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13265,
                13296
            ],
            "filename": "lodash.js",
            "lineno": 399,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011826",
                "name": "lodash.uniqueId",
                "type": "MemberExpression",
                "value": "util.uniqueId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "uniqueId",
        "longname": "lodash.uniqueId",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13298,
                13333
            ],
            "filename": "lodash.js",
            "lineno": 400,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011834",
                "name": "lodash.upperCase",
                "type": "MemberExpression",
                "value": "string.upperCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upperCase",
        "longname": "lodash.upperCase",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13335,
                13372
            ],
            "filename": "lodash.js",
            "lineno": 401,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011842",
                "name": "lodash.upperFirst",
                "type": "MemberExpression",
                "value": "string.upperFirst",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upperFirst",
        "longname": "lodash.upperFirst",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13391,
                13423
            ],
            "filename": "lodash.js",
            "lineno": 404,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011850",
                "name": "lodash.each",
                "type": "MemberExpression",
                "value": "collection.forEach",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "each",
        "longname": "lodash.each",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13425,
                13467
            ],
            "filename": "lodash.js",
            "lineno": 405,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011858",
                "name": "lodash.eachRight",
                "type": "MemberExpression",
                "value": "collection.forEachRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "eachRight",
        "longname": "lodash.eachRight",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13469,
                13494
            ],
            "filename": "lodash.js",
            "lineno": 406,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011866",
                "name": "lodash.first",
                "type": "MemberExpression",
                "value": "array.head",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "lodash.first",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13531,
                13542
            ],
            "filename": "lodash.js",
            "lineno": 409,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011881",
                "name": "source",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "<anonymous>~source",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13662,
                13687
            ],
            "filename": "lodash.js",
            "lineno": 412,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011904",
                "name": "source[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "func",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~source.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~source",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13726,
                13740
            ],
            "filename": "lodash.js",
            "lineno": 416,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011912",
                "name": "chain",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "chain",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * The semantic version number.\n *\n * @static\n * @memberOf _\n * @type {string}\n */",
        "meta": {
            "range": [
                13833,
                13857
            ],
            "filename": "lodash.js",
            "lineno": 425,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011915",
                "name": "lodash.VERSION",
                "type": "Identifier",
                "value": "VERSION",
                "paramnames": []
            }
        },
        "description": "The semantic version number.",
        "scope": "static",
        "memberof": "_.lodash",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "VERSION",
        "longname": "_.lodash.VERSION",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13859,
                13929
            ],
            "filename": "lodash.js",
            "lineno": 426,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011921",
                "name": "lodash.templateSettings.imports._",
                "type": "Identifier",
                "value": "lodash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_",
        "longname": "lodash.templateSettings.imports._",
        "kind": "member",
        "memberof": "lodash.templateSettings.imports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13860,
                13909
            ],
            "filename": "lodash.js",
            "lineno": 426,
            "columnno": 1,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011924",
                "name": "lodash.templateSettings",
                "type": "MemberExpression",
                "value": "string.templateSettings",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "templateSettings",
        "longname": "lodash.templateSettings",
        "kind": "member",
        "memberof": "lodash",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14070,
                14109
            ],
            "filename": "lodash.js",
            "lineno": 430,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011948",
                "name": "lodash[undefined].placeholder",
                "type": "Identifier",
                "value": "lodash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "lodash[undefined].placeholder",
        "kind": "member",
        "memberof": "lodash[undefined]",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14241,
                14740
            ],
            "filename": "lodash.js",
            "lineno": 435,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011966",
                "name": "LazyWrapper.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": [
                    "n"
                ]
            },
            "vars": {
                "n": "LazyWrapper#[undefined]~n",
                "result": "LazyWrapper#[undefined]~result",
                "result.__takeCount__": "LazyWrapper#[undefined]~result.__takeCount__"
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "LazyWrapper#[undefined]",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14295,
                14347
            ],
            "filename": "lodash.js",
            "lineno": 436,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011976",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "LazyWrapper#[undefined]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "LazyWrapper#[undefined]~n",
        "kind": "member",
        "memberof": "LazyWrapper#[undefined]",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14358,
                14447
            ],
            "filename": "lodash.js",
            "lineno": 438,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100011990",
                "name": "result",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "LazyWrapper#[undefined]~result",
        "kind": "member",
        "memberof": "LazyWrapper#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14487,
                14544
            ],
            "filename": "lodash.js",
            "lineno": 443,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012012",
                "name": "result.__takeCount__",
                "type": "CallExpression",
                "funcscope": "LazyWrapper#[undefined]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__takeCount__",
        "longname": "LazyWrapper#[undefined]~result.__takeCount__",
        "kind": "member",
        "memberof": "LazyWrapper#[undefined]~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14597,
                14635
            ],
            "filename": "lodash.js",
            "lineno": 446,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012031",
                "name": "size",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "size",
        "longname": "size",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14645,
                14701
            ],
            "filename": "lodash.js",
            "lineno": 447,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012036",
                "name": "type",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "type",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14745,
                14860
            ],
            "filename": "lodash.js",
            "lineno": 453,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012050",
                "name": "LazyWrapper.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": [
                    "n"
                ]
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "LazyWrapper#[undefined]",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15007,
                15023
            ],
            "filename": "lodash.js",
            "lineno": 460,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012085",
                "name": "type",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "<anonymous>~type",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15031,
                15093
            ],
            "filename": "lodash.js",
            "lineno": 461,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012090",
                "name": "isFilter",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFilter",
        "longname": "<anonymous>~isFilter",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15098,
                15371
            ],
            "filename": "lodash.js",
            "lineno": 463,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012100",
                "name": "LazyWrapper.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": [
                    "iteratee"
                ]
            },
            "vars": {
                "result": "LazyWrapper#[undefined]~result",
                "result.__filtered__": "LazyWrapper#[undefined]~result.__filtered__"
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "LazyWrapper#[undefined]",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15163,
                15184
            ],
            "filename": "lodash.js",
            "lineno": 464,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012110",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "LazyWrapper#[undefined]~result",
        "kind": "member",
        "memberof": "LazyWrapper#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15224,
                15261
            ],
            "filename": "lodash.js",
            "lineno": 466,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012124",
                "name": "iteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "iteratee",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15269,
                15281
            ],
            "filename": "lodash.js",
            "lineno": 467,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012129",
                "name": "type",
                "type": "Identifier",
                "value": "type"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "type",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15294,
                15347
            ],
            "filename": "lodash.js",
            "lineno": 469,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012132",
                "name": "result.__filtered__",
                "type": "LogicalExpression",
                "funcscope": "LazyWrapper#[undefined]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__filtered__",
        "longname": "LazyWrapper#[undefined]~result.__filtered__",
        "kind": "member",
        "memberof": "LazyWrapper#[undefined]~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15498,
                15540
            ],
            "filename": "lodash.js",
            "lineno": 476,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012154",
                "name": "takeName",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "takeName",
        "longname": "<anonymous>~takeName",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15545,
                15638
            ],
            "filename": "lodash.js",
            "lineno": 478,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012163",
                "name": "LazyWrapper.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "LazyWrapper#[undefined]",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15771,
                15813
            ],
            "filename": "lodash.js",
            "lineno": 485,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012193",
                "name": "dropName",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dropName",
        "longname": "<anonymous>~dropName",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15818,
                15944
            ],
            "filename": "lodash.js",
            "lineno": 487,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012202",
                "name": "LazyWrapper.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "LazyWrapper#[undefined]",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15951,
                16029
            ],
            "filename": "lodash.js",
            "lineno": 492,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012224",
                "name": "LazyWrapper.prototype.compact",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "compact",
        "longname": "LazyWrapper#compact",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16032,
                16124
            ],
            "filename": "lodash.js",
            "lineno": 496,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012239",
                "name": "LazyWrapper.prototype.find",
                "type": "FunctionExpression",
                "paramnames": [
                    "predicate"
                ]
            }
        },
        "undocumented": true,
        "name": "find",
        "longname": "LazyWrapper#find",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16127,
                16224
            ],
            "filename": "lodash.js",
            "lineno": 500,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012258",
                "name": "LazyWrapper.prototype.findLast",
                "type": "FunctionExpression",
                "paramnames": [
                    "predicate"
                ]
            }
        },
        "undocumented": true,
        "name": "findLast",
        "longname": "LazyWrapper#findLast",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16227,
                16452
            ],
            "filename": "lodash.js",
            "lineno": 504,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012277",
                "name": "LazyWrapper.prototype.invokeMap",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "invokeMap",
        "longname": "LazyWrapper#invokeMap",
        "kind": "member",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16455,
                16564
            ],
            "filename": "lodash.js",
            "lineno": 513,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012314",
                "name": "LazyWrapper.prototype.reject",
                "type": "FunctionExpression",
                "paramnames": [
                    "predicate"
                ]
            }
        },
        "undocumented": true,
        "name": "reject",
        "longname": "LazyWrapper#reject",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16567,
                17031
            ],
            "filename": "lodash.js",
            "lineno": 517,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012334",
                "name": "LazyWrapper.prototype.slice",
                "type": "FunctionExpression",
                "paramnames": [
                    "start",
                    "end"
                ]
            },
            "vars": {
                "start": "LazyWrapper#slice~start",
                "result": "LazyWrapper#slice~result",
                "end": "LazyWrapper#slice~end"
            }
        },
        "undocumented": true,
        "name": "slice",
        "longname": "LazyWrapper#slice",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16622,
                16646
            ],
            "filename": "lodash.js",
            "lineno": 518,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012345",
                "name": "start",
                "type": "CallExpression",
                "funcscope": "LazyWrapper#slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "LazyWrapper#slice~start",
        "kind": "member",
        "memberof": "LazyWrapper#slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16655,
                16668
            ],
            "filename": "lodash.js",
            "lineno": 520,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012351",
                "name": "result",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "LazyWrapper#slice~result",
        "kind": "member",
        "memberof": "LazyWrapper#slice",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16788,
                16821
            ],
            "filename": "lodash.js",
            "lineno": 525,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012377",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "LazyWrapper#slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "LazyWrapper#slice~result",
        "kind": "member",
        "memberof": "LazyWrapper#slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16849,
                16876
            ],
            "filename": "lodash.js",
            "lineno": 527,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012389",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "LazyWrapper#slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "LazyWrapper#slice~result",
        "kind": "member",
        "memberof": "LazyWrapper#slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16913,
                16933
            ],
            "filename": "lodash.js",
            "lineno": 530,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012402",
                "name": "end",
                "type": "CallExpression",
                "funcscope": "LazyWrapper#slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "LazyWrapper#slice~end",
        "kind": "member",
        "memberof": "LazyWrapper#slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16939,
                17007
            ],
            "filename": "lodash.js",
            "lineno": 531,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012408",
                "name": "result",
                "type": "ConditionalExpression",
                "funcscope": "LazyWrapper#slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "LazyWrapper#slice~result",
        "kind": "member",
        "memberof": "LazyWrapper#slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17034,
                17152
            ],
            "filename": "lodash.js",
            "lineno": 536,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012430",
                "name": "LazyWrapper.prototype.takeRightWhile",
                "type": "FunctionExpression",
                "paramnames": [
                    "predicate"
                ]
            }
        },
        "undocumented": true,
        "name": "takeRightWhile",
        "longname": "LazyWrapper#takeRightWhile",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17155,
                17239
            ],
            "filename": "lodash.js",
            "lineno": 540,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012452",
                "name": "LazyWrapper.prototype.toArray",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toArray",
        "longname": "LazyWrapper#toArray",
        "kind": "function",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17363,
                17432
            ],
            "filename": "lodash.js",
            "lineno": 546,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012477",
                "name": "checkIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "checkIteratee",
        "longname": "<anonymous>~checkIteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17440,
                17484
            ],
            "filename": "lodash.js",
            "lineno": 547,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012484",
                "name": "isTaker",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isTaker",
        "longname": "<anonymous>~isTaker",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17492,
                17584
            ],
            "filename": "lodash.js",
            "lineno": 548,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012491",
                "name": "lodashFunc",
                "type": "MemberExpression",
                "value": "lodash[undefined]"
            }
        },
        "undocumented": true,
        "name": "lodashFunc",
        "longname": "<anonymous>~lodashFunc",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17592,
                17642
            ],
            "filename": "lodash.js",
            "lineno": 549,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012506",
                "name": "retUnwrapped",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "retUnwrapped",
        "longname": "<anonymous>~retUnwrapped",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17684,
                18965
            ],
            "filename": "lodash.js",
            "lineno": 554,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012521",
                "name": "lodash.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "value": "lodash#[undefined]~value",
                "args": "lodash#[undefined]~args",
                "isLazy": "lodash#[undefined]~isLazy",
                "iteratee": "lodash#[undefined]~iteratee",
                "useLazy": "lodash#[undefined]~useLazy",
                "interceptor": "lodash#[undefined]~interceptor",
                "": null,
                "chainAll": "lodash#[undefined]~chainAll",
                "isHybrid": "lodash#[undefined]~isHybrid",
                "isUnwrapped": "lodash#[undefined]~isUnwrapped",
                "onlyLazy": "lodash#[undefined]~onlyLazy",
                "result": "lodash#[undefined]~result"
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "lodash#[undefined]",
        "kind": "function",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17736,
                17760
            ],
            "filename": "lodash.js",
            "lineno": 555,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012530",
                "name": "value",
                "type": "MemberExpression",
                "value": "this.__wrapped__"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "lodash#[undefined]~value",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17770,
                17802
            ],
            "filename": "lodash.js",
            "lineno": 556,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012535",
                "name": "args",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "lodash#[undefined]~args",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17812,
                17849
            ],
            "filename": "lodash.js",
            "lineno": 557,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012542",
                "name": "isLazy",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isLazy",
        "longname": "lodash#[undefined]~isLazy",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17859,
                17877
            ],
            "filename": "lodash.js",
            "lineno": 558,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012547",
                "name": "iteratee",
                "type": "MemberExpression",
                "value": "args[0]"
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "lodash#[undefined]~iteratee",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17887,
                17921
            ],
            "filename": "lodash.js",
            "lineno": 559,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012552",
                "name": "useLazy",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "useLazy",
        "longname": "lodash#[undefined]~useLazy",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17932,
                18097
            ],
            "filename": "lodash.js",
            "lineno": 561,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012560",
                "name": "interceptor",
                "type": "FunctionExpression"
            },
            "vars": {
                "result": "lodash#[undefined]~interceptor~result"
            }
        },
        "undocumented": true,
        "name": "interceptor",
        "longname": "lodash#[undefined]~interceptor",
        "kind": "function",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17974,
                18033
            ],
            "filename": "lodash.js",
            "lineno": 562,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012566",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "lodash#[undefined]~interceptor~result",
        "kind": "member",
        "memberof": "lodash#[undefined]~interceptor",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18276,
                18300
            ],
            "filename": "lodash.js",
            "lineno": 568,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012604",
                "name": "isLazy",
                "type": "AssignmentExpression",
                "funcscope": "lodash#[undefined]",
                "value": "useLazy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLazy",
        "longname": "lodash#[undefined]~isLazy",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18285,
                18300
            ],
            "filename": "lodash.js",
            "lineno": 568,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012606",
                "name": "useLazy",
                "type": "Literal",
                "funcscope": "lodash#[undefined]",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "useLazy",
        "longname": "lodash#[undefined]~useLazy",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18316,
                18341
            ],
            "filename": "lodash.js",
            "lineno": 570,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012610",
                "name": "chainAll",
                "type": "MemberExpression",
                "value": "this.__chain__"
            }
        },
        "undocumented": true,
        "name": "chainAll",
        "longname": "lodash#[undefined]~chainAll",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18351,
                18387
            ],
            "filename": "lodash.js",
            "lineno": 571,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012615",
                "name": "isHybrid",
                "type": "UnaryExpression",
                "value": "!!this.__actions__.length"
            }
        },
        "undocumented": true,
        "name": "isHybrid",
        "longname": "lodash#[undefined]~isHybrid",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18397,
                18436
            ],
            "filename": "lodash.js",
            "lineno": 572,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012624",
                "name": "isUnwrapped",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isUnwrapped",
        "longname": "lodash#[undefined]~isUnwrapped",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18446,
                18476
            ],
            "filename": "lodash.js",
            "lineno": 573,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012630",
                "name": "onlyLazy",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "onlyLazy",
        "longname": "lodash#[undefined]~onlyLazy",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18521,
                18569
            ],
            "filename": "lodash.js",
            "lineno": 576,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012643",
                "name": "value",
                "type": "ConditionalExpression",
                "funcscope": "lodash#[undefined]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "lodash#[undefined]~value",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18581,
                18613
            ],
            "filename": "lodash.js",
            "lineno": 577,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012652",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "lodash#[undefined]~result",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18647,
                18659
            ],
            "filename": "lodash.js",
            "lineno": 578,
            "columnno": 32,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012668",
                "name": "func",
                "type": "Identifier",
                "value": "thru"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18661,
                18682
            ],
            "filename": "lodash.js",
            "lineno": 578,
            "columnno": 46,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012670",
                "name": "args",
                "type": "ArrayExpression",
                "value": "[\"interceptor\"]"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "args",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18684,
                18704
            ],
            "filename": "lodash.js",
            "lineno": 578,
            "columnno": 69,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012673",
                "name": "thisArg",
                "type": "Identifier",
                "value": "undefined"
            }
        },
        "undocumented": true,
        "name": "thisArg",
        "longname": "thisArg",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18847,
                18878
            ],
            "filename": "lodash.js",
            "lineno": 584,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012693",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "lodash#[undefined]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "lodash#[undefined]~result",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19112,
                19141
            ],
            "filename": "lodash.js",
            "lineno": 591,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012730",
                "name": "func",
                "type": "MemberExpression",
                "value": "arrayProto[undefined]"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "<anonymous>~func",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19149,
                19220
            ],
            "filename": "lodash.js",
            "lineno": 592,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012735",
                "name": "chainName",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "chainName",
        "longname": "<anonymous>~chainName",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19228,
                19277
            ],
            "filename": "lodash.js",
            "lineno": 593,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012745",
                "name": "retUnwrapped",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "retUnwrapped",
        "longname": "<anonymous>~retUnwrapped",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19282,
                19609
            ],
            "filename": "lodash.js",
            "lineno": 595,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012753",
                "name": "lodash.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "args": "lodash#[undefined]~args",
                "value": "lodash#[undefined]~value",
                "": null
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "lodash#[undefined]",
        "kind": "function",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19334,
                19350
            ],
            "filename": "lodash.js",
            "lineno": 596,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012762",
                "name": "args",
                "type": "Identifier",
                "value": "arguments"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "lodash#[undefined]~args",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19405,
                19425
            ],
            "filename": "lodash.js",
            "lineno": 598,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012774",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "lodash#[undefined]~value",
        "kind": "member",
        "memberof": "lodash#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19735,
                19766
            ],
            "filename": "lodash.js",
            "lineno": 609,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012823",
                "name": "lodashFunc",
                "type": "MemberExpression",
                "value": "lodash[undefined]"
            }
        },
        "undocumented": true,
        "name": "lodashFunc",
        "longname": "<anonymous>~lodashFunc",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19796,
                19824
            ],
            "filename": "lodash.js",
            "lineno": 611,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012832",
                "name": "key",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19834,
                19881
            ],
            "filename": "lodash.js",
            "lineno": 612,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012839",
                "name": "names",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "names",
        "longname": "<anonymous>~names",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19861,
                19880
            ],
            "filename": "lodash.js",
            "lineno": 612,
            "columnno": 35,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012845",
                "name": "realNames[undefined]",
                "type": "ArrayExpression",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "realNames[undefined]",
        "longname": "realNames[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19901,
                19919
            ],
            "filename": "lodash.js",
            "lineno": 614,
            "columnno": 17,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012856",
                "name": "name",
                "type": "Identifier",
                "value": "methodName"
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19921,
                19939
            ],
            "filename": "lodash.js",
            "lineno": 614,
            "columnno": 37,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012858",
                "name": "func",
                "type": "Identifier",
                "value": "lodashFunc"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19953,
                20061
            ],
            "filename": "lodash.js",
            "lineno": 618,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012861",
                "name": "realNames[undefined]",
                "type": "ArrayExpression",
                "value": "[\"{\\\"undefined\\\":\\\"\\\"}\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "realNames[undefined]",
        "longname": "realNames[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20020,
                20037
            ],
            "filename": "lodash.js",
            "lineno": 619,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012872",
                "name": "name",
                "type": "Literal",
                "value": "wrapper"
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20041,
                20058
            ],
            "filename": "lodash.js",
            "lineno": 620,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012874",
                "name": "func",
                "type": "Identifier",
                "value": "undefined"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20097,
                20136
            ],
            "filename": "lodash.js",
            "lineno": 624,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012877",
                "name": "LazyWrapper.prototype.clone",
                "type": "Identifier",
                "value": "lazyClone",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "LazyWrapper#clone",
        "kind": "member",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20138,
                20181
            ],
            "filename": "lodash.js",
            "lineno": 625,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012885",
                "name": "LazyWrapper.prototype.reverse",
                "type": "Identifier",
                "value": "lazyReverse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "reverse",
        "longname": "LazyWrapper#reverse",
        "kind": "member",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20183,
                20222
            ],
            "filename": "lodash.js",
            "lineno": 626,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012893",
                "name": "LazyWrapper.prototype.value",
                "type": "Identifier",
                "value": "lazyValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "LazyWrapper#value",
        "kind": "member",
        "memberof": "LazyWrapper",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20280,
                20308
            ],
            "filename": "lodash.js",
            "lineno": 629,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012901",
                "name": "lodash.prototype.at",
                "type": "MemberExpression",
                "value": "seq.at",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "at",
        "longname": "lodash#at",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20310,
                20351
            ],
            "filename": "lodash.js",
            "lineno": 630,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012911",
                "name": "lodash.prototype.chain",
                "type": "MemberExpression",
                "value": "seq.wrapperChain",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "lodash#chain",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20353,
                20389
            ],
            "filename": "lodash.js",
            "lineno": 631,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012921",
                "name": "lodash.prototype.commit",
                "type": "MemberExpression",
                "value": "seq.commit",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "commit",
        "longname": "lodash#commit",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20391,
                20423
            ],
            "filename": "lodash.js",
            "lineno": 632,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012931",
                "name": "lodash.prototype.next",
                "type": "MemberExpression",
                "value": "seq.next",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "lodash#next",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20425,
                20459
            ],
            "filename": "lodash.js",
            "lineno": 633,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012941",
                "name": "lodash.prototype.plant",
                "type": "MemberExpression",
                "value": "seq.plant",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "plant",
        "longname": "lodash#plant",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20461,
                20499
            ],
            "filename": "lodash.js",
            "lineno": 634,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012951",
                "name": "lodash.prototype.reverse",
                "type": "MemberExpression",
                "value": "seq.reverse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "reverse",
        "longname": "lodash#reverse",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20501,
                20588
            ],
            "filename": "lodash.js",
            "lineno": 635,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012961",
                "name": "lodash.prototype.toJSON",
                "type": "AssignmentExpression",
                "value": "lodash.prototype.valueOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toJSON",
        "longname": "lodash#toJSON",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20527,
                20588
            ],
            "filename": "lodash.js",
            "lineno": 635,
            "columnno": 26,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012967",
                "name": "lodash.prototype.valueOf",
                "type": "AssignmentExpression",
                "value": "lodash.prototype.value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "valueOf",
        "longname": "lodash#valueOf",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20554,
                20588
            ],
            "filename": "lodash.js",
            "lineno": 635,
            "columnno": 53,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012973",
                "name": "lodash.prototype.value",
                "type": "MemberExpression",
                "value": "seq.value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "lodash#value",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20612,
                20658
            ],
            "filename": "lodash.js",
            "lineno": 638,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012983",
                "name": "lodash.prototype.first",
                "type": "MemberExpression",
                "value": "lodash.prototype.head",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "lodash#first",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20682,
                20728
            ],
            "filename": "lodash.js",
            "lineno": 641,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100012998",
                "name": "lodash.prototype[undefined]",
                "type": "MemberExpression",
                "value": "seq.toIterator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "lodash#[undefined]",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20733,
                20756
            ],
            "filename": "lodash.js",
            "lineno": 644,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013008",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lodash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "lowerCase.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013016",
                "name": "createCompounder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCompounder",
        "longname": "createCompounder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string`, as space separated words, to lower case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} string The string to convert.\n * @author string\n * @returns {lower_cased} Returns the lower cased string.\n * @example\n *\n * _.lowerCase('--Foo-Bar--');\n * // => 'foo bar'\n *\n * _.lowerCase('fooBar');\n * // => 'foo bar'\n *\n * _.lowerCase('__FOO_BAR__');\n * // => 'foo bar'\n */",
        "meta": {
            "range": [
                511,
                633
            ],
            "filename": "lowerCase.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013024",
                "name": "lowerCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts `string`, as space separated words, to lower case.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "lower_cased"
                    ]
                },
                "description": "Returns the lower cased string."
            }
        ],
        "examples": [
            "_.lowerCase('--Foo-Bar--');\n// => 'foo bar'\n\n_.lowerCase('fooBar');\n// => 'foo bar'\n\n_.lowerCase('__FOO_BAR__');\n// => 'foo bar'"
        ],
        "name": "lowerCase",
        "longname": "_.lowerCase",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                636,
                662
            ],
            "filename": "lowerCase.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013046",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lowerCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "lowerFirst.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013054",
                "name": "createCaseFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCaseFirst",
        "longname": "createCaseFirst",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts the first character of `string` to lower case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.lowerFirst('Fred');\n * // => 'fred'\n *\n * _.lowerFirst('FRED');\n * // => 'fRED'\n */",
        "meta": {
            "range": [
                419,
                462
            ],
            "filename": "lowerFirst.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013062",
                "name": "lowerFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts the first character of `string` to lower case.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the converted string."
            }
        ],
        "examples": [
            "_.lowerFirst('Fred');\n// => 'fred'\n\n_.lowerFirst('FRED');\n// => 'fRED'"
        ],
        "name": "lowerFirst",
        "longname": "_.lowerFirst",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                465,
                492
            ],
            "filename": "lowerFirst.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013068",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lowerFirst",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "lt.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013076",
                "name": "baseLt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseLt",
        "longname": "baseLt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                124
            ],
            "filename": "lt.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013081",
                "name": "createRelationalOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRelationalOperation",
        "longname": "createRelationalOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is less than `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n * @see _.gt\n * @example\n *\n * _.lt(1, 3);\n * // => true\n *\n * _.lt(3, 3);\n * // => false\n *\n * _.lt(3, 1);\n * // => false\n */",
        "meta": {
            "range": [
                561,
                599
            ],
            "filename": "lt.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013089",
                "name": "lt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is less than `other`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.9.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to compare.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The other value to compare.",
                "name": "other"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is less than `other`,\n else `false`."
            }
        ],
        "see": [
            "_.gt"
        ],
        "examples": [
            "_.lt(1, 3);\n// => true\n\n_.lt(3, 3);\n// => false\n\n_.lt(3, 1);\n// => false"
        ],
        "name": "lt",
        "longname": "_.lt",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                602,
                621
            ],
            "filename": "lt.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013095",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                80
            ],
            "filename": "lte.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013103",
                "name": "createRelationalOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRelationalOperation",
        "longname": "createRelationalOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `value` is less than or equal to `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than or equal to\n *  `other`, else `false`.\n * @see _.gte\n * @example\n *\n * _.lte(1, 3);\n * // => true\n *\n * _.lte(3, 3);\n * // => true\n *\n * _.lte(3, 1);\n * // => false\n */",
        "meta": {
            "range": [
                544,
                628
            ],
            "filename": "lte.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013111",
                "name": "lte",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Checks if `value` is less than or equal to `other`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.9.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to compare.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The other value to compare.",
                "name": "other"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `value` is less than or equal to\n `other`, else `false`."
            }
        ],
        "see": [
            "_.gte"
        ],
        "examples": [
            "_.lte(1, 3);\n// => true\n\n_.lte(3, 3);\n// => true\n\n_.lte(3, 1);\n// => false"
        ],
        "name": "lte",
        "longname": "_.lte",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                631,
                651
            ],
            "filename": "lte.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013124",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lte",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "map.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013132",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                102
            ],
            "filename": "map.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013137",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                148
            ],
            "filename": "map.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013142",
                "name": "baseMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMap",
        "longname": "baseMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                184
            ],
            "filename": "map.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013147",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */",
        "meta": {
            "range": [
                1492,
                1639
            ],
            "filename": "map.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013154",
                "name": "map",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee"
                ]
            },
            "vars": {
                "func": "_.map~func"
            }
        },
        "description": "Creates an array of values by running each element in `collection` thru\n`iteratee`. The iteratee is invoked with three arguments:\n(value, index|key, collection).\n\nMany lodash methods are guarded to work as iteratees for methods like\n`_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\nThe guarded methods are:\n`ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n`fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n`sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n`template`, `trim`, `trimEnd`, `trimStart`, and `words`",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new mapped array."
            }
        ],
        "examples": [
            "function square(n) {\n  return n * n;\n}\n\n_.map([4, 8], square);\n// => [16, 64]\n\n_.map({ 'a': 4, 'b': 8 }, square);\n// => [16, 64] (iteration order is not guaranteed)\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\n// The `_.property` iteratee shorthand.\n_.map(users, 'user');\n// => ['barney', 'fred']"
        ],
        "name": "map",
        "longname": "_.map",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1535,
                1582
            ],
            "filename": "map.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013160",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.map~func",
        "kind": "member",
        "memberof": "_.map",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1641,
                1661
            ],
            "filename": "map.js",
            "lineno": 55,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013177",
                "name": "module.exports",
                "type": "Identifier",
                "value": "map",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "mapKeys.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013185",
                "name": "baseAssignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssignValue",
        "longname": "baseAssignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                112
            ],
            "filename": "mapKeys.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013190",
                "name": "baseForOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwn",
        "longname": "baseForOwn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                168
            ],
            "filename": "mapKeys.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013195",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */",
        "meta": {
            "range": [
                872,
                1111
            ],
            "filename": "mapKeys.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013202",
                "name": "mapKeys",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee"
                ]
            },
            "vars": {
                "result": "_.mapKeys~result",
                "iteratee": "_.iteratee.iteratee",
                "": null
            }
        },
        "description": "The opposite of `_.mapValues`; this method creates an object with the\nsame values as `object` and keys generated by running each own enumerable\nstring keyed property of `object` thru `iteratee`. The iteratee is invoked\nwith three arguments: (value, key, object).",
        "scope": "static",
        "memberof": "_",
        "since": "3.8.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new mapped object."
            }
        ],
        "see": [
            "_.mapValues"
        ],
        "examples": [
            "_.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n  return key + value;\n});\n// => { 'a1': 1, 'b2': 2 }"
        ],
        "name": "mapKeys",
        "longname": "_.mapKeys",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                915,
                926
            ],
            "filename": "mapKeys.js",
            "lineno": 29,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013208",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.mapKeys~result",
        "kind": "member",
        "memberof": "_.mapKeys",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                930,
                966
            ],
            "filename": "mapKeys.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013212",
                "name": "iteratee",
                "type": "CallExpression",
                "funcscope": "_.mapKeys",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1113,
                1137
            ],
            "filename": "mapKeys.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013240",
                "name": "module.exports",
                "type": "Identifier",
                "value": "mapKeys",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "mapValues.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013248",
                "name": "baseAssignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAssignValue",
        "longname": "baseAssignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                112
            ],
            "filename": "mapValues.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013253",
                "name": "baseForOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwn",
        "longname": "baseForOwn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                118,
                168
            ],
            "filename": "mapValues.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013258",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */",
        "meta": {
            "range": [
                1111,
                1350
            ],
            "filename": "mapValues.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013265",
                "name": "mapValues",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee"
                ]
            },
            "vars": {
                "result": "_.mapValues~result",
                "iteratee": "_.iteratee.iteratee",
                "": null
            }
        },
        "description": "Creates an object with the same keys as `object` and values generated\nby running each own enumerable string keyed property of `object` thru\n`iteratee`. The iteratee is invoked with three arguments:\n(value, key, object).",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new mapped object."
            }
        ],
        "see": [
            "_.mapKeys"
        ],
        "examples": [
            "var users = {\n  'fred':    { 'user': 'fred',    'age': 40 },\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\n};\n\n_.mapValues(users, function(o) { return o.age; });\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\n// The `_.property` iteratee shorthand.\n_.mapValues(users, 'age');\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)"
        ],
        "name": "mapValues",
        "longname": "_.mapValues",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1156,
                1167
            ],
            "filename": "mapValues.js",
            "lineno": 36,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013271",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.mapValues~result",
        "kind": "member",
        "memberof": "_.mapValues",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1171,
                1207
            ],
            "filename": "mapValues.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013275",
                "name": "iteratee",
                "type": "CallExpression",
                "funcscope": "_.mapValues",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1352,
                1378
            ],
            "filename": "mapValues.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013303",
                "name": "module.exports",
                "type": "Identifier",
                "value": "mapValues",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "matches.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013311",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                102
            ],
            "filename": "matches.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013316",
                "name": "baseMatches",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMatches",
        "longname": "baseMatches",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                169,
                188
            ],
            "filename": "matches.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013324",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`.\n *\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n */",
        "meta": {
            "range": [
                1067,
                1153
            ],
            "filename": "matches.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013327",
                "name": "matches",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "source"
                ]
            }
        },
        "description": "Creates a function that performs a partial deep comparison between a given\nobject and `source`, returning `true` if the given object has equivalent\nproperty values, else `false`.\n\n**Note:** The created function is equivalent to `_.isMatch` with `source`\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object of property values to match.",
                "name": "source"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new spec function."
            }
        ],
        "examples": [
            "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n\n_.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n// => [{ 'a': 4, 'b': 5, 'c': 6 }]"
        ],
        "name": "matches",
        "longname": "_.matches",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1155,
                1179
            ],
            "filename": "matches.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013339",
                "name": "module.exports",
                "type": "Identifier",
                "value": "matches",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "matchesProperty.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013347",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                118
            ],
            "filename": "matchesProperty.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013352",
                "name": "baseMatchesProperty",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMatchesProperty",
        "longname": "baseMatchesProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                185,
                204
            ],
            "filename": "matchesProperty.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013360",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that performs a partial deep comparison between the\n * value at `path` of a given object to `srcValue`, returning `true` if the\n * object value is equivalent, else `false`.\n *\n * **Note:** Partial comparisons will match empty array and empty object\n * `srcValue` values against any array or object value, respectively. See\n * `_.isEqual` for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.find(objects, _.matchesProperty('a', 4));\n * // => { 'a': 4, 'b': 5, 'c': 6 }\n */",
        "meta": {
            "range": [
                1032,
                1150
            ],
            "filename": "matchesProperty.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013363",
                "name": "matchesProperty",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "path",
                    "srcValue"
                ]
            }
        },
        "description": "Creates a function that performs a partial deep comparison between the\nvalue at `path` of a given object to `srcValue`, returning `true` if the\nobject value is equivalent, else `false`.\n\n**Note:** Partial comparisons will match empty array and empty object\n`srcValue` values against any array or object value, respectively. See\n`_.isEqual` for a list of supported value comparisons.",
        "scope": "static",
        "memberof": "_",
        "since": "3.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to get.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to match.",
                "name": "srcValue"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new spec function."
            }
        ],
        "examples": [
            "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n\n_.find(objects, _.matchesProperty('a', 4));\n// => { 'a': 4, 'b': 5, 'c': 6 }"
        ],
        "name": "matchesProperty",
        "longname": "_.matchesProperty",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1152,
                1184
            ],
            "filename": "matchesProperty.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013377",
                "name": "module.exports",
                "type": "Identifier",
                "value": "matchesProperty",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                480
            ],
            "filename": "math.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013385",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                44
            ],
            "filename": "math.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013390",
                "name": "add",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "add",
        "longname": "module.exports.add",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                73
            ],
            "filename": "math.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013394",
                "name": "ceil",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ceil",
        "longname": "module.exports.ceil",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                77,
                106
            ],
            "filename": "math.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013398",
                "name": "divide",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "divide",
        "longname": "module.exports.divide",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                137
            ],
            "filename": "math.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013402",
                "name": "floor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "floor",
        "longname": "module.exports.floor",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                141,
                164
            ],
            "filename": "math.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013406",
                "name": "max",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "module.exports.max",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                168,
                195
            ],
            "filename": "math.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013410",
                "name": "maxBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "maxBy",
        "longname": "module.exports.maxBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                199,
                224
            ],
            "filename": "math.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013414",
                "name": "mean",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mean",
        "longname": "module.exports.mean",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                228,
                257
            ],
            "filename": "math.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013418",
                "name": "meanBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "meanBy",
        "longname": "module.exports.meanBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                261,
                284
            ],
            "filename": "math.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013422",
                "name": "min",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "module.exports.min",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                288,
                315
            ],
            "filename": "math.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013426",
                "name": "minBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "minBy",
        "longname": "module.exports.minBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                319,
                352
            ],
            "filename": "math.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013430",
                "name": "multiply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "multiply",
        "longname": "module.exports.multiply",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                356,
                383
            ],
            "filename": "math.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013434",
                "name": "round",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "round",
        "longname": "module.exports.round",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                387,
                420
            ],
            "filename": "math.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013438",
                "name": "subtract",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "subtract",
        "longname": "module.exports.subtract",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                424,
                447
            ],
            "filename": "math.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013442",
                "name": "sum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "module.exports.sum",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                451,
                478
            ],
            "filename": "math.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013446",
                "name": "sumBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sumBy",
        "longname": "module.exports.sumBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "max.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013453",
                "name": "baseExtremum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseExtremum",
        "longname": "baseExtremum",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                98
            ],
            "filename": "max.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013458",
                "name": "baseGt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGt",
        "longname": "baseGt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                136
            ],
            "filename": "max.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013463",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {array} array The array to iterate over.\n * @author element\n * @returns {max} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */",
        "meta": {
            "range": [
                527,
                644
            ],
            "filename": "max.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013470",
                "name": "max",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Computes the maximum value of `array`. If `array` is empty or falsey,\n`undefined` is returned.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "max"
                    ]
                },
                "description": "Returns the maximum value."
            }
        ],
        "examples": [
            "_.max([4, 2, 8, 6]);\n// => 8\n\n_.max([]);\n// => undefined"
        ],
        "name": "max",
        "longname": "_.max",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                646,
                666
            ],
            "filename": "max.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013488",
                "name": "module.exports",
                "type": "Identifier",
                "value": "max",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "maxBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013496",
                "name": "baseExtremum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseExtremum",
        "longname": "baseExtremum",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                98
            ],
            "filename": "maxBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013501",
                "name": "baseGt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGt",
        "longname": "baseGt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                154
            ],
            "filename": "maxBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013506",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */",
        "meta": {
            "range": [
                861,
                1007
            ],
            "filename": "maxBy.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013513",
                "name": "maxBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.max` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nthe value is ranked. The iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the maximum value."
            }
        ],
        "examples": [
            "var objects = [{ 'n': 1 }, { 'n': 2 }];\n\n_.maxBy(objects, function(o) { return o.n; });\n// => { 'n': 2 }\n\n// The `_.property` iteratee shorthand.\n_.maxBy(objects, 'n');\n// => { 'n': 2 }"
        ],
        "name": "maxBy",
        "longname": "_.maxBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1009,
                1031
            ],
            "filename": "maxBy.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013535",
                "name": "module.exports",
                "type": "Identifier",
                "value": "maxBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "mean.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013543",
                "name": "baseMean",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMean",
        "longname": "baseMean",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                84
            ],
            "filename": "mean.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013548",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {array} array The array to iterate over.\n * @author element\n * @returns {mean} Returns the mean value.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */",
        "meta": {
            "range": [
                384,
                444
            ],
            "filename": "mean.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013555",
                "name": "mean",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Computes the mean of the values in `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "mean"
                    ]
                },
                "description": "Returns the mean value."
            }
        ],
        "examples": [
            "_.mean([4, 2, 8, 6]);\n// => 5"
        ],
        "name": "mean",
        "longname": "_.mean",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                446,
                467
            ],
            "filename": "mean.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013565",
                "name": "module.exports",
                "type": "Identifier",
                "value": "mean",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "meanBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013573",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                102
            ],
            "filename": "meanBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013578",
                "name": "baseMean",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMean",
        "longname": "baseMean",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.mean` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be averaged.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the mean.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.meanBy(objects, function(o) { return o.n; });\n * // => 5\n *\n * // The `_.property` iteratee shorthand.\n * _.meanBy(objects, 'n');\n * // => 5\n */",
        "meta": {
            "range": [
                796,
                885
            ],
            "filename": "meanBy.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013585",
                "name": "meanBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.mean` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the value to be averaged.\nThe iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the mean."
            }
        ],
        "examples": [
            "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\n_.meanBy(objects, function(o) { return o.n; });\n// => 5\n\n// The `_.property` iteratee shorthand.\n_.meanBy(objects, 'n');\n// => 5"
        ],
        "name": "meanBy",
        "longname": "_.meanBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                887,
                910
            ],
            "filename": "meanBy.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013599",
                "name": "module.exports",
                "type": "Identifier",
                "value": "meanBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "memoize.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013607",
                "name": "MapCache",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "MapCache",
        "longname": "MapCache",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                100,
                139
            ],
            "filename": "memoize.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013615",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */",
        "meta": {
            "range": [
                1596,
                2171
            ],
            "filename": "memoize.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013618",
                "name": "memoize",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "resolver"
                ]
            },
            "vars": {
                "memoized": "_.memoize~memoized",
                "": null,
                "memoized.cache": "_.memoize~memoized.cache"
            }
        },
        "description": "Creates a function that memoizes the result of `func`. If `resolver` is\nprovided, it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is used as the map cache key. The `func`\nis invoked with the `this` binding of the memoized function.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the\n[`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\nmethod interface of `clear`, `delete`, `get`, `has`, and `set`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to have its output memoized.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to resolve the cache key.",
                "name": "resolver"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new memoized function."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': 2 };\nvar other = { 'c': 3, 'd': 4 };\n\nvar values = _.memoize(_.values);\nvalues(object);\n// => [1, 2]\n\nvalues(other);\n// => [3, 4]\n\nobject.a = 2;\nvalues(object);\n// => [1, 2]\n\n// Modify the result cache.\nvalues.cache.set(object, ['a', 'b']);\nvalues(object);\n// => ['a', 'b']\n\n// Replace `_.memoize.Cache`.\n_.memoize.Cache = WeakMap;"
        ],
        "name": "memoize",
        "longname": "_.memoize",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1773,
                2097
            ],
            "filename": "memoize.js",
            "lineno": 56,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013643",
                "name": "memoized",
                "type": "FunctionExpression"
            },
            "vars": {
                "args": "_.memoize~memoized~args",
                "key": "_.memoize~memoized~key",
                "cache": "_.memoize~memoized~cache",
                "result": "_.memoize~memoized~result",
                "memoized.cache": "_.memoize~memoized.cache"
            }
        },
        "undocumented": true,
        "name": "memoized",
        "longname": "_.memoize~memoized",
        "kind": "function",
        "memberof": "_.memoize",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1805,
                1821
            ],
            "filename": "memoize.js",
            "lineno": 57,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013648",
                "name": "args",
                "type": "Identifier",
                "value": "arguments"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "_.memoize~memoized~args",
        "kind": "member",
        "memberof": "_.memoize~memoized",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1831,
                1884
            ],
            "filename": "memoize.js",
            "lineno": 58,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013651",
                "name": "key",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "_.memoize~memoized~key",
        "kind": "member",
        "memberof": "_.memoize~memoized",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1894,
                1916
            ],
            "filename": "memoize.js",
            "lineno": 59,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013664",
                "name": "cache",
                "type": "MemberExpression",
                "value": "memoized.cache"
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "_.memoize~memoized~cache",
        "kind": "member",
        "memberof": "_.memoize~memoized",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1988,
                2019
            ],
            "filename": "memoize.js",
            "lineno": 64,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013683",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.memoize~memoized~result",
        "kind": "member",
        "memberof": "_.memoize~memoized",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2025,
                2073
            ],
            "filename": "memoize.js",
            "lineno": 65,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013692",
                "name": "memoized.cache",
                "type": "LogicalExpression",
                "funcscope": "_.memoize",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "_.memoize~memoized.cache",
        "kind": "member",
        "memberof": "_.memoize~memoized",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2101,
                2149
            ],
            "filename": "memoize.js",
            "lineno": 68,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013707",
                "name": "memoized.cache",
                "type": "NewExpression",
                "funcscope": "_.memoize",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "_.memoize~memoized.cache",
        "kind": "member",
        "memberof": "_.memoize~memoized",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2195,
                2219
            ],
            "filename": "memoize.js",
            "lineno": 73,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013720",
                "name": "memoize.Cache",
                "type": "Identifier",
                "value": "MapCache",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Cache",
        "longname": "_.memoize.Cache",
        "kind": "member",
        "memberof": "_.memoize",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2222,
                2246
            ],
            "filename": "memoize.js",
            "lineno": 75,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013726",
                "name": "module.exports",
                "type": "Identifier",
                "value": "memoize",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "merge.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013734",
                "name": "baseMerge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMerge",
        "longname": "baseMerge",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "merge.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013739",
                "name": "createAssigner",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAssigner",
        "longname": "createAssigner",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */",
        "meta": {
            "range": [
                1125,
                1226
            ],
            "filename": "merge.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013747",
                "name": "merge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.assign` except that it recursively merges own and\ninherited enumerable string keyed properties of source objects into the\ndestination object. Source properties that resolve to `undefined` are\nskipped if a destination value exists. Array and plain object properties\nare merged recursively. Other objects and value types are overridden by\nassignment. Source objects are applied from left to right. Subsequent\nsources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.5.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "var object = {\n  'a': [{ 'b': 2 }, { 'd': 4 }]\n};\n\nvar other = {\n  'a': [{ 'c': 3 }, { 'e': 5 }]\n};\n\n_.merge(object, other);\n// => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }"
        ],
        "name": "merge",
        "longname": "_.merge",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1229,
                1251
            ],
            "filename": "merge.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013763",
                "name": "module.exports",
                "type": "Identifier",
                "value": "merge",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "mergeWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013771",
                "name": "baseMerge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseMerge",
        "longname": "baseMerge",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "mergeWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013776",
                "name": "createAssigner",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAssigner",
        "longname": "createAssigner",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */",
        "meta": {
            "range": [
                1120,
                1249
            ],
            "filename": "mergeWith.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013784",
                "name": "mergeWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.merge` except that it accepts `customizer` which\nis invoked to produce the merged values of the destination and source\nproperties. If `customizer` returns `undefined`, merging is handled by the\nmethod instead. The `customizer` is invoked with six arguments:\n(objValue, srcValue, key, object, source, stack).\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "variable": true,
                "description": "The source objects.",
                "name": "sources"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to customize assigned values.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "function customizer(objValue, srcValue) {\n  if (_.isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n}\n\nvar object = { 'a': [1], 'b': [2] };\nvar other = { 'a': [3], 'b': [4] };\n\n_.mergeWith(object, other, customizer);\n// => { 'a': [1, 3], 'b': [2, 4] }"
        ],
        "name": "mergeWith",
        "longname": "_.mergeWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1252,
                1278
            ],
            "filename": "mergeWith.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013802",
                "name": "module.exports",
                "type": "Identifier",
                "value": "mergeWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "method.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013810",
                "name": "baseInvoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseInvoke",
        "longname": "baseInvoke",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                98
            ],
            "filename": "method.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013815",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes the method at `path` of a given object.\n * Any additional arguments are provided to the invoked method.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Util\n * @param {Array|string} path The path of the method to invoke.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {Function} Returns the new invoker function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': _.constant(2) } },\n *   { 'a': { 'b': _.constant(1) } }\n * ];\n *\n * _.map(objects, _.method('a.b'));\n * // => [2, 1]\n *\n * _.map(objects, _.method(['a', 'b']));\n * // => [2, 1]\n */",
        "meta": {
            "range": [
                746,
                865
            ],
            "filename": "method.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013823",
                "name": "method",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes the method at `path` of a given object.\nAny additional arguments are provided to the invoked method.",
        "scope": "static",
        "memberof": "_",
        "since": "3.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the method to invoke.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to invoke the method with.",
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new invoker function."
            }
        ],
        "examples": [
            "var objects = [\n  { 'a': { 'b': _.constant(2) } },\n  { 'a': { 'b': _.constant(1) } }\n];\n\n_.map(objects, _.method('a.b'));\n// => [2, 1]\n\n_.map(objects, _.method(['a', 'b']));\n// => [2, 1]"
        ],
        "name": "method",
        "longname": "_.method",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                868,
                891
            ],
            "filename": "method.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013842",
                "name": "module.exports",
                "type": "Identifier",
                "value": "method",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "methodOf.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013850",
                "name": "baseInvoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseInvoke",
        "longname": "baseInvoke",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                98
            ],
            "filename": "methodOf.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013855",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `_.method`; this method creates a function that invokes\n * the method at a given path of `object`. Any additional arguments are\n * provided to the invoked method.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Util\n * @param {Object} object The object to query.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {Function} Returns the new invoker function.\n * @example\n *\n * var array = _.times(3, _.constant),\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n * // => [2, 0]\n */",
        "meta": {
            "range": [
                794,
                915
            ],
            "filename": "methodOf.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013863",
                "name": "methodOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "The opposite of `_.method`; this method creates a function that invokes\nthe method at a given path of `object`. Any additional arguments are\nprovided to the invoked method.",
        "scope": "static",
        "memberof": "_",
        "since": "3.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to invoke the method with.",
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new invoker function."
            }
        ],
        "examples": [
            "var array = _.times(3, _.constant),\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.methodOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\n// => [2, 0]"
        ],
        "name": "methodOf",
        "longname": "_.methodOf",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                918,
                943
            ],
            "filename": "methodOf.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013882",
                "name": "module.exports",
                "type": "Identifier",
                "value": "methodOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "min.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013890",
                "name": "baseExtremum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseExtremum",
        "longname": "baseExtremum",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                98
            ],
            "filename": "min.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013895",
                "name": "baseLt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseLt",
        "longname": "baseLt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                136
            ],
            "filename": "min.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013900",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {array} array The array to iterate over.\n * @author element\n * @returns {min} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */",
        "meta": {
            "range": [
                527,
                644
            ],
            "filename": "min.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013907",
                "name": "min",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Computes the minimum value of `array`. If `array` is empty or falsey,\n`undefined` is returned.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "min"
                    ]
                },
                "description": "Returns the minimum value."
            }
        ],
        "examples": [
            "_.min([4, 2, 8, 6]);\n// => 2\n\n_.min([]);\n// => undefined"
        ],
        "name": "min",
        "longname": "_.min",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                646,
                666
            ],
            "filename": "min.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013925",
                "name": "module.exports",
                "type": "Identifier",
                "value": "min",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "minBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013933",
                "name": "baseExtremum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseExtremum",
        "longname": "baseExtremum",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                110
            ],
            "filename": "minBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013938",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                154
            ],
            "filename": "minBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013943",
                "name": "baseLt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseLt",
        "longname": "baseLt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */",
        "meta": {
            "range": [
                861,
                1007
            ],
            "filename": "minBy.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013950",
                "name": "minBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.min` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nthe value is ranked. The iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the minimum value."
            }
        ],
        "examples": [
            "var objects = [{ 'n': 1 }, { 'n': 2 }];\n\n_.minBy(objects, function(o) { return o.n; });\n// => { 'n': 1 }\n\n// The `_.property` iteratee shorthand.\n_.minBy(objects, 'n');\n// => { 'n': 1 }"
        ],
        "name": "minBy",
        "longname": "_.minBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1009,
                1031
            ],
            "filename": "minBy.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013972",
                "name": "module.exports",
                "type": "Identifier",
                "value": "minBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "mixin.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013980",
                "name": "arrayEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEach",
        "longname": "arrayEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                98
            ],
            "filename": "mixin.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013985",
                "name": "arrayPush",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayPush",
        "longname": "arrayPush",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                156
            ],
            "filename": "mixin.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013990",
                "name": "baseFunctions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFunctions",
        "longname": "baseFunctions",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                206
            ],
            "filename": "mixin.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100013995",
                "name": "copyArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyArray",
        "longname": "copyArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                212,
                248
            ],
            "filename": "mixin.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014000",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                286
            ],
            "filename": "mixin.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014005",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                292,
                316
            ],
            "filename": "mixin.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014010",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Adds all own enumerable string keyed function properties of a source\n * object to the destination object. If `object` is a function, then methods\n * are added to its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */",
        "meta": {
            "range": [
                1382,
                2261
            ],
            "filename": "mixin.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014017",
                "name": "mixin",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "source",
                    "options"
                ]
            },
            "vars": {
                "props": "_.mixin~props",
                "methodNames": "_.mixin~methodNames",
                "chain": "_.mixin~chain",
                "isFunc": "_.mixin~isFunc",
                "": null
            }
        },
        "description": "Adds all own enumerable string keyed function properties of a source\nobject to the destination object. If `object` is a function, then methods\nare added to its prototype as well.\n\n**Note:** Use `_.runInContext` to create a pristine `lodash` function to\navoid conflicts caused by modifying the original.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function",
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "lodash",
                "description": "The destination object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object of functions to add.",
                "name": "source"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "{}",
                "description": "The options object.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": true,
                "description": "Specify whether mixins are chainable.",
                "name": "options.chain"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function",
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "function vowels(string) {\n  return _.filter(string, function(v) {\n    return /[aeiou]/i.test(v);\n  });\n}\n\n_.mixin({ 'vowels': vowels });\n_.vowels('fred');\n// => ['e']\n\n_('fred').vowels().value();\n// => ['e']\n\n_.mixin({ 'vowels': vowels }, { 'chain': false });\n_('fred').vowels();\n// => ['e']"
        ],
        "name": "mixin",
        "longname": "_.mixin",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1430,
                1450
            ],
            "filename": "mixin.js",
            "lineno": 48,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014024",
                "name": "props",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "props",
        "longname": "_.mixin~props",
        "kind": "member",
        "memberof": "_.mixin",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1458,
                1500
            ],
            "filename": "mixin.js",
            "lineno": 49,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014029",
                "name": "methodNames",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "methodNames",
        "longname": "_.mixin~methodNames",
        "kind": "member",
        "memberof": "_.mixin",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1509,
                1578
            ],
            "filename": "mixin.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014036",
                "name": "chain",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "_.mixin~chain",
        "kind": "member",
        "memberof": "_.mixin",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1586,
                1613
            ],
            "filename": "mixin.js",
            "lineno": 52,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014052",
                "name": "isFunc",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunc",
        "longname": "_.mixin~isFunc",
        "kind": "member",
        "memberof": "_.mixin",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1672,
                1697
            ],
            "filename": "mixin.js",
            "lineno": 55,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014065",
                "name": "func",
                "type": "MemberExpression",
                "value": "source[undefined]"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "<anonymous>~func",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1703,
                1728
            ],
            "filename": "mixin.js",
            "lineno": 56,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014071",
                "name": "object[undefined]",
                "type": "Identifier",
                "value": "func",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "object[undefined]",
        "longname": "object[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1754,
                2228
            ],
            "filename": "mixin.js",
            "lineno": 58,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014080",
                "name": "object.prototype[undefined]",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "chainAll": "object#[undefined]~chainAll",
                "result": "object#[undefined]~result",
                "actions": "object#[undefined]~actions",
                "result.__actions__": "object#[undefined]~result.__actions__",
                "result.__chain__": "object#[undefined]~result.__chain__"
            }
        },
        "undocumented": true,
        "name": "[undefined]",
        "longname": "object#[undefined]",
        "kind": "function",
        "memberof": "object",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1810,
                1835
            ],
            "filename": "mixin.js",
            "lineno": 59,
            "columnno": 12,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014089",
                "name": "chainAll",
                "type": "MemberExpression",
                "value": "this.__chain__"
            }
        },
        "undocumented": true,
        "name": "chainAll",
        "longname": "object#[undefined]~chainAll",
        "kind": "member",
        "memberof": "object#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1884,
                1917
            ],
            "filename": "mixin.js",
            "lineno": 61,
            "columnno": 14,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014100",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "object#[undefined]~result",
        "kind": "member",
        "memberof": "object#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1933,
                1991
            ],
            "filename": "mixin.js",
            "lineno": 62,
            "columnno": 14,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014107",
                "name": "actions",
                "type": "AssignmentExpression",
                "value": "result.__actions__"
            }
        },
        "undocumented": true,
        "name": "actions",
        "longname": "object#[undefined]~actions",
        "kind": "member",
        "memberof": "object#[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1943,
                1991
            ],
            "filename": "mixin.js",
            "lineno": 62,
            "columnno": 24,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014109",
                "name": "result.__actions__",
                "type": "CallExpression",
                "funcscope": "object#[undefined]",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__actions__",
        "longname": "object#[undefined]~result.__actions__",
        "kind": "member",
        "memberof": "object#[undefined]~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2019,
                2031
            ],
            "filename": "mixin.js",
            "lineno": 64,
            "columnno": 25,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014124",
                "name": "func",
                "type": "Identifier",
                "value": "func"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2033,
                2050
            ],
            "filename": "mixin.js",
            "lineno": 64,
            "columnno": 39,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014126",
                "name": "args",
                "type": "Identifier",
                "value": "arguments"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "args",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2052,
                2069
            ],
            "filename": "mixin.js",
            "lineno": 64,
            "columnno": 58,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014128",
                "name": "thisArg",
                "type": "Identifier",
                "value": "object"
            }
        },
        "undocumented": true,
        "name": "thisArg",
        "longname": "thisArg",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2084,
                2111
            ],
            "filename": "mixin.js",
            "lineno": 65,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014131",
                "name": "result.__chain__",
                "type": "Identifier",
                "funcscope": "object#[undefined]",
                "value": "chainAll",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__chain__",
        "longname": "object#[undefined]~result.__chain__",
        "kind": "member",
        "memberof": "object#[undefined]~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2263,
                2285
            ],
            "filename": "mixin.js",
            "lineno": 76,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014155",
                "name": "module.exports",
                "type": "Identifier",
                "value": "mixin",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                68
            ],
            "filename": "multiply.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014163",
                "name": "createMathOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createMathOperation",
        "longname": "createMathOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Multiply two numbers.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Math\n * @param {number} multiplier The first number in a multiplication.\n * @param {number} multiplicand The second number in a multiplication.\n * @author product\n * @returns {number} The result of a multiplication.\n * @example\n *\n * _.multiply(6, 4);\n * // => 24\n */",
        "meta": {
            "range": [
                445,
                554
            ],
            "filename": "multiply.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014171",
                "name": "multiply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Multiply two numbers.",
        "scope": "static",
        "memberof": "_",
        "since": "4.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The first number in a multiplication.",
                "name": "multiplier"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The second number in a multiplication.",
                "name": "multiplicand"
            }
        ],
        "author": [
            "product"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The result of a multiplication."
            }
        ],
        "examples": [
            "_.multiply(6, 4);\n// => 24"
        ],
        "name": "multiply",
        "longname": "_.multiply",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                557,
                582
            ],
            "filename": "multiply.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014185",
                "name": "module.exports",
                "type": "Identifier",
                "value": "multiply",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                51,
                90
            ],
            "filename": "negate.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014195",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */",
        "meta": {
            "range": [
                594,
                1067
            ],
            "filename": "negate.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014198",
                "name": "negate",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "predicate"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Creates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The predicate to negate.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new negated function."
            }
        ],
        "examples": [
            "function isEven(n) {\n  return n % 2 == 0;\n}\n\n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n// => [1, 3, 5]"
        ],
        "name": "negate",
        "longname": "_.negate",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                739,
                755
            ],
            "filename": "negate.js",
            "lineno": 31,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014216",
                "name": "args",
                "type": "Identifier",
                "value": "arguments"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "<anonymous>~args",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1069,
                1092
            ],
            "filename": "negate.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014286",
                "name": "module.exports",
                "type": "Identifier",
                "value": "negate",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                34
            ],
            "filename": "next.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014294",
                "name": "toArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toArray",
        "longname": "toArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets the next value on a wrapped object following the\n * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n *\n * @name next\n * @memberOf _\n * @since 4.0.0\n * @category Seq\n * @returns {Object} Returns the next iterator value.\n * @example\n *\n * var wrapped = _([1, 2]);\n *\n * wrapped.next();\n * // => { 'done': false, 'value': 1 }\n *\n * wrapped.next();\n * // => { 'done': false, 'value': 2 }\n *\n * wrapped.next();\n * // => { 'done': true, 'value': undefined }\n */",
        "meta": {
            "filename": "next.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Gets the next value on a wrapped object following the\n[iterator protocol](https://mdn.io/iteration_protocols#iterator).",
        "name": "next",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the next iterator value."
            }
        ],
        "examples": [
            "var wrapped = _([1, 2]);\n\nwrapped.next();\n// => { 'done': false, 'value': 1 }\n\nwrapped.next();\n// => { 'done': false, 'value': 2 }\n\nwrapped.next();\n// => { 'done': true, 'value': undefined }"
        ],
        "scope": "static",
        "longname": "_.next",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                538,
                819
            ],
            "filename": "next.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014301",
                "name": "wrapperNext",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "this.__values__": null,
                "done": "wrapperNext~done",
                "value": "wrapperNext~value"
            }
        },
        "undocumented": true,
        "name": "wrapperNext",
        "longname": "wrapperNext",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                606,
                645
            ],
            "filename": "next.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014312",
                "name": "this.__values__",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__values__",
        "longname": "__values__",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                657,
                704
            ],
            "filename": "next.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014323",
                "name": "done",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "wrapperNext~done",
        "kind": "member",
        "memberof": "wrapperNext",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                712,
                772
            ],
            "filename": "next.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014334",
                "name": "value",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "wrapperNext~value",
        "kind": "member",
        "memberof": "wrapperNext",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                786,
                798
            ],
            "filename": "next.js",
            "lineno": 34,
            "columnno": 11,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014349",
                "name": "done",
                "type": "Identifier",
                "value": "done"
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "done",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                800,
                814
            ],
            "filename": "next.js",
            "lineno": 34,
            "columnno": 25,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014351",
                "name": "value",
                "type": "Identifier",
                "value": "value"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                821,
                849
            ],
            "filename": "next.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014354",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperNext",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */",
        "meta": {
            "range": [
                192,
                240
            ],
            "filename": "noop.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014363",
                "name": "noop",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This method returns `undefined`.",
        "scope": "static",
        "memberof": "_",
        "since": "2.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "examples": [
            "_.times(2, _.noop);\n// => [undefined, undefined]"
        ],
        "name": "noop",
        "longname": "_.noop",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                242,
                263
            ],
            "filename": "noop.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014367",
                "name": "module.exports",
                "type": "Identifier",
                "value": "noop",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "now.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014375",
                "name": "root",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "root",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @author time\n * @returns {milliseconds} The concept of time.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */",
        "meta": {
            "range": [
                493,
                539
            ],
            "filename": "now.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014383",
                "name": "now",
                "type": "FunctionExpression"
            }
        },
        "description": "Gets the timestamp of the number of milliseconds that have elapsed since\nthe Unix epoch (1 January 1970 00:00:00 UTC).",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Date",
                "value": "Date"
            }
        ],
        "author": [
            "time"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "milliseconds"
                    ]
                },
                "description": "The concept of time."
            }
        ],
        "examples": [
            "_.defer(function(stamp) {\n  console.log(_.now() - stamp);\n}, _.now());\n// => Logs the number of milliseconds it took for the deferred invocation."
        ],
        "name": "now",
        "longname": "_.now",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                542,
                562
            ],
            "filename": "now.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014395",
                "name": "module.exports",
                "type": "Identifier",
                "value": "now",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "nth.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014403",
                "name": "baseNth",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseNth",
        "longname": "baseNth",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                84
            ],
            "filename": "nth.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014408",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets the element at index `n` of `array`. If `n` is negative, the nth\n * element from the end is returned.\n *\n * @static\n * @memberOf _\n * @since 4.11.0\n * @category Array\n * @param {array} array The array to query.\n * @param {number} index The index of an array's element.\n * @author element\n * @returns {element} Returns the nth element of `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n *\n * _.nth(array, 1);\n * // => 'b'\n *\n * _.nth(array, -2);\n * // => 'c';\n */",
        "meta": {
            "range": [
                590,
                693
            ],
            "filename": "nth.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014415",
                "name": "nth",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "n"
                ]
            }
        },
        "description": "Gets the element at index `n` of `array`. If `n` is negative, the nth\nelement from the end is returned.",
        "scope": "static",
        "memberof": "_",
        "since": "4.11.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The index of an array's element.",
                "name": "index"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "element"
                    ]
                },
                "description": "Returns the nth element of `array`."
            }
        ],
        "examples": [
            "var array = ['a', 'b', 'c', 'd'];\n\n_.nth(array, 1);\n// => 'b'\n\n_.nth(array, -2);\n// => 'c';"
        ],
        "name": "nth",
        "longname": "_.nth",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                695,
                715
            ],
            "filename": "nth.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014435",
                "name": "module.exports",
                "type": "Identifier",
                "value": "nth",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "nthArg.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014443",
                "name": "baseNth",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseNth",
        "longname": "baseNth",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                92
            ],
            "filename": "nthArg.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014448",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                98,
                132
            ],
            "filename": "nthArg.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014453",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that gets the argument at index `n`. If `n` is negative,\n * the nth argument from the end is returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {number} [n=0] The index of the argument to return.\n * @returns {Function} Returns the new pass-thru function.\n * @example\n *\n * var func = _.nthArg(1);\n * func('a', 'b', 'c', 'd');\n * // => 'b'\n *\n * var func = _.nthArg(-2);\n * func('a', 'b', 'c', 'd');\n * // => 'c'\n */",
        "meta": {
            "range": [
                624,
                736
            ],
            "filename": "nthArg.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014460",
                "name": "nthArg",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "n"
                ]
            },
            "vars": {
                "n": "_.nthArg~n",
                "": null
            }
        },
        "description": "Creates a function that gets the argument at index `n`. If `n` is negative,\nthe nth argument from the end is returned.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The index of the argument to return.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new pass-thru function."
            }
        ],
        "examples": [
            "var func = _.nthArg(1);\nfunc('a', 'b', 'c', 'd');\n// => 'b'\n\nvar func = _.nthArg(-2);\nfunc('a', 'b', 'c', 'd');\n// => 'c'"
        ],
        "name": "nthArg",
        "longname": "_.nthArg",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                647,
                663
            ],
            "filename": "nthArg.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014465",
                "name": "n",
                "type": "CallExpression",
                "funcscope": "_.nthArg",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.nthArg~n",
        "kind": "member",
        "memberof": "_.nthArg",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                738,
                761
            ],
            "filename": "nthArg.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014482",
                "name": "module.exports",
                "type": "Identifier",
                "value": "nthArg",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                118
            ],
            "filename": "number.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014490",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                48
            ],
            "filename": "number.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014495",
                "name": "clamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clamp",
        "longname": "module.exports.clamp",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                83
            ],
            "filename": "number.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014499",
                "name": "inRange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "inRange",
        "longname": "module.exports.inRange",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                87,
                116
            ],
            "filename": "number.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014503",
                "name": "random",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "random",
        "longname": "module.exports.random",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                1672
            ],
            "filename": "object.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014510",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                50
            ],
            "filename": "object.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014515",
                "name": "assign",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assign",
        "longname": "module.exports.assign",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                87
            ],
            "filename": "object.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014519",
                "name": "assignIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignIn",
        "longname": "module.exports.assignIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                91,
                132
            ],
            "filename": "object.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014523",
                "name": "assignInWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignInWith",
        "longname": "module.exports.assignInWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                136,
                173
            ],
            "filename": "object.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014527",
                "name": "assignWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignWith",
        "longname": "module.exports.assignWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                177,
                198
            ],
            "filename": "object.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014531",
                "name": "at",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "at",
        "longname": "module.exports.at",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                202,
                231
            ],
            "filename": "object.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014535",
                "name": "create",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "create",
        "longname": "module.exports.create",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                235,
                268
            ],
            "filename": "object.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014539",
                "name": "defaults",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "defaults",
        "longname": "module.exports.defaults",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                272,
                313
            ],
            "filename": "object.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014543",
                "name": "defaultsDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "defaultsDeep",
        "longname": "module.exports.defaultsDeep",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                317,
                348
            ],
            "filename": "object.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014547",
                "name": "entries",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "module.exports.entries",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                352,
                387
            ],
            "filename": "object.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014551",
                "name": "entriesIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entriesIn",
        "longname": "module.exports.entriesIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                391,
                420
            ],
            "filename": "object.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014555",
                "name": "extend",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "extend",
        "longname": "module.exports.extend",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                424,
                461
            ],
            "filename": "object.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014559",
                "name": "extendWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "extendWith",
        "longname": "module.exports.extendWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                465,
                496
            ],
            "filename": "object.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014563",
                "name": "findKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findKey",
        "longname": "module.exports.findKey",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                500,
                539
            ],
            "filename": "object.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014567",
                "name": "findLastKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findLastKey",
        "longname": "module.exports.findLastKey",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                543,
                570
            ],
            "filename": "object.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014571",
                "name": "forIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "forIn",
        "longname": "module.exports.forIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                574,
                611
            ],
            "filename": "object.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014575",
                "name": "forInRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "forInRight",
        "longname": "module.exports.forInRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                615,
                644
            ],
            "filename": "object.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014579",
                "name": "forOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "forOwn",
        "longname": "module.exports.forOwn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                648,
                687
            ],
            "filename": "object.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014583",
                "name": "forOwnRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "forOwnRight",
        "longname": "module.exports.forOwnRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                691,
                726
            ],
            "filename": "object.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014587",
                "name": "functions",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "functions",
        "longname": "module.exports.functions",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                730,
                769
            ],
            "filename": "object.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014591",
                "name": "functionsIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "functionsIn",
        "longname": "module.exports.functionsIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                773,
                796
            ],
            "filename": "object.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014595",
                "name": "get",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "module.exports.get",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                800,
                823
            ],
            "filename": "object.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014599",
                "name": "has",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "has",
        "longname": "module.exports.has",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                827,
                854
            ],
            "filename": "object.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014603",
                "name": "hasIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasIn",
        "longname": "module.exports.hasIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                858,
                887
            ],
            "filename": "object.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014607",
                "name": "invert",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "invert",
        "longname": "module.exports.invert",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                891,
                924
            ],
            "filename": "object.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014611",
                "name": "invertBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "invertBy",
        "longname": "module.exports.invertBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                928,
                957
            ],
            "filename": "object.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014615",
                "name": "invoke",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "invoke",
        "longname": "module.exports.invoke",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                961,
                986
            ],
            "filename": "object.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014619",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "module.exports.keys",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                990,
                1019
            ],
            "filename": "object.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014623",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "module.exports.keysIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1023,
                1054
            ],
            "filename": "object.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014627",
                "name": "mapKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapKeys",
        "longname": "module.exports.mapKeys",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1058,
                1093
            ],
            "filename": "object.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014631",
                "name": "mapValues",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapValues",
        "longname": "module.exports.mapValues",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1097,
                1124
            ],
            "filename": "object.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014635",
                "name": "merge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "module.exports.merge",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1128,
                1163
            ],
            "filename": "object.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014639",
                "name": "mergeWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mergeWith",
        "longname": "module.exports.mergeWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1167,
                1192
            ],
            "filename": "object.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014643",
                "name": "omit",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "omit",
        "longname": "module.exports.omit",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1196,
                1225
            ],
            "filename": "object.js",
            "lineno": 35,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014647",
                "name": "omitBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "omitBy",
        "longname": "module.exports.omitBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1229,
                1254
            ],
            "filename": "object.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014651",
                "name": "pick",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pick",
        "longname": "module.exports.pick",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1258,
                1287
            ],
            "filename": "object.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014655",
                "name": "pickBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pickBy",
        "longname": "module.exports.pickBy",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1291,
                1320
            ],
            "filename": "object.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014659",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "module.exports.result",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1324,
                1347
            ],
            "filename": "object.js",
            "lineno": 39,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014663",
                "name": "set",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "set",
        "longname": "module.exports.set",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1351,
                1382
            ],
            "filename": "object.js",
            "lineno": 40,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014667",
                "name": "setWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "setWith",
        "longname": "module.exports.setWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1386,
                1417
            ],
            "filename": "object.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014671",
                "name": "toPairs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toPairs",
        "longname": "module.exports.toPairs",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1421,
                1456
            ],
            "filename": "object.js",
            "lineno": 42,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014675",
                "name": "toPairsIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toPairsIn",
        "longname": "module.exports.toPairsIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1460,
                1495
            ],
            "filename": "object.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014679",
                "name": "transform",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "transform",
        "longname": "module.exports.transform",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1499,
                1526
            ],
            "filename": "object.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014683",
                "name": "unset",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unset",
        "longname": "module.exports.unset",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1530,
                1559
            ],
            "filename": "object.js",
            "lineno": 45,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014687",
                "name": "update",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "update",
        "longname": "module.exports.update",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1563,
                1600
            ],
            "filename": "object.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014691",
                "name": "updateWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "updateWith",
        "longname": "module.exports.updateWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1604,
                1633
            ],
            "filename": "object.js",
            "lineno": 47,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014695",
                "name": "values",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "module.exports.values",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1637,
                1670
            ],
            "filename": "object.js",
            "lineno": 48,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014699",
                "name": "valuesIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "valuesIn",
        "longname": "module.exports.valuesIn",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "omit.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014706",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                96
            ],
            "filename": "omit.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014711",
                "name": "baseClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClone",
        "longname": "baseClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                146
            ],
            "filename": "omit.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014716",
                "name": "baseUnset",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnset",
        "longname": "baseUnset",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                152,
                194
            ],
            "filename": "omit.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014721",
                "name": "castPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castPath",
        "longname": "castPath",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                200,
                246
            ],
            "filename": "omit.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014726",
                "name": "copyObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyObject",
        "longname": "copyObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                252,
                308
            ],
            "filename": "omit.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014731",
                "name": "customOmitClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "customOmitClone",
        "longname": "customOmitClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                314,
                356
            ],
            "filename": "omit.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014736",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                362,
                412
            ],
            "filename": "omit.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014741",
                "name": "getAllKeysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getAllKeysIn",
        "longname": "getAllKeysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for cloning. */",
        "meta": {
            "range": [
                479,
                498
            ],
            "filename": "omit.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014749",
                "name": "CLONE_DEEP_FLAG",
                "type": "Literal",
                "value": 1
            }
        },
        "description": "Used to compose bitmasks for cloning.",
        "name": "CLONE_DEEP_FLAG",
        "longname": "CLONE_DEEP_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                504,
                523
            ],
            "filename": "omit.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014752",
                "name": "CLONE_FLAT_FLAG",
                "type": "Literal",
                "value": 2
            }
        },
        "undocumented": true,
        "name": "CLONE_FLAT_FLAG",
        "longname": "CLONE_FLAT_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                529,
                551
            ],
            "filename": "omit.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014755",
                "name": "CLONE_SYMBOLS_FLAG",
                "type": "Literal",
                "value": 4
            }
        },
        "undocumented": true,
        "name": "CLONE_SYMBOLS_FLAG",
        "longname": "CLONE_SYMBOLS_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */",
        "meta": {
            "range": [
                1129,
                1690
            ],
            "filename": "omit.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014759",
                "name": "omit",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "The opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable property paths of `object` that are not omitted.\n\n**Note:** This method is considerably slower than `_.pick`.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The source object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "string",
                        "Array.<string>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The property paths to omit.",
                "name": "paths"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omit(object, ['a', 'c']);\n// => { 'b': '2' }"
        ],
        "name": "omit",
        "longname": "_.omit",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1177,
                1188
            ],
            "filename": "omit.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014768",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1243,
                1257
            ],
            "filename": "omit.js",
            "lineno": 42,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014779",
                "name": "isDeep",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "isDeep",
        "longname": "<anonymous>~isDeep",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1261,
                1400
            ],
            "filename": "omit.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014783",
                "name": "paths",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "paths",
        "longname": "<anonymous>~paths",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1306,
                1335
            ],
            "filename": "omit.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014792",
                "name": "path",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "<anonymous>~path",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1352,
                1376
            ],
            "filename": "omit.js",
            "lineno": 45,
            "columnno": 15,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014801",
                "name": "isDeep",
                "type": "BinaryExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isDeep",
        "longname": "<anonymous>~isDeep",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1474,
                1573
            ],
            "filename": "omit.js",
            "lineno": 50,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014822",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1585,
                1606
            ],
            "filename": "omit.js",
            "lineno": 52,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014834",
                "name": "length",
                "type": "MemberExpression",
                "value": "paths.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1693,
                1714
            ],
            "filename": "omit.js",
            "lineno": 59,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014853",
                "name": "module.exports",
                "type": "Identifier",
                "value": "omit",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "omitBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014861",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                88
            ],
            "filename": "omitBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014866",
                "name": "negate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "negate",
        "longname": "negate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                122
            ],
            "filename": "omitBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014871",
                "name": "pickBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pickBy",
        "longname": "pickBy",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */",
        "meta": {
            "range": [
                755,
                851
            ],
            "filename": "omitBy.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014878",
                "name": "omitBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "predicate"
                ]
            }
        },
        "description": "The opposite of `_.pickBy`; this method creates an object composed of\nthe own and inherited enumerable string keyed properties of `object` that\n`predicate` doesn't return truthy for. The predicate is invoked with two\narguments: (value, key).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The source object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per property.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omitBy(object, _.isNumber);\n// => { 'b': '2' }"
        ],
        "name": "omitBy",
        "longname": "_.omitBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                853,
                876
            ],
            "filename": "omitBy.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014893",
                "name": "module.exports",
                "type": "Identifier",
                "value": "omitBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                32
            ],
            "filename": "once.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014901",
                "name": "before",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "before",
        "longname": "before",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */",
        "meta": {
            "range": [
                606,
                655
            ],
            "filename": "once.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014908",
                "name": "once",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func"
                ]
            }
        },
        "description": "Creates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first invocation. The `func` is\ninvoked with the `this` binding and arguments of the created function.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to restrict.",
                "name": "func"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new restricted function."
            }
        ],
        "examples": [
            "var initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// => `createApplication` is invoked once"
        ],
        "name": "once",
        "longname": "_.once",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                657,
                678
            ],
            "filename": "once.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014918",
                "name": "module.exports",
                "type": "Identifier",
                "value": "once",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "orderBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014926",
                "name": "baseOrderBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseOrderBy",
        "longname": "baseOrderBy",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                88
            ],
            "filename": "orderBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014931",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */",
        "meta": {
            "range": [
                1257,
                1616
            ],
            "filename": "orderBy.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014938",
                "name": "orderBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratees",
                    "orders",
                    "guard"
                ]
            },
            "vars": {
                "iteratees": "_.orderBy~iteratees",
                "orders": "_.orderBy~orders"
            }
        },
        "description": "This method is like `_.sortBy` except that it allows specifying the sort\norders of the iteratees to sort by. If `orders` is unspecified, all values\nare sorted in ascending order. Otherwise, specify an order of \"desc\" for\ndescending or \"asc\" for ascending sort order of corresponding values.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.reduce`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.reduce`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "Array.<Array>",
                        "Array.<function()>",
                        "Array.<Object>",
                        "Array.<string>"
                    ]
                },
                "optional": true,
                "defaultvalue": "[_.identity]",
                "description": "The iteratees to sort by.",
                "name": "iteratees"
            },
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "optional": true,
                "description": "The sort orders of `iteratees`.",
                "name": "orders"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new sorted array."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 34 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 36 }\n];\n\n// Sort by `user` in ascending order and by `age` in descending order.\n_.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]"
        ],
        "name": "orderBy",
        "longname": "_.orderBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1394,
                1442
            ],
            "filename": "orderBy.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014959",
                "name": "iteratees",
                "type": "ConditionalExpression",
                "funcscope": "_.orderBy",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratees",
        "longname": "_.orderBy~iteratees",
        "kind": "member",
        "memberof": "_.orderBy",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1450,
                1485
            ],
            "filename": "orderBy.js",
            "lineno": 42,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014969",
                "name": "orders",
                "type": "ConditionalExpression",
                "funcscope": "_.orderBy",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "orders",
        "longname": "_.orderBy~orders",
        "kind": "member",
        "memberof": "_.orderBy",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1517,
                1556
            ],
            "filename": "orderBy.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014982",
                "name": "orders",
                "type": "ConditionalExpression",
                "funcscope": "_.orderBy",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "orders",
        "longname": "_.orderBy~orders",
        "kind": "member",
        "memberof": "_.orderBy",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1618,
                1642
            ],
            "filename": "orderBy.js",
            "lineno": 49,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100014998",
                "name": "module.exports",
                "type": "Identifier",
                "value": "orderBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "over.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015006",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                98
            ],
            "filename": "over.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015011",
                "name": "createOver",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createOver",
        "longname": "createOver",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `iteratees` with the arguments it receives\n * and returns their results.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to invoke.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var func = _.over([Math.max, Math.min]);\n *\n * func(1, 2, 3, 4);\n * // => [4, 1]\n */",
        "meta": {
            "range": [
                538,
                565
            ],
            "filename": "over.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015019",
                "name": "over",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes `iteratees` with the arguments it receives\nand returns their results.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function",
                        "Array.<function()>"
                    ]
                },
                "optional": true,
                "variable": true,
                "defaultvalue": "[_.identity]",
                "description": "The iteratees to invoke.",
                "name": "iteratees"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var func = _.over([Math.max, Math.min]);\n\nfunc(1, 2, 3, 4);\n// => [4, 1]"
        ],
        "name": "over",
        "longname": "_.over",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                568,
                589
            ],
            "filename": "over.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015025",
                "name": "module.exports",
                "type": "Identifier",
                "value": "over",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "overArgs.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015033",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                88
            ],
            "filename": "overArgs.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015038",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                142
            ],
            "filename": "overArgs.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015043",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                148,
                198
            ],
            "filename": "overArgs.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015048",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                204,
                246
            ],
            "filename": "overArgs.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015053",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                252,
                296
            ],
            "filename": "overArgs.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015058",
                "name": "baseUnary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnary",
        "longname": "baseUnary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                302,
                344
            ],
            "filename": "overArgs.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015063",
                "name": "castRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castRest",
        "longname": "castRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                350,
                380
            ],
            "filename": "overArgs.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015068",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                491,
                511
            ],
            "filename": "overArgs.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015076",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */",
        "meta": {
            "range": [
                1135,
                1668
            ],
            "filename": "overArgs.js",
            "lineno": 46,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015082",
                "name": "overArgs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes `func` with its arguments transformed.",
        "scope": "static",
        "since": "4.0.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to wrap.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "function",
                        "Array.<function()>"
                    ]
                },
                "optional": true,
                "variable": true,
                "defaultvalue": "[_.identity]",
                "description": "The argument transforms.",
                "name": "transforms"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "function doubled(n) {\n  return n * 2;\n}\n\nfunction square(n) {\n  return n * n;\n}\n\nvar func = _.overArgs(function(x, y) {\n  return [x, y];\n}, [square, doubled]);\n\nfunc(9, 3);\n// => [81, 6]\n\nfunc(10, 5);\n// => [100, 10]"
        ],
        "name": "overArgs",
        "longname": "_.overArgs",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1186,
                1372
            ],
            "filename": "overArgs.js",
            "lineno": 47,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015091",
                "name": "transforms",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "transforms",
        "longname": "<anonymous>~transforms",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1381,
                1412
            ],
            "filename": "overArgs.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015123",
                "name": "funcsLength",
                "type": "MemberExpression",
                "value": "transforms.length"
            }
        },
        "undocumented": true,
        "name": "funcsLength",
        "longname": "<anonymous>~funcsLength",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1457,
                1467
            ],
            "filename": "overArgs.js",
            "lineno": 53,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015135",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1477,
                1521
            ],
            "filename": "overArgs.js",
            "lineno": 54,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015139",
                "name": "length",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1561,
                1616
            ],
            "filename": "overArgs.js",
            "lineno": 57,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015154",
                "name": "args[undefined]",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "args[undefined]",
        "longname": "args[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1671,
                1696
            ],
            "filename": "overArgs.js",
            "lineno": 63,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015175",
                "name": "module.exports",
                "type": "Identifier",
                "value": "overArgs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "overEvery.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015183",
                "name": "arrayEvery",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEvery",
        "longname": "arrayEvery",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                102
            ],
            "filename": "overEvery.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015188",
                "name": "createOver",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createOver",
        "longname": "createOver",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that checks if **all** of the `predicates` return\n * truthy when invoked with the arguments it receives.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {...(Function|Function[])} [predicates=[_.identity]]\n *  The predicates to check.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var func = _.overEvery([Boolean, isFinite]);\n *\n * func('1');\n * // => true\n *\n * func(null);\n * // => false\n *\n * func(NaN);\n * // => false\n */",
        "meta": {
            "range": [
                622,
                656
            ],
            "filename": "overEvery.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015196",
                "name": "overEvery",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that checks if **all** of the `predicates` return\ntruthy when invoked with the arguments it receives.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function",
                        "Array.<function()>"
                    ]
                },
                "optional": true,
                "variable": true,
                "defaultvalue": "[_.identity]",
                "description": "The predicates to check.",
                "name": "predicates"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var func = _.overEvery([Boolean, isFinite]);\n\nfunc('1');\n// => true\n\nfunc(null);\n// => false\n\nfunc(NaN);\n// => false"
        ],
        "name": "overEvery",
        "longname": "_.overEvery",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                659,
                685
            ],
            "filename": "overEvery.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015202",
                "name": "module.exports",
                "type": "Identifier",
                "value": "overEvery",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "overSome.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015210",
                "name": "arraySome",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arraySome",
        "longname": "arraySome",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                100
            ],
            "filename": "overSome.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015215",
                "name": "createOver",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createOver",
        "longname": "createOver",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that checks if **any** of the `predicates` return\n * truthy when invoked with the arguments it receives.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {...(Function|Function[])} [predicates=[_.identity]]\n *  The predicates to check.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var func = _.overSome([Boolean, isFinite]);\n *\n * func('1');\n * // => true\n *\n * func(null);\n * // => true\n *\n * func(NaN);\n * // => false\n */",
        "meta": {
            "range": [
                618,
                650
            ],
            "filename": "overSome.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015223",
                "name": "overSome",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that checks if **any** of the `predicates` return\ntruthy when invoked with the arguments it receives.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function",
                        "Array.<function()>"
                    ]
                },
                "optional": true,
                "variable": true,
                "defaultvalue": "[_.identity]",
                "description": "The predicates to check.",
                "name": "predicates"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var func = _.overSome([Boolean, isFinite]);\n\nfunc('1');\n// => true\n\nfunc(null);\n// => true\n\nfunc(NaN);\n// => false"
        ],
        "name": "overSome",
        "longname": "_.overSome",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                653,
                678
            ],
            "filename": "overSome.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015229",
                "name": "module.exports",
                "type": "Identifier",
                "value": "overSome",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "pad.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015237",
                "name": "createPadding",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createPadding",
        "longname": "createPadding",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                108
            ],
            "filename": "pad.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015242",
                "name": "stringSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringSize",
        "longname": "stringSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                148
            ],
            "filename": "pad.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015247",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                186
            ],
            "filename": "pad.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015252",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                297,
                319
            ],
            "filename": "pad.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015260",
                "name": "nativeCeil",
                "type": "MemberExpression",
                "value": "Math.ceil"
            }
        },
        "undocumented": true,
        "name": "nativeCeil",
        "longname": "nativeCeil",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                325,
                349
            ],
            "filename": "pad.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015265",
                "name": "nativeFloor",
                "type": "MemberExpression",
                "value": "Math.floor"
            }
        },
        "undocumented": true,
        "name": "nativeFloor",
        "longname": "nativeFloor",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */",
        "meta": {
            "range": [
                931,
                1298
            ],
            "filename": "pad.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015270",
                "name": "pad",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "length",
                    "chars"
                ]
            },
            "vars": {
                "string": "_.pad~string",
                "length": "_.pad~length",
                "strLength": "_.pad~strLength",
                "mid": "_.pad~mid"
            }
        },
        "description": "Pads `string` on the left and right sides if it's shorter than `length`.\nPadding characters are truncated if they can't be evenly divided by `length`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to pad.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The padding length.",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "' '",
                "description": "The string used as padding.",
                "name": "chars"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the padded string."
            }
        ],
        "examples": [
            "_.pad('abc', 8);\n// => '  abc   '\n\n_.pad('abc', 8, '_-');\n// => '_-abc_-_'\n\n_.pad('abc', 3);\n// => 'abc'"
        ],
        "name": "pad",
        "longname": "_.pad",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                971,
                996
            ],
            "filename": "pad.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015277",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.pad",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.pad~string",
        "kind": "member",
        "memberof": "_.pad",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1000,
                1026
            ],
            "filename": "pad.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015283",
                "name": "length",
                "type": "CallExpression",
                "funcscope": "_.pad",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.pad~length",
        "kind": "member",
        "memberof": "_.pad",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1035,
                1078
            ],
            "filename": "pad.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015289",
                "name": "strLength",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strLength",
        "longname": "_.pad~strLength",
        "kind": "member",
        "memberof": "_.pad",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1149,
                1179
            ],
            "filename": "pad.js",
            "lineno": 43,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015308",
                "name": "mid",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mid",
        "longname": "_.pad~mid",
        "kind": "member",
        "memberof": "_.pad",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1300,
                1320
            ],
            "filename": "pad.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015332",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pad",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "padEnd.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015340",
                "name": "createPadding",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createPadding",
        "longname": "createPadding",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                108
            ],
            "filename": "padEnd.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015345",
                "name": "stringSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringSize",
        "longname": "stringSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                148
            ],
            "filename": "padEnd.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015350",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                186
            ],
            "filename": "padEnd.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015355",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */",
        "meta": {
            "range": [
                758,
                1023
            ],
            "filename": "padEnd.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015362",
                "name": "padEnd",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "length",
                    "chars"
                ]
            },
            "vars": {
                "string": "_.padEnd~string",
                "length": "_.padEnd~length",
                "strLength": "_.padEnd~strLength"
            }
        },
        "description": "Pads `string` on the right side if it's shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to pad.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The padding length.",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "' '",
                "description": "The string used as padding.",
                "name": "chars"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the padded string."
            }
        ],
        "examples": [
            "_.padEnd('abc', 6);\n// => 'abc   '\n\n_.padEnd('abc', 6, '_-');\n// => 'abc_-_'\n\n_.padEnd('abc', 3);\n// => 'abc'"
        ],
        "name": "padEnd",
        "longname": "_.padEnd",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                801,
                826
            ],
            "filename": "padEnd.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015369",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.padEnd",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.padEnd~string",
        "kind": "member",
        "memberof": "_.padEnd",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                830,
                856
            ],
            "filename": "padEnd.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015375",
                "name": "length",
                "type": "CallExpression",
                "funcscope": "_.padEnd",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.padEnd~length",
        "kind": "member",
        "memberof": "_.padEnd",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                865,
                908
            ],
            "filename": "padEnd.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015381",
                "name": "strLength",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strLength",
        "longname": "_.padEnd~strLength",
        "kind": "member",
        "memberof": "_.padEnd",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1025,
                1048
            ],
            "filename": "padEnd.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015406",
                "name": "module.exports",
                "type": "Identifier",
                "value": "padEnd",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "padStart.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015414",
                "name": "createPadding",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createPadding",
        "longname": "createPadding",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                108
            ],
            "filename": "padStart.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015419",
                "name": "stringSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringSize",
        "longname": "stringSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                148
            ],
            "filename": "padStart.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015424",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                186
            ],
            "filename": "padStart.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015429",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */",
        "meta": {
            "range": [
                763,
                1030
            ],
            "filename": "padStart.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015436",
                "name": "padStart",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "length",
                    "chars"
                ]
            },
            "vars": {
                "string": "_.padStart~string",
                "length": "_.padStart~length",
                "strLength": "_.padStart~strLength"
            }
        },
        "description": "Pads `string` on the left side if it's shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to pad.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The padding length.",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "' '",
                "description": "The string used as padding.",
                "name": "chars"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the padded string."
            }
        ],
        "examples": [
            "_.padStart('abc', 6);\n// => '   abc'\n\n_.padStart('abc', 6, '_-');\n// => '_-_abc'\n\n_.padStart('abc', 3);\n// => 'abc'"
        ],
        "name": "padStart",
        "longname": "_.padStart",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                808,
                833
            ],
            "filename": "padStart.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015443",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.padStart",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.padStart~string",
        "kind": "member",
        "memberof": "_.padStart",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                837,
                863
            ],
            "filename": "padStart.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015449",
                "name": "length",
                "type": "CallExpression",
                "funcscope": "_.padStart",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.padStart~length",
        "kind": "member",
        "memberof": "_.padStart",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                872,
                915
            ],
            "filename": "padStart.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015455",
                "name": "strLength",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strLength",
        "longname": "_.padStart~strLength",
        "kind": "member",
        "memberof": "_.padStart",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1032,
                1057
            ],
            "filename": "padStart.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015480",
                "name": "module.exports",
                "type": "Identifier",
                "value": "padStart",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                38
            ],
            "filename": "parseInt.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015488",
                "name": "root",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "root",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44,
                76
            ],
            "filename": "parseInt.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015493",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match leading and trailing whitespace. */",
        "meta": {
            "range": [
                152,
                172
            ],
            "filename": "parseInt.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015501",
                "name": "reTrimStart",
                "type": "Literal",
                "value": "<RegExp /^\\s+/>"
            }
        },
        "description": "Used to match leading and trailing whitespace.",
        "name": "reTrimStart",
        "longname": "reTrimStart",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                268,
                298
            ],
            "filename": "parseInt.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015505",
                "name": "nativeParseInt",
                "type": "MemberExpression",
                "value": "root.parseInt"
            }
        },
        "undocumented": true,
        "name": "nativeParseInt",
        "longname": "nativeParseInt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string` to an integer of the specified radix. If `radix` is\n * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n * hexadecimal, in which case a `radix` of `16` is used.\n *\n * **Note:** This method aligns with the\n * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category String\n * @param {string} string The string to convert.\n * @param {number} [radix=10] The radix to interpret `value` by.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n *\n * _.map(['6', '08', '10'], _.parseInt);\n * // => [6, 8, 10]\n */",
        "meta": {
            "range": [
                1048,
                1264
            ],
            "filename": "parseInt.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015510",
                "name": "parseInt",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "radix",
                    "guard"
                ]
            },
            "vars": {
                "radix": "_.parseInt~radix"
            }
        },
        "description": "Converts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a\nhexadecimal, in which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the\n[ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.",
        "scope": "static",
        "memberof": "_",
        "since": "1.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to convert.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 10,
                "description": "The radix to interpret `value` by.",
                "name": "radix"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the converted integer."
            }
        ],
        "examples": [
            "_.parseInt('08');\n// => 8\n\n_.map(['6', '08', '10'], _.parseInt);\n// => [6, 8, 10]"
        ],
        "name": "parseInt",
        "longname": "_.parseInt",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1126,
                1135
            ],
            "filename": "parseInt.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015524",
                "name": "radix",
                "type": "Literal",
                "funcscope": "_.parseInt",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "radix",
        "longname": "_.parseInt~radix",
        "kind": "member",
        "memberof": "_.parseInt",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1163,
                1177
            ],
            "filename": "parseInt.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015531",
                "name": "radix",
                "type": "UnaryExpression",
                "funcscope": "_.parseInt",
                "value": "+radix",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "radix",
        "longname": "_.parseInt~radix",
        "kind": "member",
        "memberof": "_.parseInt",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1266,
                1291
            ],
            "filename": "parseInt.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015550",
                "name": "module.exports",
                "type": "Identifier",
                "value": "parseInt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "partial.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015558",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                98
            ],
            "filename": "partial.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015563",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                148
            ],
            "filename": "partial.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015568",
                "name": "getHolder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getHolder",
        "longname": "getHolder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                208
            ],
            "filename": "partial.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015573",
                "name": "replaceHolders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replaceHolders",
        "longname": "replaceHolders",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                285,
                307
            ],
            "filename": "partial.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015581",
                "name": "WRAP_PARTIAL_FLAG",
                "type": "Literal",
                "value": 32
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_PARTIAL_FLAG",
        "longname": "WRAP_PARTIAL_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with `partials` prepended to the\n * arguments it receives. This method is like `_.bind` except it does **not**\n * alter the `this` binding.\n *\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 0.2.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var sayHelloTo = _.partial(greet, 'hello');\n * sayHelloTo('fred');\n * // => 'hello fred'\n *\n * // Partially applied with placeholders.\n * var greetFred = _.partial(greet, _, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n */",
        "meta": {
            "range": [
                1343,
                1529
            ],
            "filename": "partial.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015585",
                "name": "partial",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes `func` with `partials` prepended to the\narguments it receives. This method is like `_.bind` except it does **not**\nalter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method doesn't set the \"length\" property of partially\napplied functions.",
        "scope": "static",
        "memberof": "_",
        "since": "0.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to partially apply arguments to.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to be partially applied.",
                "name": "partials"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new partially applied function."
            }
        ],
        "examples": [
            "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n\nvar sayHelloTo = _.partial(greet, 'hello');\nsayHelloTo('fred');\n// => 'hello fred'\n\n// Partially applied with placeholders.\nvar greetFred = _.partial(greet, _, 'fred');\ngreetFred('hi');\n// => 'hi fred'"
        ],
        "name": "partial",
        "longname": "_.partial",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1395,
                1449
            ],
            "filename": "partial.js",
            "lineno": 45,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015594",
                "name": "holders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "holders",
        "longname": "<anonymous>~holders",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1564,
                1588
            ],
            "filename": "partial.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015611",
                "name": "partial.placeholder",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.partial.placeholder",
        "kind": "member",
        "memberof": "_.partial",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1591,
                1615
            ],
            "filename": "partial.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015617",
                "name": "module.exports",
                "type": "Identifier",
                "value": "partial",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "partialRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015625",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                98
            ],
            "filename": "partialRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015630",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                148
            ],
            "filename": "partialRight.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015635",
                "name": "getHolder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getHolder",
        "longname": "getHolder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                208
            ],
            "filename": "partialRight.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015640",
                "name": "replaceHolders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replaceHolders",
        "longname": "replaceHolders",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                285,
                313
            ],
            "filename": "partialRight.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015648",
                "name": "WRAP_PARTIAL_RIGHT_FLAG",
                "type": "Literal",
                "value": 64
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_PARTIAL_RIGHT_FLAG",
        "longname": "WRAP_PARTIAL_RIGHT_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.partial` except that partially applied arguments\n * are appended to the arguments it receives.\n *\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var greetFred = _.partialRight(greet, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n *\n * // Partially applied with placeholders.\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\n * sayHelloTo('fred');\n * // => 'hello fred'\n */",
        "meta": {
            "range": [
                1303,
                1505
            ],
            "filename": "partialRight.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015652",
                "name": "partialRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.partial` except that partially applied arguments\nare appended to the arguments it receives.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method doesn't set the \"length\" property of partially\napplied functions.",
        "scope": "static",
        "memberof": "_",
        "since": "1.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to partially apply arguments to.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arguments to be partially applied.",
                "name": "partials"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new partially applied function."
            }
        ],
        "examples": [
            "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n\nvar greetFred = _.partialRight(greet, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\n// Partially applied with placeholders.\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\nsayHelloTo('fred');\n// => 'hello fred'"
        ],
        "name": "partialRight",
        "longname": "_.partialRight",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1360,
                1419
            ],
            "filename": "partialRight.js",
            "lineno": 44,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015661",
                "name": "holders",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "holders",
        "longname": "<anonymous>~holders",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1540,
                1569
            ],
            "filename": "partialRight.js",
            "lineno": 49,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015678",
                "name": "partialRight.placeholder",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "placeholder",
        "longname": "_.partialRight.placeholder",
        "kind": "member",
        "memberof": "_.partialRight",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1572,
                1601
            ],
            "filename": "partialRight.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015684",
                "name": "module.exports",
                "type": "Identifier",
                "value": "partialRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "partition.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015692",
                "name": "createAggregator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createAggregator",
        "longname": "createAggregator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */",
        "meta": {
            "range": [
                1381,
                1511
            ],
            "filename": "partition.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015700",
                "name": "partition",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, the second of which\ncontains elements `predicate` returns falsey for. The predicate is\ninvoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the array of grouped elements."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n_.partition(users, function(o) { return o.active; });\n// => objects for [['fred'], ['barney', 'pebbles']]\n\n// The `_.matches` iteratee shorthand.\n_.partition(users, { 'age': 1, 'active': false });\n// => objects for [['pebbles'], ['barney', 'fred']]\n\n// The `_.matchesProperty` iteratee shorthand.\n_.partition(users, ['active', false]);\n// => objects for [['barney', 'pebbles'], ['fred']]\n\n// The `_.property` iteratee shorthand.\n_.partition(users, 'active');\n// => objects for [['fred'], ['barney', 'pebbles']]"
        ],
        "name": "partition",
        "longname": "_.partition",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1514,
                1540
            ],
            "filename": "partition.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015727",
                "name": "module.exports",
                "type": "Identifier",
                "value": "partition",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "pick.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015735",
                "name": "basePick",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePick",
        "longname": "basePick",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                94
            ],
            "filename": "pick.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015740",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */",
        "meta": {
            "range": [
                536,
                636
            ],
            "filename": "pick.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015748",
                "name": "pick",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an object composed of the picked `object` properties.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The source object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "string",
                        "Array.<string>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The property paths to pick.",
                "name": "paths"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.pick(object, ['a', 'c']);\n// => { 'a': 1, 'c': 3 }"
        ],
        "name": "pick",
        "longname": "_.pick",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                639,
                660
            ],
            "filename": "pick.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015767",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pick",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "pickBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015775",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                102
            ],
            "filename": "pickBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015780",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                154
            ],
            "filename": "pickBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015785",
                "name": "basePickBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePickBy",
        "longname": "basePickBy",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                160,
                210
            ],
            "filename": "pickBy.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015790",
                "name": "getAllKeysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getAllKeysIn",
        "longname": "getAllKeysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */",
        "meta": {
            "range": [
                746,
                1056
            ],
            "filename": "pickBy.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015797",
                "name": "pickBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "predicate"
                ]
            },
            "vars": {
                "props": "_.pickBy~props",
                "": null,
                "predicate": "_.pickBy~predicate"
            }
        },
        "description": "Creates an object composed of the `object` properties `predicate` returns\ntruthy for. The predicate is invoked with two arguments: (value, key).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The source object.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per property.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.pickBy(object, _.isNumber);\n// => { 'a': 1, 'c': 3 }"
        ],
        "name": "pickBy",
        "longname": "_.pickBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                832,
                911
            ],
            "filename": "pickBy.js",
            "lineno": 30,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015810",
                "name": "props",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "props",
        "longname": "_.pickBy~props",
        "kind": "member",
        "memberof": "_.pickBy",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                915,
                950
            ],
            "filename": "pickBy.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015824",
                "name": "predicate",
                "type": "CallExpression",
                "funcscope": "_.pickBy",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "predicate",
        "longname": "_.pickBy~predicate",
        "kind": "member",
        "memberof": "_.pickBy",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1058,
                1081
            ],
            "filename": "pickBy.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015846",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pickBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "plant.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015854",
                "name": "baseLodash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseLodash",
        "longname": "baseLodash",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                106
            ],
            "filename": "plant.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015859",
                "name": "wrapperClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "wrapperClone",
        "longname": "wrapperClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a clone of the chain sequence planting `value` as the wrapped value.\n *\n * @name plant\n * @memberOf _\n * @since 3.2.0\n * @category Seq\n * @param {*} value The value to plant.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2]).map(square);\n * var other = wrapped.plant([3, 4]);\n *\n * other.value();\n * // => [9, 16]\n *\n * wrapped.value();\n * // => [1, 4]\n */",
        "meta": {
            "filename": "plant.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Creates a clone of the chain sequence planting `value` as the wrapped value.",
        "name": "plant",
        "memberof": "_",
        "since": "3.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to plant.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "function square(n) {\n  return n * n;\n}\n\nvar wrapped = _([1, 2]).map(square);\nvar other = wrapped.plant([3, 4]);\n\nother.value();\n// => [9, 16]\n\nwrapped.value();\n// => [1, 4]"
        ],
        "scope": "static",
        "longname": "_.plant",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                603,
                1016
            ],
            "filename": "plant.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015866",
                "name": "wrapperPlant",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "result": "wrapperPlant~result",
                "parent": "wrapperPlant~parent",
                "clone": "wrapperPlant~clone",
                "clone.__index__": "_.clone.__index__",
                "clone.__values__": "_.clone.__values__",
                "previous.__wrapped__": "wrapperPlant~previous.__wrapped__",
                "previous": "wrapperPlant~previous"
            }
        },
        "undocumented": true,
        "name": "wrapperPlant",
        "longname": "wrapperPlant",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                640,
                646
            ],
            "filename": "plant.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015871",
                "name": "result"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "wrapperPlant~result",
        "kind": "member",
        "memberof": "wrapperPlant",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                654,
                667
            ],
            "filename": "plant.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015873",
                "name": "parent",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "parent",
        "longname": "wrapperPlant~parent",
        "kind": "member",
        "memberof": "wrapperPlant",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                719,
                747
            ],
            "filename": "plant.js",
            "lineno": 35,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015882",
                "name": "clone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "wrapperPlant~clone",
        "kind": "member",
        "memberof": "wrapperPlant",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                753,
                772
            ],
            "filename": "plant.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015888",
                "name": "clone.__index__",
                "type": "Literal",
                "funcscope": "wrapperPlant",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__index__",
        "longname": "_.clone.__index__",
        "kind": "member",
        "memberof": "_.clone",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                778,
                806
            ],
            "filename": "plant.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015894",
                "name": "clone.__values__",
                "type": "Identifier",
                "funcscope": "wrapperPlant",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__values__",
        "longname": "_.clone.__values__",
        "kind": "member",
        "memberof": "_.clone",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                832,
                860
            ],
            "filename": "plant.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015903",
                "name": "previous.__wrapped__",
                "type": "Identifier",
                "value": "clone",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__wrapped__",
        "longname": "previous.__wrapped__",
        "kind": "member",
        "memberof": "previous",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                881,
                895
            ],
            "filename": "plant.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015910",
                "name": "result",
                "type": "Identifier",
                "funcscope": "wrapperPlant",
                "value": "clone",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "wrapperPlant~result",
        "kind": "member",
        "memberof": "wrapperPlant",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                911,
                927
            ],
            "filename": "plant.js",
            "lineno": 43,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015914",
                "name": "previous",
                "type": "Identifier",
                "value": "clone"
            }
        },
        "undocumented": true,
        "name": "previous",
        "longname": "wrapperPlant~previous",
        "kind": "member",
        "memberof": "wrapperPlant",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                933,
                960
            ],
            "filename": "plant.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015918",
                "name": "parent",
                "type": "MemberExpression",
                "funcscope": "wrapperPlant",
                "value": "parent.__wrapped__",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parent",
        "longname": "wrapperPlant~parent",
        "kind": "member",
        "memberof": "wrapperPlant",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                968,
                996
            ],
            "filename": "plant.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015924",
                "name": "previous.__wrapped__",
                "type": "Identifier",
                "funcscope": "wrapperPlant",
                "value": "value",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__wrapped__",
        "longname": "wrapperPlant~previous.__wrapped__",
        "kind": "member",
        "memberof": "wrapperPlant~previous",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1018,
                1047
            ],
            "filename": "plant.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015932",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperPlant",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "property.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015940",
                "name": "baseProperty",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseProperty",
        "longname": "baseProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                118
            ],
            "filename": "property.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015945",
                "name": "basePropertyDeep",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePropertyDeep",
        "longname": "basePropertyDeep",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                124,
                160
            ],
            "filename": "property.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015950",
                "name": "isKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isKey",
        "longname": "isKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                166,
                202
            ],
            "filename": "property.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015955",
                "name": "toKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toKey",
        "longname": "toKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */",
        "meta": {
            "range": [
                713,
                815
            ],
            "filename": "property.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015962",
                "name": "property",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "path"
                ]
            }
        },
        "description": "Creates a function that returns the value at `path` of a given object.",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to get.",
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new accessor function."
            }
        ],
        "examples": [
            "var objects = [\n  { 'a': { 'b': 2 } },\n  { 'a': { 'b': 1 } }\n];\n\n_.map(objects, _.property('a.b'));\n// => [2, 1]\n\n_.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n// => [1, 2]"
        ],
        "name": "property",
        "longname": "_.property",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                817,
                842
            ],
            "filename": "property.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015980",
                "name": "module.exports",
                "type": "Identifier",
                "value": "property",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "propertyOf.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015988",
                "name": "baseGet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseGet",
        "longname": "baseGet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `_.property`; this method creates a function that returns\n * the value at a given path of `object`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var array = [0, 1, 2],\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n * // => [2, 0]\n */",
        "meta": {
            "range": [
                600,
                725
            ],
            "filename": "propertyOf.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100015995",
                "name": "propertyOf",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "The opposite of `_.property`; this method creates a function that returns\nthe value at a given path of `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new accessor function."
            }
        ],
        "examples": [
            "var array = [0, 1, 2],\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.propertyOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n// => [2, 0]"
        ],
        "name": "propertyOf",
        "longname": "_.propertyOf",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                727,
                754
            ],
            "filename": "propertyOf.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016014",
                "name": "module.exports",
                "type": "Identifier",
                "value": "propertyOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "pull.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016022",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                82
            ],
            "filename": "pull.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016027",
                "name": "pullAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pullAll",
        "longname": "pullAll",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */",
        "meta": {
            "range": [
                732,
                756
            ],
            "filename": "pull.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016035",
                "name": "pull",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Removes all given values from `array` using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.\n\n**Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\nto remove elements from an array by predicate.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The values to remove.",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns `array`."
            }
        ],
        "examples": [
            "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\n_.pull(array, 'a', 'c');\nconsole.log(array);\n// => ['b', 'b']"
        ],
        "name": "pull",
        "longname": "_.pull",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                759,
                780
            ],
            "filename": "pull.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016041",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pull",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "pullAll.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016049",
                "name": "basePullAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePullAll",
        "longname": "basePullAll",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */",
        "meta": {
            "range": [
                565,
                706
            ],
            "filename": "pullAll.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016056",
                "name": "pullAll",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "values"
                ]
            }
        },
        "description": "This method is like `_.pull` except that it accepts an array of values to remove.\n\n**Note:** Unlike `_.difference`, this method mutates `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The values to remove.",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns `array`."
            }
        ],
        "examples": [
            "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\n_.pullAll(array, ['a', 'c']);\nconsole.log(array);\n// => ['b', 'b']"
        ],
        "name": "pullAll",
        "longname": "_.pullAll",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                708,
                732
            ],
            "filename": "pullAll.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016080",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pullAll",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "pullAllBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016088",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                108
            ],
            "filename": "pullAllBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016093",
                "name": "basePullAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePullAll",
        "longname": "basePullAll",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\n * invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n *\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n * console.log(array);\n * // => [{ 'x': 2 }]\n */",
        "meta": {
            "range": [
                894,
                1074
            ],
            "filename": "pullAllBy.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016100",
                "name": "pullAllBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "values",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.pullAll` except that it accepts `iteratee` which is\ninvoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The iteratee is invoked with one argument: (value).\n\n**Note:** Unlike `_.differenceBy`, this method mutates `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The values to remove.",
                "name": "values"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns `array`."
            }
        ],
        "examples": [
            "var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\n_.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\nconsole.log(array);\n// => [{ 'x': 2 }]"
        ],
        "name": "pullAllBy",
        "longname": "_.pullAllBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1076,
                1102
            ],
            "filename": "pullAllBy.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016129",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pullAllBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "pullAllWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016137",
                "name": "basePullAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePullAll",
        "longname": "basePullAll",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */",
        "meta": {
            "range": [
                841,
                1021
            ],
            "filename": "pullAllWith.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016144",
                "name": "pullAllWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "values",
                    "comparator"
                ]
            }
        },
        "description": "This method is like `_.pullAll` except that it accepts `comparator` which\nis invoked to compare elements of `array` to `values`. The comparator is\ninvoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.differenceWith`, this method mutates `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.6.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The values to remove.",
                "name": "values"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The comparator invoked per element.",
                "name": "comparator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns `array`."
            }
        ],
        "examples": [
            "var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\n_.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\nconsole.log(array);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]"
        ],
        "name": "pullAllWith",
        "longname": "_.pullAllWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1023,
                1051
            ],
            "filename": "pullAllWith.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016171",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pullAllWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "pullAt.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016179",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                90
            ],
            "filename": "pullAt.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016184",
                "name": "baseAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAt",
        "longname": "baseAt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                142
            ],
            "filename": "pullAt.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016189",
                "name": "basePullAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePullAt",
        "longname": "basePullAt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                148,
                206
            ],
            "filename": "pullAt.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016194",
                "name": "compareAscending",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "compareAscending",
        "longname": "compareAscending",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                212,
                254
            ],
            "filename": "pullAt.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016199",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                260,
                300
            ],
            "filename": "pullAt.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016204",
                "name": "isIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIndex",
        "longname": "isIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */",
        "meta": {
            "range": [
                931,
                1223
            ],
            "filename": "pullAt.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016212",
                "name": "pullAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Removes elements from `array` corresponding to `indexes` and returns an\narray of removed elements.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number",
                        "Array.<number>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The indexes of elements to remove.",
                "name": "indexes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of removed elements."
            }
        ],
        "examples": [
            "var array = ['a', 'b', 'c', 'd'];\nvar pulled = _.pullAt(array, [1, 3]);\n\nconsole.log(array);\n// => ['a', 'c']\n\nconsole.log(pulled);\n// => ['b', 'd']"
        ],
        "name": "pullAt",
        "longname": "_.pullAt",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                982,
                1023
            ],
            "filename": "pullAt.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016221",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1031,
                1062
            ],
            "filename": "pullAt.js",
            "lineno": 36,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016231",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1226,
                1249
            ],
            "filename": "pullAt.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016263",
                "name": "module.exports",
                "type": "Identifier",
                "value": "pullAt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "random.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016271",
                "name": "baseRandom",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRandom",
        "longname": "baseRandom",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                110
            ],
            "filename": "random.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016276",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                148
            ],
            "filename": "random.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016281",
                "name": "toFinite",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toFinite",
        "longname": "toFinite",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Built-in method references without a dependency on `root`. */",
        "meta": {
            "range": [
                236,
                263
            ],
            "filename": "random.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016289",
                "name": "freeParseFloat",
                "type": "Identifier",
                "value": "parseFloat"
            }
        },
        "description": "Built-in method references without a dependency on `root`.",
        "name": "freeParseFloat",
        "longname": "freeParseFloat",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                359,
                379
            ],
            "filename": "random.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016293",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                385,
                411
            ],
            "filename": "random.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016298",
                "name": "nativeRandom",
                "type": "MemberExpression",
                "value": "Math.random"
            }
        },
        "undocumented": true,
        "name": "nativeRandom",
        "longname": "nativeRandom",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @author random\n * @returns {number} Something that is random, or a random state or condition.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */",
        "meta": {
            "range": [
                1385,
                2344
            ],
            "filename": "random.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016303",
                "name": "random",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "lower",
                    "upper",
                    "floating"
                ]
            },
            "vars": {
                "upper": "_.random~upper",
                "floating": "_.random~floating",
                "lower": "_.random~lower",
                "temp": "_.random~temp",
                "rand": "_.random~rand"
            }
        },
        "description": "Produces a random number between the inclusive `lower` and `upper` bounds.\nIf only one argument is provided a number between `0` and the given number\nis returned. If `floating` is `true`, or either `lower` or `upper` are\nfloats, a floating-point number is returned instead of an integer.\n\n**Note:** JavaScript follows the IEEE-754 standard for resolving\nfloating-point values which can produce unexpected results.",
        "scope": "static",
        "memberof": "_",
        "since": "0.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Number",
                "value": "Number"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The lower bound.",
                "name": "lower"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The upper bound.",
                "name": "upper"
            }
        ],
        "author": [
            "random"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Something that is random, or a random state or condition."
            }
        ],
        "examples": [
            "_.random(0, 5);\n// => an integer between 0 and 5\n\n_.random(5);\n// => also an integer between 0 and 5\n\n_.random(5, true);\n// => a floating-point number between 0 and 5\n\n_.random(1.2, 5.2);\n// => a floating-point number between 1.2 and 5.2"
        ],
        "name": "random",
        "longname": "_.random",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1523,
                1551
            ],
            "filename": "random.js",
            "lineno": 47,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016324",
                "name": "upper",
                "type": "AssignmentExpression",
                "funcscope": "_.random",
                "value": "floating",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.random~upper",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1531,
                1551
            ],
            "filename": "random.js",
            "lineno": 47,
            "columnno": 12,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016326",
                "name": "floating",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "floating",
        "longname": "_.random~floating",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1632,
                1648
            ],
            "filename": "random.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016341",
                "name": "floating",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "upper",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "floating",
        "longname": "_.random~floating",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1656,
                1673
            ],
            "filename": "random.js",
            "lineno": 52,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016345",
                "name": "upper",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.random~upper",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1729,
                1745
            ],
            "filename": "random.js",
            "lineno": 55,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016355",
                "name": "floating",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "lower",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "floating",
        "longname": "_.random~floating",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1753,
                1770
            ],
            "filename": "random.js",
            "lineno": 56,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016359",
                "name": "lower",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.random~lower",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1838,
                1847
            ],
            "filename": "random.js",
            "lineno": 60,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016372",
                "name": "lower",
                "type": "Literal",
                "funcscope": "_.random",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.random~lower",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1853,
                1862
            ],
            "filename": "random.js",
            "lineno": 61,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016376",
                "name": "upper",
                "type": "Literal",
                "funcscope": "_.random",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.random~upper",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1881,
                1904
            ],
            "filename": "random.js",
            "lineno": 64,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016381",
                "name": "lower",
                "type": "CallExpression",
                "funcscope": "_.random",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.random~lower",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1943,
                1956
            ],
            "filename": "random.js",
            "lineno": 66,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016392",
                "name": "upper",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "lower",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.random~upper",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1964,
                1973
            ],
            "filename": "random.js",
            "lineno": 67,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016396",
                "name": "lower",
                "type": "Literal",
                "funcscope": "_.random",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.random~lower",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1994,
                2017
            ],
            "filename": "random.js",
            "lineno": 69,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016401",
                "name": "upper",
                "type": "CallExpression",
                "funcscope": "_.random",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.random~upper",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2060,
                2072
            ],
            "filename": "random.js",
            "lineno": 73,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016412",
                "name": "temp",
                "type": "Identifier",
                "value": "lower"
            }
        },
        "undocumented": true,
        "name": "temp",
        "longname": "_.random~temp",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2078,
                2091
            ],
            "filename": "random.js",
            "lineno": 74,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016416",
                "name": "lower",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "upper",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lower",
        "longname": "_.random~lower",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2097,
                2109
            ],
            "filename": "random.js",
            "lineno": 75,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016420",
                "name": "upper",
                "type": "Identifier",
                "funcscope": "_.random",
                "value": "temp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "upper",
        "longname": "_.random~upper",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2167,
                2188
            ],
            "filename": "random.js",
            "lineno": 78,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016435",
                "name": "rand",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "rand",
        "longname": "_.random~rand",
        "kind": "member",
        "memberof": "_.random",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2346,
                2369
            ],
            "filename": "random.js",
            "lineno": 84,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016468",
                "name": "module.exports",
                "type": "Identifier",
                "value": "random",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "range.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016476",
                "name": "createRange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRange",
        "longname": "createRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @author array\n * @returns {array} Returns the range of numbers.\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */",
        "meta": {
            "range": [
                1104,
                1125
            ],
            "filename": "range.js",
            "lineno": 46,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016484",
                "name": "range",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. A step of `-1` is used if a negative\n`start` is specified without an `end` or `step`. If `end` is not specified,\nit's set to `start` with `start` then set to `0`.\n\n**Note:** JavaScript follows the IEEE-754 standard for resolving\nfloating-point values which can produce unexpected results.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The start of the range.",
                "name": "start"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The end of the range.",
                "name": "end"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The value to increment or decrement by.",
                "name": "step"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the range of numbers."
            }
        ],
        "examples": [
            "_.range(4);\n// => [0, 1, 2, 3]\n\n_.range(-4);\n// => [0, -1, -2, -3]\n\n_.range(1, 5);\n// => [1, 2, 3, 4]\n\n_.range(0, 20, 5);\n// => [0, 5, 10, 15]\n\n_.range(0, -4, -1);\n// => [0, -1, -2, -3]\n\n_.range(1, 4, 0);\n// => [1, 1, 1]\n\n_.range(0);\n// => []"
        ],
        "name": "range",
        "longname": "_.range",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1128,
                1150
            ],
            "filename": "range.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016489",
                "name": "module.exports",
                "type": "Identifier",
                "value": "range",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "rangeRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016497",
                "name": "createRange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRange",
        "longname": "createRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.range` except that it populates values in\n * descending order.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.range\n * @example\n *\n * _.rangeRight(4);\n * // => [3, 2, 1, 0]\n *\n * _.rangeRight(-4);\n * // => [-3, -2, -1, 0]\n *\n * _.rangeRight(1, 5);\n * // => [4, 3, 2, 1]\n *\n * _.rangeRight(0, 20, 5);\n * // => [15, 10, 5, 0]\n *\n * _.rangeRight(0, -4, -1);\n * // => [-3, -2, -1, 0]\n *\n * _.rangeRight(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.rangeRight(0);\n * // => []\n */",
        "meta": {
            "range": [
                824,
                854
            ],
            "filename": "rangeRight.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016505",
                "name": "rangeRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.range` except that it populates values in\ndescending order.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The start of the range.",
                "name": "start"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The end of the range.",
                "name": "end"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The value to increment or decrement by.",
                "name": "step"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the range of numbers."
            }
        ],
        "see": [
            "_.inRange, _.range"
        ],
        "examples": [
            "_.rangeRight(4);\n// => [3, 2, 1, 0]\n\n_.rangeRight(-4);\n// => [-3, -2, -1, 0]\n\n_.rangeRight(1, 5);\n// => [4, 3, 2, 1]\n\n_.rangeRight(0, 20, 5);\n// => [15, 10, 5, 0]\n\n_.rangeRight(0, -4, -1);\n// => [-3, -2, -1, 0]\n\n_.rangeRight(1, 4, 0);\n// => [1, 1, 1]\n\n_.rangeRight(0);\n// => []"
        ],
        "name": "rangeRight",
        "longname": "_.rangeRight",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                857,
                884
            ],
            "filename": "rangeRight.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016511",
                "name": "module.exports",
                "type": "Identifier",
                "value": "rangeRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                39
            ],
            "filename": "readFile.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016521",
                "name": "fs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fs",
        "longname": "fs",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                112
            ],
            "filename": "readFile.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016527",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "file"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "rearg.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016544",
                "name": "createWrap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createWrap",
        "longname": "createWrap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                98
            ],
            "filename": "rearg.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016549",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to compose bitmasks for function metadata. */",
        "meta": {
            "range": [
                175,
                196
            ],
            "filename": "rearg.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016557",
                "name": "WRAP_REARG_FLAG",
                "type": "Literal",
                "value": 256
            }
        },
        "description": "Used to compose bitmasks for function metadata.",
        "name": "WRAP_REARG_FLAG",
        "longname": "WRAP_REARG_FLAG",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with arguments arranged according\n * to the specified `indexes` where the argument value at the first index is\n * provided as the first argument, the argument value at the second index is\n * provided as the second argument, and so on.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to rearrange arguments for.\n * @param {...(number|number[])} indexes The arranged argument indexes.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var rearged = _.rearg(function(a, b, c) {\n *   return [a, b, c];\n * }, [2, 0, 1]);\n *\n * rearged('b', 'c', 'a')\n * // => ['a', 'b', 'c']\n */",
        "meta": {
            "range": [
                898,
                1029
            ],
            "filename": "rearg.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016561",
                "name": "rearg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates a function that invokes `func` with arguments arranged according\nto the specified `indexes` where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to rearrange arguments for.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number",
                        "Array.<number>"
                    ]
                },
                "variable": true,
                "description": "The arranged argument indexes.",
                "name": "indexes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, [2, 0, 1]);\n\nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']"
        ],
        "name": "rearg",
        "longname": "_.rearg",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1032,
                1054
            ],
            "filename": "rearg.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016579",
                "name": "module.exports",
                "type": "Identifier",
                "value": "rearg",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "reduce.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016587",
                "name": "arrayReduce",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayReduce",
        "longname": "arrayReduce",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                100
            ],
            "filename": "reduce.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016592",
                "name": "baseEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseEach",
        "longname": "baseEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                156
            ],
            "filename": "reduce.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016597",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                208
            ],
            "filename": "reduce.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016602",
                "name": "baseReduce",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseReduce",
        "longname": "baseReduce",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                214,
                244
            ],
            "filename": "reduce.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016607",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */",
        "meta": {
            "range": [
                1586,
                1830
            ],
            "filename": "reduce.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016614",
                "name": "reduce",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee",
                    "accumulator"
                ]
            },
            "vars": {
                "func": "_.reduce~func",
                "initAccum": "_.reduce~initAccum"
            }
        },
        "description": "Reduces `collection` to a value which is the accumulated result of running\neach element in `collection` thru `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not given, the first element of `collection` is used as the initial\nvalue. The iteratee is invoked with four arguments:\n(accumulator, value, index|key, collection).\n\nMany lodash methods are guarded to work as iteratees for methods like\n`_.reduce`, `_.reduceRight`, and `_.transform`.\n\nThe guarded methods are:\n`assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\nand `sortBy`",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "description": "The initial value.",
                "name": "accumulator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the accumulated value."
            }
        ],
        "see": [
            "_.reduceRight"
        ],
        "examples": [
            "_.reduce([1, 2], function(sum, n) {\n  return sum + n;\n}, 0);\n// => 3\n\n_.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n  return result;\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)"
        ],
        "name": "reduce",
        "longname": "_.reduce",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1645,
                1698
            ],
            "filename": "reduce.js",
            "lineno": 47,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016621",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.reduce~func",
        "kind": "member",
        "memberof": "_.reduce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1706,
                1738
            ],
            "filename": "reduce.js",
            "lineno": 48,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016629",
                "name": "initAccum",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "initAccum",
        "longname": "_.reduce~initAccum",
        "kind": "member",
        "memberof": "_.reduce",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1832,
                1855
            ],
            "filename": "reduce.js",
            "lineno": 53,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016648",
                "name": "module.exports",
                "type": "Identifier",
                "value": "reduce",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "reduceRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016656",
                "name": "arrayReduceRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayReduceRight",
        "longname": "arrayReduceRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                68,
                120
            ],
            "filename": "reduceRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016661",
                "name": "baseEachRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseEachRight",
        "longname": "baseEachRight",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                126,
                176
            ],
            "filename": "reduceRight.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016666",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                182,
                228
            ],
            "filename": "reduceRight.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016671",
                "name": "baseReduce",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseReduce",
        "longname": "baseReduce",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                234,
                264
            ],
            "filename": "reduceRight.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016676",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.reduce` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduce\n * @example\n *\n * var array = [[0, 1], [2, 3], [4, 5]];\n *\n * _.reduceRight(array, function(flattened, other) {\n *   return flattened.concat(other);\n * }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */",
        "meta": {
            "range": [
                916,
                1175
            ],
            "filename": "reduceRight.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016683",
                "name": "reduceRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "iteratee",
                    "accumulator"
                ]
            },
            "vars": {
                "func": "_.reduceRight~func",
                "initAccum": "_.reduceRight~initAccum"
            }
        },
        "description": "This method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "description": "The initial value.",
                "name": "accumulator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the accumulated value."
            }
        ],
        "see": [
            "_.reduce"
        ],
        "examples": [
            "var array = [[0, 1], [2, 3], [4, 5]];\n\n_.reduceRight(array, function(flattened, other) {\n  return flattened.concat(other);\n}, []);\n// => [4, 5, 2, 3, 0, 1]"
        ],
        "name": "reduceRight",
        "longname": "_.reduceRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                980,
                1038
            ],
            "filename": "reduceRight.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016690",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.reduceRight~func",
        "kind": "member",
        "memberof": "_.reduceRight",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1046,
                1078
            ],
            "filename": "reduceRight.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016698",
                "name": "initAccum",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "initAccum",
        "longname": "_.reduceRight~initAccum",
        "kind": "member",
        "memberof": "_.reduceRight",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1177,
                1205
            ],
            "filename": "reduceRight.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016717",
                "name": "module.exports",
                "type": "Identifier",
                "value": "reduceRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "reject.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016725",
                "name": "arrayFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayFilter",
        "longname": "arrayFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                104
            ],
            "filename": "reject.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016730",
                "name": "baseFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFilter",
        "longname": "baseFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                160
            ],
            "filename": "reject.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016735",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                166,
                196
            ],
            "filename": "reject.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016740",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                202,
                230
            ],
            "filename": "reject.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016745",
                "name": "negate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "negate",
        "longname": "negate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */",
        "meta": {
            "range": [
                1266,
                1432
            ],
            "filename": "reject.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016752",
                "name": "reject",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "predicate"
                ]
            },
            "vars": {
                "func": "_.reject~func"
            }
        },
        "description": "The opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new filtered array."
            }
        ],
        "see": [
            "_.filter"
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n_.reject(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.reject(users, { 'age': 40, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.reject(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.reject(users, 'active');\n// => objects for ['barney']"
        ],
        "name": "reject",
        "longname": "_.reject",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1313,
                1366
            ],
            "filename": "reject.js",
            "lineno": 44,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016758",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.reject~func",
        "kind": "member",
        "memberof": "_.reject",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1434,
                1457
            ],
            "filename": "reject.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016777",
                "name": "module.exports",
                "type": "Identifier",
                "value": "reject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "remove.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016785",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                106
            ],
            "filename": "remove.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016790",
                "name": "basePullAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "basePullAt",
        "longname": "basePullAt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */",
        "meta": {
            "range": [
                904,
                1338
            ],
            "filename": "remove.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016797",
                "name": "remove",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate"
                ]
            },
            "vars": {
                "result": "_.remove~result",
                "index": "_.remove~index",
                "indexes": "_.remove~indexes",
                "length": "_.remove~length",
                "predicate": "_.remove~predicate",
                "value": "_.remove~value"
            }
        },
        "description": "Removes all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is invoked\nwith three arguments: (value, index, array).\n\n**Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\nto pull elements from an array by value.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of removed elements."
            }
        ],
        "examples": [
            "var array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n\nconsole.log(array);\n// => [1, 3]\n\nconsole.log(evens);\n// => [2, 4]"
        ],
        "name": "remove",
        "longname": "_.remove",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                946,
                957
            ],
            "filename": "remove.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016803",
                "name": "result",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.remove~result",
        "kind": "member",
        "memberof": "_.remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1022,
                1032
            ],
            "filename": "remove.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016817",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.remove~index",
        "kind": "member",
        "memberof": "_.remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1040,
                1052
            ],
            "filename": "remove.js",
            "lineno": 40,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016821",
                "name": "indexes",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "indexes",
        "longname": "_.remove~indexes",
        "kind": "member",
        "memberof": "_.remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1060,
                1081
            ],
            "filename": "remove.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016824",
                "name": "length",
                "type": "MemberExpression",
                "value": "array.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.remove~length",
        "kind": "member",
        "memberof": "_.remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1086,
                1124
            ],
            "filename": "remove.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016830",
                "name": "predicate",
                "type": "CallExpression",
                "funcscope": "_.remove",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "predicate",
        "longname": "_.remove~predicate",
        "kind": "member",
        "memberof": "_.remove",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1163,
                1183
            ],
            "filename": "remove.js",
            "lineno": 45,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016843",
                "name": "value",
                "type": "MemberExpression",
                "value": "array[undefined]"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.remove~value",
        "kind": "member",
        "memberof": "_.remove",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1340,
                1363
            ],
            "filename": "remove.js",
            "lineno": 55,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016875",
                "name": "module.exports",
                "type": "Identifier",
                "value": "remove",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "repeat.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016883",
                "name": "baseRepeat",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRepeat",
        "longname": "baseRepeat",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                110
            ],
            "filename": "repeat.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016888",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                150
            ],
            "filename": "repeat.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016893",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                156,
                188
            ],
            "filename": "repeat.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016898",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=1] The number of times to repeat the string.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */",
        "meta": {
            "range": [
                702,
                899
            ],
            "filename": "repeat.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016905",
                "name": "repeat",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "n": "_.repeat~n"
            }
        },
        "description": "Repeats the given string `n` times.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to repeat.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of times to repeat the string.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the repeated string."
            }
        ],
        "examples": [
            "_.repeat('*', 3);\n// => '***'\n\n_.repeat('abc', 2);\n// => 'abcabc'\n\n_.repeat('abc', 0);\n// => ''"
        ],
        "name": "repeat",
        "longname": "_.repeat",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                812,
                817
            ],
            "filename": "repeat.js",
            "lineno": 32,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016924",
                "name": "n",
                "type": "Literal",
                "funcscope": "_.repeat",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.repeat~n",
        "kind": "member",
        "memberof": "_.repeat",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                834,
                850
            ],
            "filename": "repeat.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016929",
                "name": "n",
                "type": "CallExpression",
                "funcscope": "_.repeat",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.repeat~n",
        "kind": "member",
        "memberof": "_.repeat",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                901,
                924
            ],
            "filename": "repeat.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016942",
                "name": "module.exports",
                "type": "Identifier",
                "value": "repeat",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "replace.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016950",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */",
        "meta": {
            "range": [
                590,
                741
            ],
            "filename": "replace.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016957",
                "name": "replace",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "args": "_.replace~args",
                "string": "_.replace~string"
            }
        },
        "description": "Replaces matches for `pattern` in `string` with `replacement`.\n\n**Note:** This method is based on\n[`String#replace`](https://mdn.io/String/replace).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to modify.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "RegExp",
                        "string"
                    ]
                },
                "description": "The pattern to replace.",
                "name": "pattern"
            },
            {
                "type": {
                    "names": [
                        "function",
                        "string"
                    ]
                },
                "description": "The match replacement.",
                "name": "replacement"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the modified string."
            }
        ],
        "examples": [
            "_.replace('Hi Fred', 'Fred', 'Barney');\n// => 'Hi Barney'"
        ],
        "name": "replace",
        "longname": "_.replace",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                617,
                633
            ],
            "filename": "replace.js",
            "lineno": 25,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016961",
                "name": "args",
                "type": "Identifier",
                "value": "arguments"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "_.replace~args",
        "kind": "member",
        "memberof": "_.replace",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                641,
                667
            ],
            "filename": "replace.js",
            "lineno": 26,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016964",
                "name": "string",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.replace~string",
        "kind": "member",
        "memberof": "_.replace",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                743,
                767
            ],
            "filename": "replace.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016990",
                "name": "module.exports",
                "type": "Identifier",
                "value": "replace",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "rest.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100016998",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                86
            ],
            "filename": "rest.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017003",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                140,
                179
            ],
            "filename": "rest.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017011",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */",
        "meta": {
            "range": [
                980,
                1181
            ],
            "filename": "rest.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017014",
                "name": "rest",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "start"
                ]
            },
            "vars": {
                "start": "_.rest~start"
            }
        },
        "description": "Creates a function that invokes `func` with the `this` binding of the\ncreated function and arguments from `start` and beyond provided as\nan array.\n\n**Note:** This method is based on the\n[rest parameter](https://mdn.io/rest_parameters).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to apply a rest parameter to.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "func.length-1",
                "description": "The start position of the rest parameter.",
                "name": "start"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var say = _.rest(function(what, names) {\n  return what + ' ' + _.initial(names).join(', ') +\n    (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n});\n\nsay('hello', 'fred', 'barney', 'pebbles');\n// => 'hello fred, barney, & pebbles'"
        ],
        "name": "rest",
        "longname": "_.rest",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1092,
                1146
            ],
            "filename": "rest.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017030",
                "name": "start",
                "type": "ConditionalExpression",
                "funcscope": "_.rest",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.rest~start",
        "kind": "member",
        "memberof": "_.rest",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1183,
                1204
            ],
            "filename": "rest.js",
            "lineno": 42,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017046",
                "name": "module.exports",
                "type": "Identifier",
                "value": "rest",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "result.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017054",
                "name": "castPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castPath",
        "longname": "castPath",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                88
            ],
            "filename": "result.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017059",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                130
            ],
            "filename": "result.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017064",
                "name": "toKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toKey",
        "longname": "toKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */",
        "meta": {
            "range": [
                958,
                1470
            ],
            "filename": "result.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017071",
                "name": "result",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path",
                    "defaultValue"
                ]
            },
            "vars": {
                "path": "_.result~path",
                "index": "_.result~index",
                "length": "_.result~length",
                "object": "_.result~object",
                "value": "_.result~value"
            }
        },
        "description": "This method is like `_.get` except that if the resolved value is a\nfunction it's invoked with the `this` binding of its parent object and\nits result is returned.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to resolve.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "description": "The value returned for `undefined` resolved values.",
                "name": "defaultValue"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the resolved value."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\n_.result(object, 'a[0].b.c1');\n// => 3\n\n_.result(object, 'a[0].b.c2');\n// => 4\n\n_.result(object, 'a[0].b.c3', 'default');\n// => 'default'\n\n_.result(object, 'a[0].b.c3', _.constant('default'));\n// => 'default'"
        ],
        "name": "result",
        "longname": "_.result",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1006,
                1035
            ],
            "filename": "result.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017078",
                "name": "path",
                "type": "CallExpression",
                "funcscope": "_.result",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "_.result~path",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1044,
                1054
            ],
            "filename": "result.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017085",
                "name": "index",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.result~index",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1062,
                1082
            ],
            "filename": "result.js",
            "lineno": 40,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017089",
                "name": "length",
                "type": "MemberExpression",
                "value": "path.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.result~length",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1158,
                1168
            ],
            "filename": "result.js",
            "lineno": 44,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017099",
                "name": "length",
                "type": "Literal",
                "funcscope": "_.result",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.result~length",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1174,
                1192
            ],
            "filename": "result.js",
            "lineno": 45,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017103",
                "name": "object",
                "type": "Identifier",
                "funcscope": "_.result",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "object",
        "longname": "_.result~object",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1235,
                1298
            ],
            "filename": "result.js",
            "lineno": 48,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017113",
                "name": "value",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.result~value",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1337,
                1351
            ],
            "filename": "result.js",
            "lineno": 50,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017133",
                "name": "index",
                "type": "Identifier",
                "funcscope": "_.result",
                "value": "length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.result~index",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1359,
                1379
            ],
            "filename": "result.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017137",
                "name": "value",
                "type": "Identifier",
                "funcscope": "_.result",
                "value": "defaultValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.result~value",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1391,
                1446
            ],
            "filename": "result.js",
            "lineno": 53,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017141",
                "name": "object",
                "type": "ConditionalExpression",
                "funcscope": "_.result",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "object",
        "longname": "_.result~object",
        "kind": "member",
        "memberof": "_.result",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1472,
                1495
            ],
            "filename": "result.js",
            "lineno": 58,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017156",
                "name": "module.exports",
                "type": "Identifier",
                "value": "result",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                63,
                91
            ],
            "filename": "reverse.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017166",
                "name": "arrayProto",
                "type": "MemberExpression",
                "value": "Array.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "arrayProto",
        "longname": "arrayProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                187,
                221
            ],
            "filename": "reverse.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017172",
                "name": "nativeReverse",
                "type": "MemberExpression",
                "value": "arrayProto.reverse"
            }
        },
        "undocumented": true,
        "name": "nativeReverse",
        "longname": "nativeReverse",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {array} array The array to modify.\n * @author array\n * @returns {reversed} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */",
        "meta": {
            "range": [
                764,
                851
            ],
            "filename": "reverse.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017177",
                "name": "reverse",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Reverses `array` so that the first element becomes the last, the second\nelement becomes the second to last, and so on.\n\n**Note:** This method mutates `array` and is based on\n[`Array#reverse`](https://mdn.io/Array/reverse).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to modify.",
                "name": "array"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "reversed"
                    ]
                },
                "description": "Returns `array`."
            }
        ],
        "examples": [
            "var array = [1, 2, 3];\n\n_.reverse(array);\n// => [3, 2, 1]\n\nconsole.log(array);\n// => [3, 2, 1]"
        ],
        "name": "reverse",
        "longname": "_.reverse",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                853,
                877
            ],
            "filename": "reverse.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017193",
                "name": "module.exports",
                "type": "Identifier",
                "value": "reverse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "round.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017201",
                "name": "createRound",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createRound",
        "longname": "createRound",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} precision A precision to round to.\n * @author number\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */",
        "meta": {
            "range": [
                482,
                510
            ],
            "filename": "round.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017209",
                "name": "round",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Computes `number` rounded to `precision`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.10.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number to round.",
                "name": "number"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "A precision to round to.",
                "name": "precision"
            }
        ],
        "author": [
            "number"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the rounded number."
            }
        ],
        "examples": [
            "_.round(4.006);\n// => 4\n\n_.round(4.006, 2);\n// => 4.01\n\n_.round(4060, -2);\n// => 4100"
        ],
        "name": "round",
        "longname": "_.round",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                513,
                535
            ],
            "filename": "round.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017215",
                "name": "module.exports",
                "type": "Identifier",
                "value": "round",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "sample.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017223",
                "name": "arraySample",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arraySample",
        "longname": "arraySample",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                104
            ],
            "filename": "sample.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017228",
                "name": "baseSample",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSample",
        "longname": "baseSample",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                140
            ],
            "filename": "sample.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017233",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {array} array The collection to sample.\n * @author element\n * @returns {random} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */",
        "meta": {
            "range": [
                450,
                569
            ],
            "filename": "sample.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017240",
                "name": "sample",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection"
                ]
            },
            "vars": {
                "func": "_.sample~func"
            }
        },
        "description": "Gets a random element from `collection`.",
        "scope": "static",
        "memberof": "_",
        "since": "2.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The collection to sample.",
                "name": "array"
            }
        ],
        "author": [
            "element"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "random"
                    ]
                },
                "description": "Returns the random element."
            }
        ],
        "examples": [
            "_.sample([1, 2, 3, 4]);\n// => 2"
        ],
        "name": "sample",
        "longname": "_.sample",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                486,
                539
            ],
            "filename": "sample.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017245",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.sample~func",
        "kind": "member",
        "memberof": "_.sample",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                571,
                594
            ],
            "filename": "sample.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017258",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sample",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "sampleSize.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017266",
                "name": "arraySampleSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arraySampleSize",
        "longname": "arraySampleSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                120
            ],
            "filename": "sampleSize.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017271",
                "name": "baseSampleSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSampleSize",
        "longname": "baseSampleSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                126,
                156
            ],
            "filename": "sampleSize.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017276",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                216
            ],
            "filename": "sampleSize.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017281",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                222,
                256
            ],
            "filename": "sampleSize.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017286",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */",
        "meta": {
            "range": [
                813,
                1079
            ],
            "filename": "sampleSize.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017293",
                "name": "sampleSize",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "n": "_.sampleSize~n",
                "func": "_.sampleSize~func"
            }
        },
        "description": "Gets `n` random elements at unique keys from `collection` up to the\nsize of `collection`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to sample.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of elements to sample.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the random elements."
            }
        ],
        "examples": [
            "_.sampleSize([1, 2, 3], 2);\n// => [3, 1]\n\n_.sampleSize([1, 2, 3], 4);\n// => [2, 3, 1]"
        ],
        "name": "sampleSize",
        "longname": "_.sampleSize",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                935,
                940
            ],
            "filename": "sampleSize.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017312",
                "name": "n",
                "type": "Literal",
                "funcscope": "_.sampleSize",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.sampleSize~n",
        "kind": "member",
        "memberof": "_.sampleSize",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                957,
                973
            ],
            "filename": "sampleSize.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017317",
                "name": "n",
                "type": "CallExpression",
                "funcscope": "_.sampleSize",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.sampleSize~n",
        "kind": "member",
        "memberof": "_.sampleSize",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                985,
                1046
            ],
            "filename": "sampleSize.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017323",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.sampleSize~func",
        "kind": "member",
        "memberof": "_.sampleSize",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1081,
                1108
            ],
            "filename": "sampleSize.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017337",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sampleSize",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                505
            ],
            "filename": "seq.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017345",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                49
            ],
            "filename": "seq.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017350",
                "name": "at",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "at",
        "longname": "module.exports.at",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53,
                80
            ],
            "filename": "seq.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017354",
                "name": "chain",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "module.exports.chain",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                84,
                113
            ],
            "filename": "seq.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017358",
                "name": "commit",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "commit",
        "longname": "module.exports.commit",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                117,
                153
            ],
            "filename": "seq.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017362",
                "name": "lodash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lodash",
        "longname": "module.exports.lodash",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                157,
                182
            ],
            "filename": "seq.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017366",
                "name": "next",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "module.exports.next",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                186,
                213
            ],
            "filename": "seq.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017370",
                "name": "plant",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "plant",
        "longname": "module.exports.plant",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                217,
                255
            ],
            "filename": "seq.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017374",
                "name": "reverse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reverse",
        "longname": "module.exports.reverse",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                259,
                282
            ],
            "filename": "seq.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017378",
                "name": "tap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tap",
        "longname": "module.exports.tap",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                286,
                311
            ],
            "filename": "seq.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017382",
                "name": "thru",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "thru",
        "longname": "module.exports.thru",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                315,
                352
            ],
            "filename": "seq.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017386",
                "name": "toIterator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toIterator",
        "longname": "module.exports.toIterator",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                356,
                385
            ],
            "filename": "seq.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017390",
                "name": "toJSON",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toJSON",
        "longname": "module.exports.toJSON",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                389,
                423
            ],
            "filename": "seq.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017394",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "module.exports.value",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                427,
                458
            ],
            "filename": "seq.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017398",
                "name": "valueOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "valueOf",
        "longname": "module.exports.valueOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                462,
                503
            ],
            "filename": "seq.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017402",
                "name": "wrapperChain",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "wrapperChain",
        "longname": "module.exports.wrapperChain",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "set.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017409",
                "name": "baseSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSet",
        "longname": "baseSet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */",
        "meta": {
            "range": [
                858,
                960
            ],
            "filename": "set.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017416",
                "name": "set",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path",
                    "value"
                ]
            }
        },
        "description": "Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\nit's created. Arrays are created for missing index properties while objects\nare created for all other missing properties. Use `_.setWith` to customize\n`path` creation.\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.7.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to modify.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to set.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to set.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.set(object, 'a[0].b.c', 4);\nconsole.log(object.a[0].b.c);\n// => 4\n\n_.set(object, ['x', '0', 'y', 'z'], 5);\nconsole.log(object.x[0].y.z);\n// => 5"
        ],
        "name": "set",
        "longname": "_.set",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                962,
                982
            ],
            "filename": "set.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017434",
                "name": "module.exports",
                "type": "Identifier",
                "value": "set",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "setWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017442",
                "name": "baseSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSet",
        "longname": "baseSet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */",
        "meta": {
            "range": [
                848,
                1051
            ],
            "filename": "setWith.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017449",
                "name": "setWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path",
                    "value",
                    "customizer"
                ]
            },
            "vars": {
                "customizer": "_.setWith~customizer"
            }
        },
        "description": "This method is like `_.set` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to modify.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to set.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to set.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize assigned values.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "var object = {};\n\n_.setWith(object, '[0][1]', 'a', Object);\n// => { '0': { '1': 'a' } }"
        ],
        "name": "setWith",
        "longname": "_.setWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                902,
                971
            ],
            "filename": "setWith.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017457",
                "name": "customizer",
                "type": "ConditionalExpression",
                "funcscope": "_.setWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "customizer",
        "longname": "_.setWith~customizer",
        "kind": "member",
        "memberof": "_.setWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1053,
                1077
            ],
            "filename": "setWith.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017479",
                "name": "module.exports",
                "type": "Identifier",
                "value": "setWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "shuffle.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017487",
                "name": "arrayShuffle",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayShuffle",
        "longname": "arrayShuffle",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                108
            ],
            "filename": "shuffle.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017492",
                "name": "baseShuffle",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseShuffle",
        "longname": "baseShuffle",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                144
            ],
            "filename": "shuffle.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017497",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */",
        "meta": {
            "range": [
                561,
                683
            ],
            "filename": "shuffle.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017504",
                "name": "shuffle",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection"
                ]
            },
            "vars": {
                "func": "_.shuffle~func"
            }
        },
        "description": "Creates an array of shuffled values, using a version of the\n[Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to shuffle.",
                "name": "collection"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new shuffled array."
            }
        ],
        "examples": [
            "_.shuffle([1, 2, 3, 4]);\n// => [4, 1, 3, 2]"
        ],
        "name": "shuffle",
        "longname": "_.shuffle",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                598,
                653
            ],
            "filename": "shuffle.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017509",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.shuffle~func",
        "kind": "member",
        "memberof": "_.shuffle",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                685,
                709
            ],
            "filename": "shuffle.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017522",
                "name": "module.exports",
                "type": "Identifier",
                "value": "shuffle",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "size.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017530",
                "name": "baseKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseKeys",
        "longname": "baseKeys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                90
            ],
            "filename": "size.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017535",
                "name": "getTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getTag",
        "longname": "getTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                134
            ],
            "filename": "size.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017540",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                140,
                172
            ],
            "filename": "size.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017545",
                "name": "isString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isString",
        "longname": "isString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                178,
                224
            ],
            "filename": "size.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017550",
                "name": "stringSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringSize",
        "longname": "stringSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                290,
                313
            ],
            "filename": "size.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017558",
                "name": "mapTag",
                "type": "Literal",
                "value": "[object Map]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "mapTag",
        "longname": "mapTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                319,
                342
            ],
            "filename": "size.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017561",
                "name": "setTag",
                "type": "Literal",
                "value": "[object Set]"
            }
        },
        "undocumented": true,
        "name": "setTag",
        "longname": "setTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */",
        "meta": {
            "range": [
                822,
                1154
            ],
            "filename": "size.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017564",
                "name": "size",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection"
                ]
            },
            "vars": {
                "tag": "_.size~tag"
            }
        },
        "description": "Gets the size of `collection` by returning its length for array-like\nvalues or the number of own enumerable string keyed properties for objects.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object",
                        "string"
                    ]
                },
                "description": "The collection to inspect.",
                "name": "collection"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the collection size."
            }
        ],
        "examples": [
            "_.size([1, 2, 3]);\n// => 3\n\n_.size({ 'a': 1, 'b': 2 });\n// => 2\n\n_.size('pebbles');\n// => 7"
        ],
        "name": "size",
        "longname": "_.size",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1017,
                1041
            ],
            "filename": "size.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017592",
                "name": "tag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tag",
        "longname": "_.size~tag",
        "kind": "member",
        "memberof": "_.size",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1156,
                1177
            ],
            "filename": "size.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017617",
                "name": "module.exports",
                "type": "Identifier",
                "value": "size",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "slice.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017625",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "slice.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017630",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                148
            ],
            "filename": "slice.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017635",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */",
        "meta": {
            "range": [
                647,
                1039
            ],
            "filename": "slice.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017642",
                "name": "slice",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "start",
                    "end"
                ]
            },
            "vars": {
                "length": "_.slice~length",
                "start": "_.slice~start",
                "end": "_.slice~end"
            }
        },
        "description": "Creates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This method is used instead of\n[`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\nreturned.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to slice.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The start position.",
                "name": "start"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": "array.length",
                "description": "The end position.",
                "name": "end"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "name": "slice",
        "longname": "_.slice",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                689,
                730
            ],
            "filename": "slice.js",
            "lineno": 24,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017649",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.slice~length",
        "kind": "member",
        "memberof": "_.slice",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                848,
                857
            ],
            "filename": "slice.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017680",
                "name": "start",
                "type": "Literal",
                "funcscope": "_.slice",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.slice~start",
        "kind": "member",
        "memberof": "_.slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                863,
                875
            ],
            "filename": "slice.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017684",
                "name": "end",
                "type": "Identifier",
                "funcscope": "_.slice",
                "value": "length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.slice~end",
        "kind": "member",
        "memberof": "_.slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                894,
                938
            ],
            "filename": "slice.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017689",
                "name": "start",
                "type": "ConditionalExpression",
                "funcscope": "_.slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.slice~start",
        "kind": "member",
        "memberof": "_.slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                944,
                993
            ],
            "filename": "slice.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017700",
                "name": "end",
                "type": "ConditionalExpression",
                "funcscope": "_.slice",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.slice~end",
        "kind": "member",
        "memberof": "_.slice",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1041,
                1063
            ],
            "filename": "slice.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017717",
                "name": "module.exports",
                "type": "Identifier",
                "value": "slice",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "snakeCase.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017725",
                "name": "createCompounder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCompounder",
        "longname": "createCompounder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string` to\n * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} string The string to convert.\n * @author string\n * @returns {snake_cased} Returns the snake cased string.\n * @example\n *\n * _.snakeCase('Foo Bar');\n * // => 'foo_bar'\n *\n * _.snakeCase('fooBar');\n * // => 'foo_bar'\n *\n * _.snakeCase('--FOO-BAR--');\n * // => 'foo_bar'\n */",
        "meta": {
            "range": [
                527,
                649
            ],
            "filename": "snakeCase.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017733",
                "name": "snakeCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts `string` to\n[snake case](https://en.wikipedia.org/wiki/Snake_case).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "snake_cased"
                    ]
                },
                "description": "Returns the snake cased string."
            }
        ],
        "examples": [
            "_.snakeCase('Foo Bar');\n// => 'foo_bar'\n\n_.snakeCase('fooBar');\n// => 'foo_bar'\n\n_.snakeCase('--FOO-BAR--');\n// => 'foo_bar'"
        ],
        "name": "snakeCase",
        "longname": "_.snakeCase",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                652,
                678
            ],
            "filename": "snakeCase.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017755",
                "name": "module.exports",
                "type": "Identifier",
                "value": "snakeCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "some.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017763",
                "name": "arraySome",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arraySome",
        "longname": "arraySome",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                104
            ],
            "filename": "some.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017768",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                152
            ],
            "filename": "some.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017773",
                "name": "baseSome",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSome",
        "longname": "baseSome",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                158,
                188
            ],
            "filename": "some.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017778",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                194,
                248
            ],
            "filename": "some.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017783",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */",
        "meta": {
            "range": [
                1381,
                1634
            ],
            "filename": "some.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017790",
                "name": "some",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "collection",
                    "predicate",
                    "guard"
                ]
            },
            "vars": {
                "func": "_.some~func",
                "predicate": "_.some~predicate"
            }
        },
        "description": "Checks if `predicate` returns truthy for **any** element of `collection`.\nIteration is stopped once `predicate` returns truthy. The predicate is\ninvoked with three arguments: (value, index|key, collection).",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "collection"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if any element passes the predicate check,\n else `false`."
            }
        ],
        "examples": [
            "_.some([null, 0, 'yes', false], Boolean);\n// => true\n\nvar users = [\n  { 'user': 'barney', 'active': true },\n  { 'user': 'fred',   'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.some(users, { 'user': 'barney', 'active': false });\n// => false\n\n// The `_.matchesProperty` iteratee shorthand.\n_.some(users, ['active', false]);\n// => true\n\n// The `_.property` iteratee shorthand.\n_.some(users, 'active');\n// => true"
        ],
        "name": "some",
        "longname": "_.some",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1433,
                1482
            ],
            "filename": "some.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017797",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.some~func",
        "kind": "member",
        "memberof": "_.some",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1551,
                1572
            ],
            "filename": "some.js",
            "lineno": 48,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017815",
                "name": "predicate",
                "type": "Identifier",
                "funcscope": "_.some",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "predicate",
        "longname": "_.some~predicate",
        "kind": "member",
        "memberof": "_.some",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1636,
                1657
            ],
            "filename": "some.js",
            "lineno": 53,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017827",
                "name": "module.exports",
                "type": "Identifier",
                "value": "some",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "sortBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017835",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                104
            ],
            "filename": "sortBy.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017840",
                "name": "baseOrderBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseOrderBy",
        "longname": "baseOrderBy",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                150
            ],
            "filename": "sortBy.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017845",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                208
            ],
            "filename": "sortBy.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017850",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {array} array The collection to iterate over.\n * @param {function} function\n * @author array\n * @returns {sorted} A sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */",
        "meta": {
            "range": [
                1195,
                1615
            ],
            "filename": "sortBy.js",
            "lineno": 37,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017858",
                "name": "sortBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection thru each iteratee. This method\nperforms a stable sort, that is, it preserves the original sort order of\nequal elements. The iteratees are invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Collection",
                "value": "Collection"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The collection to iterate over.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "function"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "sorted"
                    ]
                },
                "description": "A sorted array."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 34 }\n];\n\n_.sortBy(users, [function(o) { return o.user; }]);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\n_.sortBy(users, ['user', 'age']);\n// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]"
        ],
        "name": "sortBy",
        "longname": "_.sortBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1300,
                1325
            ],
            "filename": "sortBy.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017874",
                "name": "length",
                "type": "MemberExpression",
                "value": "iteratees.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1409,
                1423
            ],
            "filename": "sortBy.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017895",
                "name": "iteratees",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratees",
        "longname": "<anonymous>~iteratees",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1516,
                1542
            ],
            "filename": "sortBy.js",
            "lineno": 45,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017916",
                "name": "iteratees",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"iteratees[0]\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratees",
        "longname": "<anonymous>~iteratees",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1618,
                1641
            ],
            "filename": "sortBy.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017932",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "sortedIndex.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017940",
                "name": "baseSortedIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedIndex",
        "longname": "baseSortedIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Uses a binary search to determine the lowest index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([30, 50], 40);\n * // => 1\n */",
        "meta": {
            "range": [
                540,
                618
            ],
            "filename": "sortedIndex.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017947",
                "name": "sortedIndex",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value"
                ]
            }
        },
        "description": "Uses a binary search to determine the lowest index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The sorted array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to evaluate.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index at which `value` should be inserted\n into `array`."
            }
        ],
        "examples": [
            "_.sortedIndex([30, 50], 40);\n// => 1"
        ],
        "name": "sortedIndex",
        "longname": "_.sortedIndex",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                620,
                648
            ],
            "filename": "sortedIndex.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017958",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "sortedIndexBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017966",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                120
            ],
            "filename": "sortedIndexBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017971",
                "name": "baseSortedIndexBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedIndexBy",
        "longname": "baseSortedIndexBy",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.sortedIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n * // => 0\n */",
        "meta": {
            "range": [
                940,
                1059
            ],
            "filename": "sortedIndexBy.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017978",
                "name": "sortedIndexBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.sortedIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The sorted array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to evaluate.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index at which `value` should be inserted\n into `array`."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.sortedIndexBy(objects, { 'x': 4 }, 'x');\n// => 0"
        ],
        "name": "sortedIndexBy",
        "longname": "_.sortedIndexBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1061,
                1091
            ],
            "filename": "sortedIndexBy.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100017994",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedIndexBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "sortedIndexOf.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018002",
                "name": "baseSortedIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedIndex",
        "longname": "baseSortedIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                86
            ],
            "filename": "sortedIndexOf.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018007",
                "name": "eq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "eq",
        "longname": "eq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.indexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n * // => 1\n */",
        "meta": {
            "range": [
                504,
                752
            ],
            "filename": "sortedIndexOf.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018014",
                "name": "sortedIndexOf",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value"
                ]
            },
            "vars": {
                "length": "_.sortedIndexOf~length",
                "index": "_.sortedIndexOf~index"
            }
        },
        "description": "This method is like `_.indexOf` except that it performs a binary\nsearch on a sorted `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to search for.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index of the matched value, else `-1`."
            }
        ],
        "examples": [
            "_.sortedIndexOf([4, 5, 5, 5, 6], 5);\n// => 1"
        ],
        "name": "sortedIndexOf",
        "longname": "_.sortedIndexOf",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                549,
                590
            ],
            "filename": "sortedIndexOf.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018020",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.sortedIndexOf~length",
        "kind": "member",
        "memberof": "_.sortedIndexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                616,
                653
            ],
            "filename": "sortedIndexOf.js",
            "lineno": 25,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018034",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.sortedIndexOf~index",
        "kind": "member",
        "memberof": "_.sortedIndexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                754,
                784
            ],
            "filename": "sortedIndexOf.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018058",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedIndexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "sortedLastIndex.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018066",
                "name": "baseSortedIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedIndex",
        "longname": "baseSortedIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.sortedIndex` except that it returns the highest\n * index at which `value` should be inserted into `array` in order to\n * maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n * // => 4\n */",
        "meta": {
            "range": [
                579,
                667
            ],
            "filename": "sortedLastIndex.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018073",
                "name": "sortedLastIndex",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value"
                ]
            }
        },
        "description": "This method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The sorted array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to evaluate.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index at which `value` should be inserted\n into `array`."
            }
        ],
        "examples": [
            "_.sortedLastIndex([4, 5, 5, 5, 6], 5);\n// => 4"
        ],
        "name": "sortedLastIndex",
        "longname": "_.sortedLastIndex",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                669,
                701
            ],
            "filename": "sortedLastIndex.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018085",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedLastIndex",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "sortedLastIndexBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018093",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                120
            ],
            "filename": "sortedLastIndexBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018098",
                "name": "baseSortedIndexBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedIndexBy",
        "longname": "baseSortedIndexBy",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 1\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n * // => 1\n */",
        "meta": {
            "range": [
                952,
                1081
            ],
            "filename": "sortedLastIndexBy.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018105",
                "name": "sortedLastIndexBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.sortedLastIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The sorted array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to evaluate.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index at which `value` should be inserted\n into `array`."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 1\n\n// The `_.property` iteratee shorthand.\n_.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n// => 1"
        ],
        "name": "sortedLastIndexBy",
        "longname": "_.sortedLastIndexBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1083,
                1117
            ],
            "filename": "sortedLastIndexBy.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018122",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedLastIndexBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "sortedLastIndexOf.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018130",
                "name": "baseSortedIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedIndex",
        "longname": "baseSortedIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                86
            ],
            "filename": "sortedLastIndexOf.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018135",
                "name": "eq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "eq",
        "longname": "eq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n * // => 3\n */",
        "meta": {
            "range": [
                512,
                756
            ],
            "filename": "sortedLastIndexOf.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018142",
                "name": "sortedLastIndexOf",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "value"
                ]
            },
            "vars": {
                "length": "_.sortedLastIndexOf~length",
                "index": "_.sortedLastIndexOf~index"
            }
        },
        "description": "This method is like `_.lastIndexOf` except that it performs a binary\nsearch on a sorted `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to search for.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the index of the matched value, else `-1`."
            }
        ],
        "examples": [
            "_.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n// => 3"
        ],
        "name": "sortedLastIndexOf",
        "longname": "_.sortedLastIndexOf",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                561,
                602
            ],
            "filename": "sortedLastIndexOf.js",
            "lineno": 23,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018148",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.sortedLastIndexOf~length",
        "kind": "member",
        "memberof": "_.sortedLastIndexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                628,
                675
            ],
            "filename": "sortedLastIndexOf.js",
            "lineno": 25,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018162",
                "name": "index",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.sortedLastIndexOf~index",
        "kind": "member",
        "memberof": "_.sortedLastIndexOf",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                758,
                792
            ],
            "filename": "sortedLastIndexOf.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018185",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedLastIndexOf",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "sortedUniq.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018193",
                "name": "baseSortedUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedUniq",
        "longname": "baseSortedUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.uniq` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniq([1, 1, 2]);\n * // => [1, 2]\n */",
        "meta": {
            "range": [
                405,
                506
            ],
            "filename": "sortedUniq.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018200",
                "name": "sortedUniq",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "This method is like `_.uniq` except that it's designed and optimized\nfor sorted arrays.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new duplicate free array."
            }
        ],
        "examples": [
            "_.sortedUniq([1, 1, 2]);\n// => [1, 2]"
        ],
        "name": "sortedUniq",
        "longname": "_.sortedUniq",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                508,
                535
            ],
            "filename": "sortedUniq.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018216",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedUniq",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "sortedUniqBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018224",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                114
            ],
            "filename": "sortedUniqBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018229",
                "name": "baseSortedUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSortedUniq",
        "longname": "baseSortedUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.uniqBy` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n * // => [1.1, 2.3]\n */",
        "meta": {
            "range": [
                558,
                698
            ],
            "filename": "sortedUniqBy.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018236",
                "name": "sortedUniqBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.uniqBy` except that it's designed and optimized\nfor sorted arrays.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new duplicate free array."
            }
        ],
        "examples": [
            "_.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n// => [1.1, 2.3]"
        ],
        "name": "sortedUniqBy",
        "longname": "_.sortedUniqBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                700,
                729
            ],
            "filename": "sortedUniqBy.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018257",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sortedUniqBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "split.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018265",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "split.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018270",
                "name": "castSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castSlice",
        "longname": "castSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                156
            ],
            "filename": "split.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018275",
                "name": "hasUnicode",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasUnicode",
        "longname": "hasUnicode",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                216
            ],
            "filename": "split.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018280",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                222,
                254
            ],
            "filename": "split.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018285",
                "name": "isRegExp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isRegExp",
        "longname": "isRegExp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                260,
                312
            ],
            "filename": "split.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018290",
                "name": "stringToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToArray",
        "longname": "stringToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                318,
                350
            ],
            "filename": "split.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018295",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for the maximum length and index of an array. */",
        "meta": {
            "range": [
                444,
                473
            ],
            "filename": "split.js",
            "lineno": 12,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018303",
                "name": "MAX_ARRAY_LENGTH",
                "type": "Literal",
                "value": 4294967295
            }
        },
        "description": "Used as references for the maximum length and index of an array.",
        "name": "MAX_ARRAY_LENGTH",
        "longname": "MAX_ARRAY_LENGTH",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Splits `string` by `separator`.\n *\n * **Note:** This method is based on\n * [`String#split`](https://mdn.io/String/split).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} separator The separator pattern to split by.\n * @param {number} [limit] The length to truncate results to.\n * @returns {Array} Returns the string segments.\n * @example\n *\n * _.split('a-b-c', '-', 2);\n * // => ['a', 'b']\n */",
        "meta": {
            "range": [
                972,
                1584
            ],
            "filename": "split.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018306",
                "name": "split",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "separator",
                    "limit"
                ]
            },
            "vars": {
                "separator": "_.split~separator",
                "limit": "_.split~limit",
                "string": "_.split~string"
            }
        },
        "description": "Splits `string` by `separator`.\n\n**Note:** This method is based on\n[`String#split`](https://mdn.io/String/split).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to split.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "RegExp",
                        "string"
                    ]
                },
                "description": "The separator pattern to split by.",
                "name": "separator"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "description": "The length to truncate results to.",
                "name": "limit"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the string segments."
            }
        ],
        "examples": [
            "_.split('a-b-c', '-', 2);\n// => ['a', 'b']"
        ],
        "name": "split",
        "longname": "_.split",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1106,
                1135
            ],
            "filename": "split.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018327",
                "name": "separator",
                "type": "AssignmentExpression",
                "funcscope": "_.split",
                "value": "limit",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "separator",
        "longname": "_.split~separator",
        "kind": "member",
        "memberof": "_.split",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1118,
                1135
            ],
            "filename": "split.js",
            "lineno": 35,
            "columnno": 16,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018329",
                "name": "limit",
                "type": "Identifier",
                "funcscope": "_.split",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "limit",
        "longname": "_.split~limit",
        "kind": "member",
        "memberof": "_.split",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1143,
                1203
            ],
            "filename": "split.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018333",
                "name": "limit",
                "type": "ConditionalExpression",
                "funcscope": "_.split",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "limit",
        "longname": "_.split~limit",
        "kind": "member",
        "memberof": "_.split",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1242,
                1267
            ],
            "filename": "split.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018350",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.split",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.split~string",
        "kind": "member",
        "memberof": "_.split",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1394,
                1429
            ],
            "filename": "split.js",
            "lineno": 46,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018373",
                "name": "separator",
                "type": "CallExpression",
                "funcscope": "_.split",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "separator",
        "longname": "_.split~separator",
        "kind": "member",
        "memberof": "_.split",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1586,
                1608
            ],
            "filename": "split.js",
            "lineno": 54,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018402",
                "name": "module.exports",
                "type": "Identifier",
                "value": "split",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "spread.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018410",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                90
            ],
            "filename": "spread.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018415",
                "name": "arrayPush",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayPush",
        "longname": "arrayPush",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                138
            ],
            "filename": "spread.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018420",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                144,
                188
            ],
            "filename": "spread.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018425",
                "name": "castSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castSlice",
        "longname": "castSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                194,
                228
            ],
            "filename": "spread.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018430",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                282,
                321
            ],
            "filename": "spread.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018438",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                417,
                437
            ],
            "filename": "spread.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018442",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that invokes `func` with the `this` binding of the\n * create function and an array of arguments much like\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n *\n * **Note:** This method is based on the\n * [spread operator](https://mdn.io/spread_operator).\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @param {number} [start=0] The start position of the spread.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */",
        "meta": {
            "range": [
                1366,
                1758
            ],
            "filename": "spread.js",
            "lineno": 49,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018447",
                "name": "spread",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "start"
                ]
            },
            "vars": {
                "start": "_.spread~start",
                "": null
            }
        },
        "description": "Creates a function that invokes `func` with the `this` binding of the\ncreate function and an array of arguments much like\n[`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\n**Note:** This method is based on the\n[spread operator](https://mdn.io/spread_operator).",
        "scope": "static",
        "memberof": "_",
        "since": "3.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to spread arguments over.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The start position of the spread.",
                "name": "start"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var say = _.spread(function(who, what) {\n  return who + ' says ' + what;\n});\n\nsay(['fred', 'hello']);\n// => 'fred says hello'\n\nvar numbers = Promise.all([\n  Promise.resolve(40),\n  Promise.resolve(36)\n]);\n\nnumbers.then(_.spread(function(x, y) {\n  return x + y;\n}));\n// => a Promise of 76"
        ],
        "name": "spread",
        "longname": "_.spread",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1480,
                1538
            ],
            "filename": "spread.js",
            "lineno": 53,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018463",
                "name": "start",
                "type": "ConditionalExpression",
                "funcscope": "_.spread",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.spread~start",
        "kind": "member",
        "memberof": "_.spread",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1583,
                1602
            ],
            "filename": "spread.js",
            "lineno": 55,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018483",
                "name": "array",
                "type": "MemberExpression",
                "value": "args[undefined]"
            }
        },
        "undocumented": true,
        "name": "array",
        "longname": "<anonymous>~array",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1612,
                1649
            ],
            "filename": "spread.js",
            "lineno": 56,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018488",
                "name": "otherArgs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "otherArgs",
        "longname": "<anonymous>~otherArgs",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1760,
                1783
            ],
            "filename": "spread.js",
            "lineno": 65,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018510",
                "name": "module.exports",
                "type": "Identifier",
                "value": "spread",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "startCase.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018518",
                "name": "createCompounder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCompounder",
        "longname": "createCompounder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                68,
                104
            ],
            "filename": "startCase.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018523",
                "name": "upperFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "upperFirst",
        "longname": "upperFirst",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */",
        "meta": {
            "range": [
                587,
                707
            ],
            "filename": "startCase.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018531",
                "name": "startCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts `string` to\n[start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).",
        "scope": "static",
        "memberof": "_",
        "since": "3.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the start cased string."
            }
        ],
        "examples": [
            "_.startCase('--foo-bar--');\n// => 'Foo Bar'\n\n_.startCase('fooBar');\n// => 'Foo Bar'\n\n_.startCase('__FOO_BAR__');\n// => 'FOO BAR'"
        ],
        "name": "startCase",
        "longname": "_.startCase",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                710,
                736
            ],
            "filename": "startCase.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018552",
                "name": "module.exports",
                "type": "Identifier",
                "value": "startCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "startsWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018560",
                "name": "baseClamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClamp",
        "longname": "baseClamp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                104
            ],
            "filename": "startsWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018565",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                144
            ],
            "filename": "startsWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018570",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                150,
                182
            ],
            "filename": "startsWith.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018575",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */",
        "meta": {
            "range": [
                744,
                1019
            ],
            "filename": "startsWith.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018582",
                "name": "startsWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "target",
                    "position"
                ]
            },
            "vars": {
                "string": "_.startsWith~string",
                "position": "_.startsWith~position",
                "target": "_.startsWith~target"
            }
        },
        "description": "Checks if `string` starts with the given target string.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to inspect.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "The string to search for.",
                "name": "target"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The position to search from.",
                "name": "position"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if `string` starts with `target`,\n else `false`."
            }
        ],
        "examples": [
            "_.startsWith('abc', 'a');\n// => true\n\n_.startsWith('abc', 'b');\n// => false\n\n_.startsWith('abc', 'b', 1);\n// => true"
        ],
        "name": "startsWith",
        "longname": "_.startsWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                794,
                819
            ],
            "filename": "startsWith.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018589",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.startsWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.startsWith~string",
        "kind": "member",
        "memberof": "_.startsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                823,
                913
            ],
            "filename": "startsWith.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018595",
                "name": "position",
                "type": "ConditionalExpression",
                "funcscope": "_.startsWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "position",
        "longname": "_.startsWith~position",
        "kind": "member",
        "memberof": "_.startsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                918,
                947
            ],
            "filename": "startsWith.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018612",
                "name": "target",
                "type": "CallExpression",
                "funcscope": "_.startsWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "target",
        "longname": "_.startsWith~target",
        "kind": "member",
        "memberof": "_.startsWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1021,
                1048
            ],
            "filename": "startsWith.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018631",
                "name": "module.exports",
                "type": "Identifier",
                "value": "startsWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                1166
            ],
            "filename": "string.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018639",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                56
            ],
            "filename": "string.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018644",
                "name": "camelCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "camelCase",
        "longname": "module.exports.camelCase",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                97
            ],
            "filename": "string.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018648",
                "name": "capitalize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "capitalize",
        "longname": "module.exports.capitalize",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                101,
                130
            ],
            "filename": "string.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018652",
                "name": "deburr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "deburr",
        "longname": "module.exports.deburr",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                134,
                167
            ],
            "filename": "string.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018656",
                "name": "endsWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "endsWith",
        "longname": "module.exports.endsWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                171,
                200
            ],
            "filename": "string.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018660",
                "name": "escape",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escape",
        "longname": "module.exports.escape",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                204,
                245
            ],
            "filename": "string.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018664",
                "name": "escapeRegExp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escapeRegExp",
        "longname": "module.exports.escapeRegExp",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                249,
                284
            ],
            "filename": "string.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018668",
                "name": "kebabCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "kebabCase",
        "longname": "module.exports.kebabCase",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                288,
                323
            ],
            "filename": "string.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018672",
                "name": "lowerCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lowerCase",
        "longname": "module.exports.lowerCase",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                327,
                364
            ],
            "filename": "string.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018676",
                "name": "lowerFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lowerFirst",
        "longname": "module.exports.lowerFirst",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                368,
                391
            ],
            "filename": "string.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018680",
                "name": "pad",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pad",
        "longname": "module.exports.pad",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                395,
                424
            ],
            "filename": "string.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018684",
                "name": "padEnd",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "padEnd",
        "longname": "module.exports.padEnd",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                428,
                461
            ],
            "filename": "string.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018688",
                "name": "padStart",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "padStart",
        "longname": "module.exports.padStart",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                465,
                498
            ],
            "filename": "string.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018692",
                "name": "parseInt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parseInt",
        "longname": "module.exports.parseInt",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                502,
                531
            ],
            "filename": "string.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018696",
                "name": "repeat",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "repeat",
        "longname": "module.exports.repeat",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                535,
                566
            ],
            "filename": "string.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018700",
                "name": "replace",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replace",
        "longname": "module.exports.replace",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                570,
                605
            ],
            "filename": "string.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018704",
                "name": "snakeCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "snakeCase",
        "longname": "module.exports.snakeCase",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                609,
                636
            ],
            "filename": "string.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018708",
                "name": "split",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "split",
        "longname": "module.exports.split",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                640,
                675
            ],
            "filename": "string.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018712",
                "name": "startCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "startCase",
        "longname": "module.exports.startCase",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                679,
                716
            ],
            "filename": "string.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018716",
                "name": "startsWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "startsWith",
        "longname": "module.exports.startsWith",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                720,
                753
            ],
            "filename": "string.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018720",
                "name": "template",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "template",
        "longname": "module.exports.template",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                757,
                806
            ],
            "filename": "string.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018724",
                "name": "templateSettings",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "templateSettings",
        "longname": "module.exports.templateSettings",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                810,
                841
            ],
            "filename": "string.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018728",
                "name": "toLower",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toLower",
        "longname": "module.exports.toLower",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                845,
                876
            ],
            "filename": "string.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018732",
                "name": "toUpper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toUpper",
        "longname": "module.exports.toUpper",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                880,
                905
            ],
            "filename": "string.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018736",
                "name": "trim",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trim",
        "longname": "module.exports.trim",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                909,
                940
            ],
            "filename": "string.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018740",
                "name": "trimEnd",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trimEnd",
        "longname": "module.exports.trimEnd",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                944,
                979
            ],
            "filename": "string.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018744",
                "name": "trimStart",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trimStart",
        "longname": "module.exports.trimStart",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                983,
                1016
            ],
            "filename": "string.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018748",
                "name": "truncate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "truncate",
        "longname": "module.exports.truncate",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1020,
                1053
            ],
            "filename": "string.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018752",
                "name": "unescape",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unescape",
        "longname": "module.exports.unescape",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1057,
                1092
            ],
            "filename": "string.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018756",
                "name": "upperCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "upperCase",
        "longname": "module.exports.upperCase",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1096,
                1133
            ],
            "filename": "string.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018760",
                "name": "upperFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "upperFirst",
        "longname": "module.exports.upperFirst",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1137,
                1164
            ],
            "filename": "string.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018764",
                "name": "words",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "words",
        "longname": "module.exports.words",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */",
        "meta": {
            "range": [
                338,
                375
            ],
            "filename": "stubArray.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018772",
                "name": "stubArray",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This method returns a new empty array.",
        "scope": "static",
        "memberof": "_",
        "since": "4.13.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new empty array."
            }
        ],
        "examples": [
            "var arrays = _.times(2, _.stubArray);\n\nconsole.log(arrays);\n// => [[], []]\n\nconsole.log(arrays[0] === arrays[1]);\n// => false"
        ],
        "name": "stubArray",
        "longname": "_.stubArray",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                377,
                403
            ],
            "filename": "stubArray.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018778",
                "name": "module.exports",
                "type": "Identifier",
                "value": "stubArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */",
        "meta": {
            "range": [
                225,
                265
            ],
            "filename": "stubFalse.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018787",
                "name": "stubFalse",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This method returns `false`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.13.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `false`."
            }
        ],
        "examples": [
            "_.times(2, _.stubFalse);\n// => [false, false]"
        ],
        "name": "stubFalse",
        "longname": "_.stubFalse",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                267,
                293
            ],
            "filename": "stubFalse.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018793",
                "name": "module.exports",
                "type": "Identifier",
                "value": "stubFalse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns a new empty object.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Object} Returns the new empty object.\n * @example\n *\n * var objects = _.times(2, _.stubObject);\n *\n * console.log(objects);\n * // => [{}, {}]\n *\n * console.log(objects[0] === objects[1]);\n * // => false\n */",
        "meta": {
            "range": [
                346,
                384
            ],
            "filename": "stubObject.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018802",
                "name": "stubObject",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This method returns a new empty object.",
        "scope": "static",
        "memberof": "_",
        "since": "4.13.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new empty object."
            }
        ],
        "examples": [
            "var objects = _.times(2, _.stubObject);\n\nconsole.log(objects);\n// => [{}, {}]\n\nconsole.log(objects[0] === objects[1]);\n// => false"
        ],
        "name": "stubObject",
        "longname": "_.stubObject",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                386,
                413
            ],
            "filename": "stubObject.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018808",
                "name": "module.exports",
                "type": "Identifier",
                "value": "stubObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns an empty string.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {string} Returns the empty string.\n * @example\n *\n * _.times(2, _.stubString);\n * // => ['', '']\n */",
        "meta": {
            "range": [
                236,
                274
            ],
            "filename": "stubString.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018817",
                "name": "stubString",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This method returns an empty string.",
        "scope": "static",
        "memberof": "_",
        "since": "4.13.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the empty string."
            }
        ],
        "examples": [
            "_.times(2, _.stubString);\n// => ['', '']"
        ],
        "name": "stubString",
        "longname": "_.stubString",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                276,
                303
            ],
            "filename": "stubString.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018823",
                "name": "module.exports",
                "type": "Identifier",
                "value": "stubString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method returns `true`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `true`.\n * @example\n *\n * _.times(2, _.stubTrue);\n * // => [true, true]\n */",
        "meta": {
            "range": [
                220,
                258
            ],
            "filename": "stubTrue.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018832",
                "name": "stubTrue",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "This method returns `true`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.13.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true`."
            }
        ],
        "examples": [
            "_.times(2, _.stubTrue);\n// => [true, true]"
        ],
        "name": "stubTrue",
        "longname": "_.stubTrue",
        "kind": "function",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                260,
                285
            ],
            "filename": "stubTrue.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018838",
                "name": "module.exports",
                "type": "Identifier",
                "value": "stubTrue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                68
            ],
            "filename": "subtract.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018846",
                "name": "createMathOperation",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createMathOperation",
        "longname": "createMathOperation",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Subtract two numbers.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {number} minuend The first number in a subtraction.\n * @param {number} subtrahend The second number in a subtraction.\n * @author difference\n * @returns {number} The result of a subtraction.\n * @example\n *\n * _.subtract(6, 4);\n * // => 2\n */",
        "meta": {
            "range": [
                433,
                532
            ],
            "filename": "subtract.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018854",
                "name": "subtract",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Subtract two numbers.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The first number in a subtraction.",
                "name": "minuend"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The second number in a subtraction.",
                "name": "subtrahend"
            }
        ],
        "author": [
            "difference"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The result of a subtraction."
            }
        ],
        "examples": [
            "_.subtract(6, 4);\n// => 2"
        ],
        "name": "subtract",
        "longname": "_.subtract",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                535,
                560
            ],
            "filename": "subtract.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018868",
                "name": "module.exports",
                "type": "Identifier",
                "value": "subtract",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "sum.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018876",
                "name": "baseSum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSum",
        "longname": "baseSum",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                82
            ],
            "filename": "sum.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018881",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {array} array The array to iterate over.\n * @author sum\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */",
        "meta": {
            "range": [
                372,
                468
            ],
            "filename": "sum.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018888",
                "name": "sum",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Computes the sum of the values in `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            }
        ],
        "author": [
            "sum"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the sum."
            }
        ],
        "examples": [
            "_.sum([4, 2, 8, 6]);\n// => 20"
        ],
        "name": "sum",
        "longname": "_.sum",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                470,
                490
            ],
            "filename": "sum.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018905",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sum",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "sumBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018913",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                100
            ],
            "filename": "sumBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018918",
                "name": "baseSum",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSum",
        "longname": "baseSum",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */",
        "meta": {
            "range": [
                790,
                915
            ],
            "filename": "sumBy.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018925",
                "name": "sumBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.sum` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the value to be summed.\nThe iteratee is invoked with one argument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Math",
                "value": "Math"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to iterate over.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the sum."
            }
        ],
        "examples": [
            "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\n_.sumBy(objects, function(o) { return o.n; });\n// => 20\n\n// The `_.property` iteratee shorthand.\n_.sumBy(objects, 'n');\n// => 20"
        ],
        "name": "sumBy",
        "longname": "_.sumBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                917,
                939
            ],
            "filename": "sumBy.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018946",
                "name": "module.exports",
                "type": "Identifier",
                "value": "sumBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "tail.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018954",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */",
        "meta": {
            "range": [
                331,
                456
            ],
            "filename": "tail.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018961",
                "name": "tail",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "length": "_.tail~length"
            }
        },
        "description": "Gets all but the first element of `array`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "_.tail([1, 2, 3]);\n// => [2, 3]"
        ],
        "name": "tail",
        "longname": "_.tail",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                360,
                401
            ],
            "filename": "tail.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018966",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.tail~length",
        "kind": "member",
        "memberof": "_.tail",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                458,
                479
            ],
            "filename": "tail.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018986",
                "name": "module.exports",
                "type": "Identifier",
                "value": "tail",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "take.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018994",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                88
            ],
            "filename": "take.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100018999",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */",
        "meta": {
            "range": [
                665,
                850
            ],
            "filename": "take.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019006",
                "name": "take",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "n": "_.take~n"
            }
        },
        "description": "Creates a slice of `array` with `n` elements taken from the beginning.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of elements to take.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "_.take([1, 2, 3]);\n// => [1]\n\n_.take([1, 2, 3], 2);\n// => [1, 2]\n\n_.take([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.take([1, 2, 3], 0);\n// => []"
        ],
        "name": "take",
        "longname": "_.take",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                753,
                802
            ],
            "filename": "take.js",
            "lineno": 35,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019023",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "_.take",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.take~n",
        "kind": "member",
        "memberof": "_.take",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                852,
                873
            ],
            "filename": "take.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019047",
                "name": "module.exports",
                "type": "Identifier",
                "value": "take",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "takeRight.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019055",
                "name": "baseSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSlice",
        "longname": "baseSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                88
            ],
            "filename": "takeRight.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019060",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` with `n` elements taken from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.takeRight([1, 2, 3]);\n * // => [3]\n *\n * _.takeRight([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.takeRight([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.takeRight([1, 2, 3], 0);\n * // => []\n */",
        "meta": {
            "range": [
                679,
                924
            ],
            "filename": "takeRight.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019067",
                "name": "takeRight",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "n",
                    "guard"
                ]
            },
            "vars": {
                "length": "_.takeRight~length",
                "n": "_.takeRight~n"
            }
        },
        "description": "Creates a slice of `array` with `n` elements taken from the end.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The number of elements to take.",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "_.takeRight([1, 2, 3]);\n// => [3]\n\n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n\n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.takeRight([1, 2, 3], 0);\n// => []"
        ],
        "name": "takeRight",
        "longname": "_.takeRight",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                723,
                764
            ],
            "filename": "takeRight.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019074",
                "name": "length",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.takeRight~length",
        "kind": "member",
        "memberof": "_.takeRight",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                804,
                853
            ],
            "filename": "takeRight.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019091",
                "name": "n",
                "type": "ConditionalExpression",
                "funcscope": "_.takeRight",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.takeRight~n",
        "kind": "member",
        "memberof": "_.takeRight",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                857,
                871
            ],
            "filename": "takeRight.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019104",
                "name": "n",
                "type": "BinaryExpression",
                "funcscope": "_.takeRight",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.takeRight~n",
        "kind": "member",
        "memberof": "_.takeRight",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                926,
                952
            ],
            "filename": "takeRight.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019121",
                "name": "module.exports",
                "type": "Identifier",
                "value": "takeRight",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "takeRightWhile.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019129",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "takeRightWhile.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019134",
                "name": "baseWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseWhile",
        "longname": "baseWhile",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` with elements taken from the end. Elements are\n * taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.takeRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeRightWhile(users, ['active', false]);\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeRightWhile(users, 'active');\n * // => []\n */",
        "meta": {
            "range": [
                1222,
                1374
            ],
            "filename": "takeRightWhile.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019141",
                "name": "takeRightWhile",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate"
                ]
            }
        },
        "description": "Creates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.takeRightWhile(users, function(o) { return !o.active; });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeRightWhile(users, ['active', false]);\n// => objects for ['fred', 'pebbles']\n\n// The `_.property` iteratee shorthand.\n_.takeRightWhile(users, 'active');\n// => []"
        ],
        "name": "takeRightWhile",
        "longname": "_.takeRightWhile",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1376,
                1407
            ],
            "filename": "takeRightWhile.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019164",
                "name": "module.exports",
                "type": "Identifier",
                "value": "takeRightWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "takeWhile.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019172",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "takeWhile.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019177",
                "name": "baseWhile",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseWhile",
        "longname": "baseWhile",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a slice of `array` with elements taken from the beginning. Elements\n * are taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.takeWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeWhile(users, ['active', false]);\n * // => objects for ['barney', 'fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeWhile(users, 'active');\n * // => []\n */",
        "meta": {
            "range": [
                1204,
                1338
            ],
            "filename": "takeWhile.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019184",
                "name": "takeWhile",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "predicate"
                ]
            }
        },
        "description": "Creates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to query.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "predicate"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the slice of `array`."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.takeWhile(users, function(o) { return !o.active; });\n// => objects for ['barney', 'fred']\n\n// The `_.matches` iteratee shorthand.\n_.takeWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeWhile(users, ['active', false]);\n// => objects for ['barney', 'fred']\n\n// The `_.property` iteratee shorthand.\n_.takeWhile(users, 'active');\n// => []"
        ],
        "name": "takeWhile",
        "longname": "_.takeWhile",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1340,
                1366
            ],
            "filename": "takeWhile.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019205",
                "name": "module.exports",
                "type": "Identifier",
                "value": "takeWhile",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method invokes `interceptor` and returns `value`. The interceptor\n * is invoked with one argument; (value). The purpose of this method is to\n * \"tap into\" a method chain sequence in order to modify intermediate results.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3])\n *  .tap(function(array) {\n *    // Mutate input array.\n *    array.pop();\n *  })\n *  .reverse()\n *  .value();\n * // => [2, 1]\n */",
        "meta": {
            "range": [
                620,
                694
            ],
            "filename": "tap.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019214",
                "name": "tap",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "interceptor"
                ]
            }
        },
        "description": "This method invokes `interceptor` and returns `value`. The interceptor\nis invoked with one argument; (value). The purpose of this method is to\n\"tap into\" a method chain sequence in order to modify intermediate results.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to provide to `interceptor`.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to invoke.",
                "name": "interceptor"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns `value`."
            }
        ],
        "examples": [
            "_([1, 2, 3])\n .tap(function(array) {\n   // Mutate input array.\n   array.pop();\n })\n .reverse()\n .value();\n// => [2, 1]"
        ],
        "name": "tap",
        "longname": "_.tap",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                696,
                716
            ],
            "filename": "tap.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019226",
                "name": "module.exports",
                "type": "Identifier",
                "value": "tap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "template.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019234",
                "name": "assignInWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignInWith",
        "longname": "assignInWith",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                80
            ],
            "filename": "template.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019239",
                "name": "attempt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "attempt",
        "longname": "attempt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                86,
                132
            ],
            "filename": "template.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019244",
                "name": "baseValues",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseValues",
        "longname": "baseValues",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                138,
                208
            ],
            "filename": "template.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019249",
                "name": "customDefaultsAssignIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "customDefaultsAssignIn",
        "longname": "customDefaultsAssignIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                214,
                272
            ],
            "filename": "template.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019254",
                "name": "escapeStringChar",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escapeStringChar",
        "longname": "escapeStringChar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                278,
                308
            ],
            "filename": "template.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019259",
                "name": "isError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isError",
        "longname": "isError",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                314,
                368
            ],
            "filename": "template.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019264",
                "name": "isIterateeCall",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIterateeCall",
        "longname": "isIterateeCall",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                374,
                398
            ],
            "filename": "template.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019269",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                404,
                456
            ],
            "filename": "template.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019274",
                "name": "reInterpolate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reInterpolate",
        "longname": "reInterpolate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                462,
                510
            ],
            "filename": "template.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019279",
                "name": "templateSettings",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "templateSettings",
        "longname": "templateSettings",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                516,
                548
            ],
            "filename": "template.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019284",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match empty string literals in compiled template source. */",
        "meta": {
            "range": [
                642,
                681
            ],
            "filename": "template.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019292",
                "name": "reEmptyStringLeading",
                "type": "Literal",
                "value": "<RegExp /\\b__p \\+= '';/g>"
            }
        },
        "description": "Used to match empty string literals in compiled template source.",
        "name": "reEmptyStringLeading",
        "longname": "reEmptyStringLeading",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                687,
                729
            ],
            "filename": "template.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019295",
                "name": "reEmptyStringMiddle",
                "type": "Literal",
                "value": "<RegExp /\\b(__p \\+=) '' \\+/g>"
            }
        },
        "undocumented": true,
        "name": "reEmptyStringMiddle",
        "longname": "reEmptyStringMiddle",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                735,
                790
            ],
            "filename": "template.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019298",
                "name": "reEmptyStringTrailing",
                "type": "Literal",
                "value": "<RegExp /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g>"
            }
        },
        "undocumented": true,
        "name": "reEmptyStringTrailing",
        "longname": "reEmptyStringTrailing",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Used to match\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n */",
        "meta": {
            "range": [
                936,
                984
            ],
            "filename": "template.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019302",
                "name": "reEsTemplate",
                "type": "Literal",
                "value": "<RegExp /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g>"
            }
        },
        "description": "Used to match\n[ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).",
        "name": "reEsTemplate",
        "longname": "reEsTemplate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to ensure capturing order of template delimiters. */",
        "meta": {
            "range": [
                1053,
                1071
            ],
            "filename": "template.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019306",
                "name": "reNoMatch",
                "type": "Literal",
                "value": "<RegExp /($^)/>"
            }
        },
        "description": "Used to ensure capturing order of template delimiters.",
        "name": "reNoMatch",
        "longname": "reNoMatch",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match unescaped characters in compiled string literals. */",
        "meta": {
            "range": [
                1149,
                1193
            ],
            "filename": "template.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019310",
                "name": "reUnescapedString",
                "type": "Literal",
                "value": "<RegExp /['\\n\\r\\u2028\\u2029\\\\]/g>"
            }
        },
        "description": "Used to match unescaped characters in compiled string literals.",
        "name": "reUnescapedString",
        "longname": "reUnescapedString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a compiled template function that can interpolate data properties\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n * properties may be accessed as free variables in the template. If a setting\n * object is given, it takes precedence over `_.templateSettings` values.\n *\n * **Note:** In the development build `_.template` utilizes\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * for easier debugging.\n *\n * For more information on precompiling templates see\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n *\n * For more information on Chrome extension sandboxes see\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The template string.\n * @param {Object} [options={}] The options object.\n * @param {RegExp} [options.escape=_.templateSettings.escape]\n *  The HTML \"escape\" delimiter.\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n *  The \"evaluate\" delimiter.\n * @param {Object} [options.imports=_.templateSettings.imports]\n *  An object to import into the template as free variables.\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n *  The \"interpolate\" delimiter.\n * @param {string} [options.sourceURL='templateSources[n]']\n *  The sourceURL of the compiled template.\n * @param {string} [options.variable='obj']\n *  The data object variable name.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the compiled template function.\n * @example\n *\n * // Use the \"interpolate\" delimiter to create a compiled template.\n * var compiled = _.template('hello <%= user %>!');\n * compiled({ 'user': 'fred' });\n * // => 'hello fred!'\n *\n * // Use the HTML \"escape\" delimiter to escape data property values.\n * var compiled = _.template('<b><%- value %></b>');\n * compiled({ 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the internal `print` function in \"evaluate\" delimiters.\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\n * compiled({ 'user': 'barney' });\n * // => 'hello barney!'\n *\n * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n * // Disable support by replacing the \"interpolate\" delimiter.\n * var compiled = _.template('hello ${ user }!');\n * compiled({ 'user': 'pebbles' });\n * // => 'hello pebbles!'\n *\n * // Use backslashes to treat delimiters as plain text.\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n * compiled({ 'value': 'ignored' });\n * // => '<%- value %>'\n *\n * // Use the `imports` option to import `jQuery` as `jq`.\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n *\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n * //   var __t, __p = '';\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n * //   return __p;\n * // }\n *\n * // Use custom template delimiters.\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n * var compiled = _.template('hello {{ user }}!');\n * compiled({ 'user': 'mustache' });\n * // => 'hello mustache!'\n *\n * // Use the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and stack traces.\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */",
        "meta": {
            "range": [
                5706,
                9161
            ],
            "filename": "template.js",
            "lineno": 136,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019313",
                "name": "template",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "options",
                    "guard"
                ]
            },
            "vars": {
                "settings": "_.template~settings",
                "options": "_.template~options",
                "string": "_.template~string",
                "imports": "_.template~imports",
                "importsKeys": "_.template~importsKeys",
                "importsValues": "_.template~importsValues",
                "isEscaping": "_.template~isEscaping",
                "isEvaluating": "_.template~isEvaluating",
                "index": "_.template~index",
                "interpolate": "_.template~interpolate",
                "source": "_.template~source",
                "reDelimiters": "_.template~reDelimiters",
                "sourceURL": "_.template~sourceURL",
                "": null,
                "variable": "_.template~variable",
                "result": "_.template~result",
                "result.source": "_.result.source"
            }
        },
        "description": "Creates a compiled template function that can interpolate data properties\nin \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\nproperties may be accessed as free variables in the template. If a setting\nobject is given, it takes precedence over `_.templateSettings` values.\n\n**Note:** In the development build `_.template` utilizes\n[sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\nfor easier debugging.\n\nFor more information on precompiling templates see\n[lodash's custom builds documentation](https://lodash.com/custom-builds).\n\nFor more information on Chrome extension sandboxes see\n[Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The template string.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "{}",
                "description": "The options object.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "RegExp"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.templateSettings.escape",
                "description": "The HTML \"escape\" delimiter.",
                "name": "options.escape"
            },
            {
                "type": {
                    "names": [
                        "RegExp"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.templateSettings.evaluate",
                "description": "The \"evaluate\" delimiter.",
                "name": "options.evaluate"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.templateSettings.imports",
                "description": "An object to import into the template as free variables.",
                "name": "options.imports"
            },
            {
                "type": {
                    "names": [
                        "RegExp"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.templateSettings.interpolate",
                "description": "The \"interpolate\" delimiter.",
                "name": "options.interpolate"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "'templateSources[n]'",
                "description": "The sourceURL of the compiled template.",
                "name": "options.sourceURL"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "'obj'",
                "description": "The data object variable name.",
                "name": "options.variable"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the compiled template function."
            }
        ],
        "examples": [
            "// Use the \"interpolate\" delimiter to create a compiled template.\nvar compiled = _.template('hello <%= user %>!');\ncompiled({ 'user': 'fred' });\n// => 'hello fred!'\n\n// Use the HTML \"escape\" delimiter to escape data property values.\nvar compiled = _.template('<b><%- value %></b>');\ncompiled({ 'value': '<script>' });\n// => '<b>&lt;script&gt;</b>'\n\n// Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\nvar compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n\n// Use the internal `print` function in \"evaluate\" delimiters.\nvar compiled = _.template('<% print(\"hello \" + user); %>!');\ncompiled({ 'user': 'barney' });\n// => 'hello barney!'\n\n// Use the ES template literal delimiter as an \"interpolate\" delimiter.\n// Disable support by replacing the \"interpolate\" delimiter.\nvar compiled = _.template('hello ${ user }!');\ncompiled({ 'user': 'pebbles' });\n// => 'hello pebbles!'\n\n// Use backslashes to treat delimiters as plain text.\nvar compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\ncompiled({ 'value': 'ignored' });\n// => '<%- value %>'\n\n// Use the `imports` option to import `jQuery` as `jq`.\nvar text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\nvar compiled = _.template(text, { 'imports': { 'jq': jQuery } });\ncompiled({ 'users': ['fred', 'barney'] });\n// => '<li>fred</li><li>barney</li>'\n\n// Use the `sourceURL` option to specify a custom sourceURL for the template.\nvar compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\ncompiled(data);\n// => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\n// Use the `variable` option to ensure a with-statement isn't used in the compiled template.\nvar compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\ncompiled.source;\n// => function(data) {\n//   var __t, __p = '';\n//   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n//   return __p;\n// }\n\n// Use custom template delimiters.\n_.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\nvar compiled = _.template('hello {{ user }}!');\ncompiled({ 'user': 'mustache' });\n// => 'hello mustache!'\n\n// Use the `source` property to inline compiled templates for meaningful\n// line numbers in error messages and stack traces.\nfs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n  var JST = {\\\n    \"main\": ' + _.template(mainText).source + '\\\n  };\\\n');"
        ],
        "name": "template",
        "longname": "_.template",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5929,
                6003
            ],
            "filename": "template.js",
            "lineno": 140,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019320",
                "name": "settings",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "settings",
        "longname": "_.template~settings",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6067,
                6086
            ],
            "filename": "template.js",
            "lineno": 143,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019341",
                "name": "options",
                "type": "Identifier",
                "funcscope": "_.template",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "options",
        "longname": "_.template~options",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6094,
                6119
            ],
            "filename": "template.js",
            "lineno": 145,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019345",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.template",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.template~string",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6123,
                6192
            ],
            "filename": "template.js",
            "lineno": 146,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019351",
                "name": "options",
                "type": "CallExpression",
                "funcscope": "_.template",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "options",
        "longname": "_.template~options",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6201,
                6286
            ],
            "filename": "template.js",
            "lineno": 148,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019360",
                "name": "imports",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "imports",
        "longname": "_.template~imports",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6294,
                6321
            ],
            "filename": "template.js",
            "lineno": 149,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019372",
                "name": "importsKeys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "importsKeys",
        "longname": "_.template~importsKeys",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6329,
                6377
            ],
            "filename": "template.js",
            "lineno": 150,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019377",
                "name": "importsValues",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "importsValues",
        "longname": "_.template~importsValues",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6386,
                6396
            ],
            "filename": "template.js",
            "lineno": 152,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019384",
                "name": "isEscaping"
            }
        },
        "undocumented": true,
        "name": "isEscaping",
        "longname": "_.template~isEscaping",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6404,
                6416
            ],
            "filename": "template.js",
            "lineno": 153,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019386",
                "name": "isEvaluating"
            }
        },
        "undocumented": true,
        "name": "isEvaluating",
        "longname": "_.template~isEvaluating",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6424,
                6433
            ],
            "filename": "template.js",
            "lineno": 154,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019388",
                "name": "index",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.template~index",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6441,
                6487
            ],
            "filename": "template.js",
            "lineno": 155,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019391",
                "name": "interpolate",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "interpolate",
        "longname": "_.template~interpolate",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6495,
                6514
            ],
            "filename": "template.js",
            "lineno": 156,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019398",
                "name": "source",
                "type": "Literal",
                "value": "__p += '"
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "_.template~source",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6572,
                6811
            ],
            "filename": "template.js",
            "lineno": 159,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019402",
                "name": "reDelimiters",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reDelimiters",
        "longname": "_.template~reDelimiters",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6863,
                6948
            ],
            "filename": "template.js",
            "lineno": 167,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019444",
                "name": "sourceURL",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sourceURL",
        "longname": "_.template~sourceURL",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7096,
                7130
            ],
            "filename": "template.js",
            "lineno": 170,
            "columnno": 25,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019475",
                "name": "interpolateValue",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "esTemplateValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "interpolateValue",
        "longname": "<anonymous>~interpolateValue",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7206,
                7288
            ],
            "filename": "template.js",
            "lineno": 173,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019479",
                "name": "source",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "<anonymous>~source",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7361,
                7378
            ],
            "filename": "template.js",
            "lineno": 177,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019496",
                "name": "isEscaping",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isEscaping",
        "longname": "<anonymous>~isEscaping",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7386,
                7432
            ],
            "filename": "template.js",
            "lineno": 178,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019500",
                "name": "source",
                "type": "BinaryExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "<anonymous>~source",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7471,
                7490
            ],
            "filename": "template.js",
            "lineno": 181,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019511",
                "name": "isEvaluating",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isEvaluating",
        "longname": "<anonymous>~isEvaluating",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7498,
                7546
            ],
            "filename": "template.js",
            "lineno": 182,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019515",
                "name": "source",
                "type": "BinaryExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "<anonymous>~source",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7588,
                7665
            ],
            "filename": "template.js",
            "lineno": 185,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019526",
                "name": "source",
                "type": "BinaryExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "<anonymous>~source",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7677,
                7706
            ],
            "filename": "template.js",
            "lineno": 187,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019534",
                "name": "index",
                "type": "BinaryExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7862,
                7878
            ],
            "filename": "template.js",
            "lineno": 194,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019544",
                "name": "source",
                "type": "Literal",
                "funcscope": "_.template",
                "value": "';\n",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "_.template~source",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8030,
                8057
            ],
            "filename": "template.js",
            "lineno": 198,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019548",
                "name": "variable",
                "type": "MemberExpression",
                "value": "options.variable"
            }
        },
        "undocumented": true,
        "name": "variable",
        "longname": "_.template~variable",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8082,
                8126
            ],
            "filename": "template.js",
            "lineno": 200,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019558",
                "name": "source",
                "type": "BinaryExpression",
                "funcscope": "_.template",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "_.template~source",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8180,
                8338
            ],
            "filename": "template.js",
            "lineno": 203,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019566",
                "name": "source",
                "type": "CallExpression",
                "funcscope": "_.template",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "_.template~source",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8381,
                8770
            ],
            "filename": "template.js",
            "lineno": 208,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019588",
                "name": "source",
                "type": "BinaryExpression",
                "funcscope": "_.template",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "_.template~source",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8779,
                8918
            ],
            "filename": "template.js",
            "lineno": 226,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019621",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.template~result",
        "kind": "member",
        "memberof": "_.template",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9072,
                9094
            ],
            "filename": "template.js",
            "lineno": 233,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019642",
                "name": "result.source",
                "type": "Identifier",
                "funcscope": "_.template",
                "value": "source",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "source",
        "longname": "_.result.source",
        "kind": "member",
        "memberof": "_.result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9163,
                9188
            ],
            "filename": "template.js",
            "lineno": 240,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019657",
                "name": "module.exports",
                "type": "Identifier",
                "value": "template",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                32
            ],
            "filename": "templateSettings.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019665",
                "name": "escape",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escape",
        "longname": "escape",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38,
                80
            ],
            "filename": "templateSettings.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019670",
                "name": "reEscape",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reEscape",
        "longname": "reEscape",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                86,
                132
            ],
            "filename": "templateSettings.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019675",
                "name": "reEvaluate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reEvaluate",
        "longname": "reEvaluate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                138,
                190
            ],
            "filename": "templateSettings.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019680",
                "name": "reInterpolate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reInterpolate",
        "longname": "reInterpolate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * By default, the template delimiters used by lodash are like those in\n * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n * following template settings to use alternative delimiters.\n *\n * @static\n * @memberOf _\n * @type {Object}\n */",
        "meta": {
            "range": [
                471,
                1415
            ],
            "filename": "templateSettings.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019688",
                "name": "templateSettings",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "description": "By default, the template delimiters used by lodash are like those in\nembedded Ruby (ERB) as well as ES2015 template strings. Change the\nfollowing template settings to use alternative delimiters.",
        "scope": "static",
        "memberof": "_",
        "type": {
            "names": [
                "Object"
            ]
        },
        "name": "templateSettings",
        "longname": "_.templateSettings",
        "kind": "member",
        "params": []
    },
    {
        "comment": "/**\n   * Used to detect `data` property values to be HTML-escaped.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */",
        "meta": {
            "range": [
                629,
                647
            ],
            "filename": "templateSettings.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019691",
                "name": "escape",
                "type": "Identifier",
                "value": "reEscape"
            }
        },
        "description": "Used to detect `data` property values to be HTML-escaped.",
        "memberof": "_.templateSettings",
        "type": {
            "names": [
                "RegExp"
            ]
        },
        "name": "escape",
        "longname": "_.templateSettings.escape",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Used to detect code to be evaluated.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */",
        "meta": {
            "range": [
                765,
                787
            ],
            "filename": "templateSettings.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019693",
                "name": "evaluate",
                "type": "Identifier",
                "value": "reEvaluate"
            }
        },
        "description": "Used to detect code to be evaluated.",
        "memberof": "_.templateSettings",
        "type": {
            "names": [
                "RegExp"
            ]
        },
        "name": "evaluate",
        "longname": "_.templateSettings.evaluate",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Used to detect `data` property values to inject.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */",
        "meta": {
            "range": [
                917,
                945
            ],
            "filename": "templateSettings.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019695",
                "name": "interpolate",
                "type": "Identifier",
                "value": "reInterpolate"
            }
        },
        "description": "Used to detect `data` property values to inject.",
        "memberof": "_.templateSettings",
        "type": {
            "names": [
                "RegExp"
            ]
        },
        "name": "interpolate",
        "longname": "_.templateSettings.interpolate",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Used to reference the data object in the template text.\n   *\n   * @memberOf _.templateSettings\n   * @type {string}\n   */",
        "meta": {
            "range": [
                1082,
                1096
            ],
            "filename": "templateSettings.js",
            "lineno": 49,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019697",
                "name": "variable",
                "type": "Literal",
                "value": ""
            }
        },
        "description": "Used to reference the data object in the template text.",
        "memberof": "_.templateSettings",
        "type": {
            "names": [
                "string"
            ]
        },
        "name": "variable",
        "longname": "_.templateSettings.variable",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Used to import variables into the compiled template.\n   *\n   * @memberOf _.templateSettings\n   * @type {Object}\n   */",
        "meta": {
            "range": [
                1230,
                1413
            ],
            "filename": "templateSettings.js",
            "lineno": 57,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019699",
                "name": "imports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "description": "Used to import variables into the compiled template.",
        "memberof": "_.templateSettings",
        "type": {
            "names": [
                "Object"
            ]
        },
        "name": "imports",
        "longname": "_.templateSettings.imports",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "/**\n     * A reference to the `lodash` function.\n     *\n     * @memberOf _.templateSettings.imports\n     * @type {Function}\n     */",
        "meta": {
            "range": [
                1384,
                1409
            ],
            "filename": "templateSettings.js",
            "lineno": 65,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019701",
                "name": "_",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "description": "A reference to the `lodash` function.",
        "memberof": "_.templateSettings.imports",
        "type": {
            "names": [
                "function"
            ]
        },
        "name": "_",
        "longname": "_.templateSettings.imports._",
        "kind": "member",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1391,
                1407
            ],
            "filename": "templateSettings.js",
            "lineno": 65,
            "columnno": 11,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019703",
                "name": "escape",
                "type": "Identifier",
                "value": "escape"
            }
        },
        "undocumented": true,
        "name": "escape",
        "longname": "_.templateSettings.imports._.escape",
        "kind": "member",
        "memberof": "_.templateSettings.imports._",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1418,
                1451
            ],
            "filename": "templateSettings.js",
            "lineno": 69,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019706",
                "name": "module.exports",
                "type": "Identifier",
                "value": "templateSettings",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "throttle.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019714",
                "name": "debounce",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "debounce",
        "longname": "debounce",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                74
            ],
            "filename": "throttle.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019719",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Error message constants. */",
        "meta": {
            "range": [
                128,
                167
            ],
            "filename": "throttle.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019727",
                "name": "FUNC_ERROR_TEXT",
                "type": "Literal",
                "value": "Expected a function"
            }
        },
        "description": "Error message constants.",
        "name": "FUNC_ERROR_TEXT",
        "longname": "FUNC_ERROR_TEXT",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */",
        "meta": {
            "range": [
                2251,
                2695
            ],
            "filename": "throttle.js",
            "lineno": 53,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019730",
                "name": "throttle",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func",
                    "wait",
                    "options"
                ]
            },
            "vars": {
                "leading": "_.throttle~leading",
                "trailing": "_.throttle~trailing"
            }
        },
        "description": "Creates a throttled function that only invokes `func` at most once per\nevery `wait` milliseconds. The throttled function comes with a `cancel`\nmethod to cancel delayed `func` invocations and a `flush` method to\nimmediately invoke them. Provide `options` to indicate whether `func`\nshould be invoked on the leading and/or trailing edge of the `wait`\ntimeout. The `func` is invoked with the last arguments provided to the\nthrottled function. Subsequent calls to the throttled function return the\nresult of the last `func` invocation.\n\n**Note:** If `leading` and `trailing` options are `true`, `func` is\ninvoked on the trailing edge of the timeout only if the throttled function\nis invoked more than once during the `wait` timeout.\n\nIf `wait` is `0` and `leading` is `false`, `func` invocation is deferred\nuntil to the next tick, similar to `setTimeout` with a timeout of `0`.\n\nSee [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\nfor details over the differences between `_.throttle` and `_.debounce`.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to throttle.",
                "name": "func"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "The number of milliseconds to throttle invocations to.",
                "name": "wait"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "{}",
                "description": "The options object.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": true,
                "description": "Specify invoking on the leading edge of the timeout.",
                "name": "options.leading"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": true,
                "description": "Specify invoking on the trailing edge of the timeout.",
                "name": "options.trailing"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new throttled function."
            }
        ],
        "examples": [
            "// Avoid excessively updating the position while scrolling.\njQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\n// Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\nvar throttled = _.throttle(renewToken, 300000, { 'trailing': false });\njQuery(element).on('click', throttled);\n\n// Cancel the trailing throttled invocation.\njQuery(window).on('popstate', throttled.cancel);"
        ],
        "name": "throttle",
        "longname": "_.throttle",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2298,
                2312
            ],
            "filename": "throttle.js",
            "lineno": 54,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019737",
                "name": "leading",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "leading",
        "longname": "_.throttle~leading",
        "kind": "member",
        "memberof": "_.throttle",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2320,
                2335
            ],
            "filename": "throttle.js",
            "lineno": 55,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019740",
                "name": "trailing",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "trailing",
        "longname": "_.throttle~trailing",
        "kind": "member",
        "memberof": "_.throttle",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2450,
                2510
            ],
            "filename": "throttle.js",
            "lineno": 61,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019759",
                "name": "leading",
                "type": "ConditionalExpression",
                "funcscope": "_.throttle",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "leading",
        "longname": "_.throttle~leading",
        "kind": "member",
        "memberof": "_.throttle",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2516,
                2580
            ],
            "filename": "throttle.js",
            "lineno": 62,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019772",
                "name": "trailing",
                "type": "ConditionalExpression",
                "funcscope": "_.throttle",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "trailing",
        "longname": "_.throttle~trailing",
        "kind": "member",
        "memberof": "_.throttle",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2622,
                2640
            ],
            "filename": "throttle.js",
            "lineno": 65,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019790",
                "name": "leading",
                "type": "Identifier",
                "value": "leading"
            }
        },
        "undocumented": true,
        "name": "leading",
        "longname": "leading",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2646,
                2661
            ],
            "filename": "throttle.js",
            "lineno": 66,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019792",
                "name": "maxWait",
                "type": "Identifier",
                "value": "wait"
            }
        },
        "undocumented": true,
        "name": "maxWait",
        "longname": "maxWait",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2667,
                2687
            ],
            "filename": "throttle.js",
            "lineno": 67,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019794",
                "name": "trailing",
                "type": "Identifier",
                "value": "trailing"
            }
        },
        "undocumented": true,
        "name": "trailing",
        "longname": "trailing",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2697,
                2722
            ],
            "filename": "throttle.js",
            "lineno": 71,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019797",
                "name": "module.exports",
                "type": "Identifier",
                "value": "throttle",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * This method is like `_.tap` except that it returns the result of `interceptor`.\n * The purpose of this method is to \"pass thru\" values replacing intermediate\n * results in a method chain sequence.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns the result of `interceptor`.\n * @example\n *\n * _('  abc  ')\n *  .chain()\n *  .trim()\n *  .thru(function(value) {\n *    return [value];\n *  })\n *  .value();\n * // => ['abc']\n */",
        "meta": {
            "range": [
                598,
                664
            ],
            "filename": "thru.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019806",
                "name": "thru",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "interceptor"
                ]
            }
        },
        "description": "This method is like `_.tap` except that it returns the result of `interceptor`.\nThe purpose of this method is to \"pass thru\" values replacing intermediate\nresults in a method chain sequence.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to provide to `interceptor`.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to invoke.",
                "name": "interceptor"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the result of `interceptor`."
            }
        ],
        "examples": [
            "_('  abc  ')\n .chain()\n .trim()\n .thru(function(value) {\n   return [value];\n })\n .value();\n// => ['abc']"
        ],
        "name": "thru",
        "longname": "_.thru",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                666,
                687
            ],
            "filename": "thru.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019816",
                "name": "module.exports",
                "type": "Identifier",
                "value": "thru",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "times.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019824",
                "name": "baseTimes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseTimes",
        "longname": "baseTimes",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                104
            ],
            "filename": "times.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019829",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                144
            ],
            "filename": "times.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019834",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                224,
                259
            ],
            "filename": "times.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019842",
                "name": "MAX_SAFE_INTEGER",
                "type": "Literal",
                "value": 9007199254740991
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "MAX_SAFE_INTEGER",
        "longname": "MAX_SAFE_INTEGER",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for the maximum length and index of an array. */",
        "meta": {
            "range": [
                338,
                367
            ],
            "filename": "times.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019846",
                "name": "MAX_ARRAY_LENGTH",
                "type": "Literal",
                "value": 4294967295
            }
        },
        "description": "Used as references for the maximum length and index of an array.",
        "name": "MAX_ARRAY_LENGTH",
        "longname": "MAX_ARRAY_LENGTH",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                463,
                483
            ],
            "filename": "times.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019850",
                "name": "nativeMin",
                "type": "MemberExpression",
                "value": "Math.min"
            }
        },
        "undocumented": true,
        "name": "nativeMin",
        "longname": "nativeMin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */",
        "meta": {
            "range": [
                1012,
                1374
            ],
            "filename": "times.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019855",
                "name": "times",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "n",
                    "iteratee"
                ]
            },
            "vars": {
                "n": "_.times~n",
                "index": "_.times~index",
                "length": "_.times~length",
                "iteratee": "_.iteratee.iteratee",
                "result": "_.times~result"
            }
        },
        "description": "Invokes the iteratee `n` times, returning an array of the results of\neach invocation. The iteratee is invoked with one argument; (index).",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "The number of times to invoke `iteratee`.",
                "name": "n"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the array of results."
            }
        ],
        "examples": [
            "_.times(3, String);\n// => ['0', '1', '2']\n\n _.times(4, _.constant(0));\n// => [0, 0, 0, 0]"
        ],
        "name": "times",
        "longname": "_.times",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1044,
                1060
            ],
            "filename": "times.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019861",
                "name": "n",
                "type": "CallExpression",
                "funcscope": "_.times",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.times~n",
        "kind": "member",
        "memberof": "_.times",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1126,
                1150
            ],
            "filename": "times.js",
            "lineno": 40,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019878",
                "name": "index",
                "type": "Identifier",
                "value": "MAX_ARRAY_LENGTH"
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.times~index",
        "kind": "member",
        "memberof": "_.times",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1158,
                1197
            ],
            "filename": "times.js",
            "lineno": 41,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019881",
                "name": "length",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.times~length",
        "kind": "member",
        "memberof": "_.times",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1202,
                1235
            ],
            "filename": "times.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019888",
                "name": "iteratee",
                "type": "CallExpression",
                "funcscope": "_.times",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1239,
                1260
            ],
            "filename": "times.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019894",
                "name": "n",
                "type": "Identifier",
                "funcscope": "_.times",
                "value": "MAX_ARRAY_LENGTH",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "_.times~n",
        "kind": "member",
        "memberof": "_.times",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1269,
                1305
            ],
            "filename": "times.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019898",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.times~result",
        "kind": "member",
        "memberof": "_.times",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1376,
                1398
            ],
            "filename": "times.js",
            "lineno": 53,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019917",
                "name": "module.exports",
                "type": "Identifier",
                "value": "times",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                42
            ],
            "filename": "toArray.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019925",
                "name": "Symbol",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Symbol",
        "longname": "Symbol",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                48,
                92
            ],
            "filename": "toArray.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019930",
                "name": "copyArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyArray",
        "longname": "copyArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                98,
                136
            ],
            "filename": "toArray.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019935",
                "name": "getTag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getTag",
        "longname": "getTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                142,
                180
            ],
            "filename": "toArray.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019940",
                "name": "isArrayLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLike",
        "longname": "isArrayLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                186,
                218
            ],
            "filename": "toArray.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019945",
                "name": "isString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isString",
        "longname": "isString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                224,
                280
            ],
            "filename": "toArray.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019950",
                "name": "iteratorToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratorToArray",
        "longname": "iteratorToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                286,
                332
            ],
            "filename": "toArray.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019955",
                "name": "mapToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mapToArray",
        "longname": "mapToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                338,
                384
            ],
            "filename": "toArray.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019960",
                "name": "setToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "setToArray",
        "longname": "setToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                390,
                442
            ],
            "filename": "toArray.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019965",
                "name": "stringToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToArray",
        "longname": "stringToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                448,
                476
            ],
            "filename": "toArray.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019970",
                "name": "values",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** `Object#toString` result references. */",
        "meta": {
            "range": [
                542,
                565
            ],
            "filename": "toArray.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019978",
                "name": "mapTag",
                "type": "Literal",
                "value": "[object Map]"
            }
        },
        "description": "`Object#toString` result references.",
        "name": "mapTag",
        "longname": "mapTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                571,
                594
            ],
            "filename": "toArray.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019981",
                "name": "setTag",
                "type": "Literal",
                "value": "[object Set]"
            }
        },
        "undocumented": true,
        "name": "setTag",
        "longname": "setTag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Built-in value references. */",
        "meta": {
            "range": [
                635,
                685
            ],
            "filename": "toArray.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019985",
                "name": "symIterator",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "description": "Built-in value references.",
        "name": "symIterator",
        "longname": "symIterator",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */",
        "meta": {
            "range": [
                1064,
                1456
            ],
            "filename": "toArray.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100019993",
                "name": "toArray",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "tag": "_.toArray~tag",
                "func": "_.toArray~func"
            }
        },
        "description": "Converts `value` to an array.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the converted array."
            }
        ],
        "examples": [
            "_.toArray({ 'a': 1, 'b': 2 });\n// => [1, 2]\n\n_.toArray('abc');\n// => ['a', 'b', 'c']\n\n_.toArray(1);\n// => []\n\n_.toArray(null);\n// => []"
        ],
        "name": "toArray",
        "longname": "_.toArray",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1330,
                1349
            ],
            "filename": "toArray.js",
            "lineno": 54,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020034",
                "name": "tag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tag",
        "longname": "_.toArray~tag",
        "kind": "member",
        "memberof": "_.toArray",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1357,
                1430
            ],
            "filename": "toArray.js",
            "lineno": 55,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020039",
                "name": "func",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "_.toArray~func",
        "kind": "member",
        "memberof": "_.toArray",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1458,
                1482
            ],
            "filename": "toArray.js",
            "lineno": 60,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020057",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toArray",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "toFinite.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020065",
                "name": "toNumber",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toNumber",
        "longname": "toNumber",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                116,
                132
            ],
            "filename": "toFinite.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020073",
                "name": "INFINITY",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "INFINITY",
        "longname": "INFINITY",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                138,
                175
            ],
            "filename": "toFinite.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020078",
                "name": "MAX_INTEGER",
                "type": "Literal",
                "value": 1.7976931348623157e+308
            }
        },
        "undocumented": true,
        "name": "MAX_INTEGER",
        "longname": "MAX_INTEGER",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */",
        "meta": {
            "range": [
                582,
                854
            ],
            "filename": "toFinite.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020081",
                "name": "toFinite",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "value": "_.toFinite~value",
                "sign": "_.toFinite~sign"
            }
        },
        "description": "Converts `value` to a finite number.",
        "scope": "static",
        "memberof": "_",
        "since": "4.12.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the converted number."
            }
        ],
        "examples": [
            "_.toFinite(3.2);\n// => 3.2\n\n_.toFinite(Number.MIN_VALUE);\n// => 5e-324\n\n_.toFinite(Infinity);\n// => 1.7976931348623157e+308\n\n_.toFinite('3.2');\n// => 3.2"
        ],
        "name": "toFinite",
        "longname": "_.toFinite",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                667,
                690
            ],
            "filename": "toFinite.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020097",
                "name": "value",
                "type": "CallExpression",
                "funcscope": "_.toFinite",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.toFinite~value",
        "kind": "member",
        "memberof": "_.toFinite",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                751,
                778
            ],
            "filename": "toFinite.js",
            "lineno": 38,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020113",
                "name": "sign",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sign",
        "longname": "_.toFinite~sign",
        "kind": "member",
        "memberof": "_.toFinite",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                856,
                881
            ],
            "filename": "toFinite.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020134",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toFinite",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "toInteger.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020142",
                "name": "toFinite",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toFinite",
        "longname": "toFinite",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */",
        "meta": {
            "range": [
                577,
                745
            ],
            "filename": "toInteger.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020149",
                "name": "toInteger",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "result": "_.toInteger~result",
                "remainder": "_.toInteger~remainder"
            }
        },
        "description": "Converts `value` to an integer.\n\n**Note:** This method is loosely based on\n[`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the converted integer."
            }
        ],
        "examples": [
            "_.toInteger(3.2);\n// => 3\n\n_.toInteger(Number.MIN_VALUE);\n// => 0\n\n_.toInteger(Infinity);\n// => 1.7976931348623157e+308\n\n_.toInteger('3.2');\n// => 3"
        ],
        "name": "toInteger",
        "longname": "_.toInteger",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                611,
                635
            ],
            "filename": "toInteger.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020154",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.toInteger~result",
        "kind": "member",
        "memberof": "_.toInteger",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                643,
                665
            ],
            "filename": "toInteger.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020159",
                "name": "remainder",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "remainder",
        "longname": "_.toInteger~remainder",
        "kind": "member",
        "memberof": "_.toInteger",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                747,
                773
            ],
            "filename": "toInteger.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020177",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Enables the wrapper to be iterable.\n *\n * @name Symbol.iterator\n * @memberOf _\n * @since 4.0.0\n * @category Seq\n * @returns {Object} Returns the wrapper object.\n * @example\n *\n * var wrapped = _([1, 2]);\n *\n * wrapped[Symbol.iterator]() === wrapped;\n * // => true\n *\n * Array.from(wrapped);\n * // => [1, 2]\n */",
        "meta": {
            "filename": "toIterator.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Enables the wrapper to be iterable.",
        "name": "iterator",
        "memberof": "_.Symbol",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the wrapper object."
            }
        ],
        "examples": [
            "var wrapped = _([1, 2]);\n\nwrapped[Symbol.iterator]() === wrapped;\n// => true\n\nArray.from(wrapped);\n// => [1, 2]"
        ],
        "scope": "static",
        "longname": "_.Symbol.iterator",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                333,
                380
            ],
            "filename": "toIterator.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020186",
                "name": "wrapperToIterator",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrapperToIterator",
        "longname": "wrapperToIterator",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                382,
                416
            ],
            "filename": "toIterator.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020192",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperToIterator",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                42
            ],
            "filename": "toJSON.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020200",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "toLength.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020210",
                "name": "baseClamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClamp",
        "longname": "baseClamp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                88
            ],
            "filename": "toLength.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020215",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for the maximum length and index of an array. */",
        "meta": {
            "range": [
                182,
                211
            ],
            "filename": "toLength.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020223",
                "name": "MAX_ARRAY_LENGTH",
                "type": "Literal",
                "value": 4294967295
            }
        },
        "description": "Used as references for the maximum length and index of an array.",
        "name": "MAX_ARRAY_LENGTH",
        "longname": "MAX_ARRAY_LENGTH",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object.\n *\n * **Note:** This method is based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toLength(3.2);\n * // => 3\n *\n * _.toLength(Number.MIN_VALUE);\n * // => 0\n *\n * _.toLength(Infinity);\n * // => 4294967295\n *\n * _.toLength('3.2');\n * // => 3\n */",
        "meta": {
            "range": [
                764,
                863
            ],
            "filename": "toLength.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020226",
                "name": "toLength",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `value` to an integer suitable for use as the length of an\narray-like object.\n\n**Note:** This method is based on\n[`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the converted integer."
            }
        ],
        "examples": [
            "_.toLength(3.2);\n// => 3\n\n_.toLength(Number.MIN_VALUE);\n// => 0\n\n_.toLength(Infinity);\n// => 4294967295\n\n_.toLength('3.2');\n// => 3"
        ],
        "name": "toLength",
        "longname": "_.toLength",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                865,
                890
            ],
            "filename": "toLength.js",
            "lineno": 40,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020242",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toLength",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "toLower.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020250",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string`, as a whole, to lower case just like\n * [String#toLowerCase](https://mdn.io/toLowerCase).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the lower cased string.\n * @example\n *\n * _.toLower('--Foo-Bar--');\n * // => '--foo-bar--'\n *\n * _.toLower('fooBar');\n * // => 'foobar'\n *\n * _.toLower('__FOO_BAR__');\n * // => '__foo_bar__'\n */",
        "meta": {
            "range": [
                512,
                579
            ],
            "filename": "toLower.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020257",
                "name": "toLower",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `string`, as a whole, to lower case just like\n[String#toLowerCase](https://mdn.io/toLowerCase).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the lower cased string."
            }
        ],
        "examples": [
            "_.toLower('--Foo-Bar--');\n// => '--foo-bar--'\n\n_.toLower('fooBar');\n// => 'foobar'\n\n_.toLower('__FOO_BAR__');\n// => '__foo_bar__'"
        ],
        "name": "toLower",
        "longname": "_.toLower",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                581,
                605
            ],
            "filename": "toLower.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020269",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toLower",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "toNumber.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020277",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                74
            ],
            "filename": "toNumber.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020282",
                "name": "isSymbol",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isSymbol",
        "longname": "isSymbol",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                154,
                165
            ],
            "filename": "toNumber.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020290",
                "name": "NAN",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "NAN",
        "longname": "NAN",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match leading and trailing whitespace. */",
        "meta": {
            "range": [
                226,
                247
            ],
            "filename": "toNumber.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020296",
                "name": "reTrim",
                "type": "Literal",
                "value": "<RegExp /^\\s+|\\s+$/g>"
            }
        },
        "description": "Used to match leading and trailing whitespace.",
        "name": "reTrim",
        "longname": "reTrim",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to detect bad signed hexadecimal string values. */",
        "meta": {
            "range": [
                314,
                347
            ],
            "filename": "toNumber.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020300",
                "name": "reIsBadHex",
                "type": "Literal",
                "value": "<RegExp /^[-+]0x[0-9a-f]+$/i>"
            }
        },
        "description": "Used to detect bad signed hexadecimal string values.",
        "name": "reIsBadHex",
        "longname": "reIsBadHex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to detect binary string values. */",
        "meta": {
            "range": [
                398,
                423
            ],
            "filename": "toNumber.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020304",
                "name": "reIsBinary",
                "type": "Literal",
                "value": "<RegExp /^0b[01]+$/i>"
            }
        },
        "description": "Used to detect binary string values.",
        "name": "reIsBinary",
        "longname": "reIsBinary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to detect octal string values. */",
        "meta": {
            "range": [
                473,
                498
            ],
            "filename": "toNumber.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020308",
                "name": "reIsOctal",
                "type": "Literal",
                "value": "<RegExp /^0o[0-7]+$/i>"
            }
        },
        "description": "Used to detect octal string values.",
        "name": "reIsOctal",
        "longname": "reIsOctal",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Built-in method references without a dependency on `root`. */",
        "meta": {
            "range": [
                571,
                594
            ],
            "filename": "toNumber.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020312",
                "name": "freeParseInt",
                "type": "Identifier",
                "value": "parseInt"
            }
        },
        "description": "Built-in method references without a dependency on `root`.",
        "name": "freeParseInt",
        "longname": "freeParseInt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */",
        "meta": {
            "range": [
                968,
                1558
            ],
            "filename": "toNumber.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020315",
                "name": "toNumber",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "other": "_.toNumber~other",
                "value": "_.toNumber~value",
                "isBinary": "_.toNumber~isBinary"
            }
        },
        "description": "Converts `value` to a number.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to process.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the number."
            }
        ],
        "examples": [
            "_.toNumber(3.2);\n// => 3.2\n\n_.toNumber(Number.MIN_VALUE);\n// => 5e-324\n\n_.toNumber(Infinity);\n// => Infinity\n\n_.toNumber('3.2');\n// => 3.2"
        ],
        "name": "toNumber",
        "longname": "_.toNumber",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1129,
                1197
            ],
            "filename": "toNumber.js",
            "lineno": 55,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020340",
                "name": "other",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "other",
        "longname": "_.toNumber~other",
        "kind": "member",
        "memberof": "_.toNumber",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1203,
                1249
            ],
            "filename": "toNumber.js",
            "lineno": 56,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020355",
                "name": "value",
                "type": "ConditionalExpression",
                "funcscope": "_.toNumber",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.toNumber~value",
        "kind": "member",
        "memberof": "_.toNumber",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1336,
                1369
            ],
            "filename": "toNumber.js",
            "lineno": 61,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020380",
                "name": "value",
                "type": "CallExpression",
                "funcscope": "_.toNumber",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "_.toNumber~value",
        "kind": "member",
        "memberof": "_.toNumber",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1377,
                1410
            ],
            "filename": "toNumber.js",
            "lineno": 62,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020389",
                "name": "isBinary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isBinary",
        "longname": "_.toNumber~isBinary",
        "kind": "member",
        "memberof": "_.toNumber",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1560,
                1585
            ],
            "filename": "toNumber.js",
            "lineno": 68,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020426",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toNumber",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "toPairs.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020434",
                "name": "createToPairs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createToPairs",
        "longname": "createToPairs",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                86
            ],
            "filename": "toPairs.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020439",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */",
        "meta": {
            "range": [
                665,
                694
            ],
            "filename": "toPairs.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020447",
                "name": "toPairs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of own enumerable string keyed-value pairs for `object`\nwhich can be consumed by `_.fromPairs`. If `object` is a map or set, its\nentries are returned.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "alias": "entries",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the key-value pairs."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.toPairs(new Foo);\n// => [['a', 1], ['b', 2]] (iteration order is not guaranteed)"
        ],
        "name": "entries",
        "longname": "_.entries",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                697,
                721
            ],
            "filename": "toPairs.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020453",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toPairs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                56
            ],
            "filename": "toPairsIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020461",
                "name": "createToPairs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createToPairs",
        "longname": "createToPairs",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                90
            ],
            "filename": "toPairsIn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020466",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of own and inherited enumerable string keyed-value pairs\n * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n * or set, its entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entriesIn\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairsIn(new Foo);\n * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n */",
        "meta": {
            "range": [
                697,
                730
            ],
            "filename": "toPairsIn.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020474",
                "name": "toPairsIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of own and inherited enumerable string keyed-value pairs\nfor `object` which can be consumed by `_.fromPairs`. If `object` is a map\nor set, its entries are returned.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "alias": "entriesIn",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the key-value pairs."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.toPairsIn(new Foo);\n// => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)"
        ],
        "name": "entriesIn",
        "longname": "_.entriesIn",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                733,
                759
            ],
            "filename": "toPairsIn.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020480",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toPairsIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "toPath.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020488",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                96
            ],
            "filename": "toPath.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020493",
                "name": "copyArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyArray",
        "longname": "copyArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                132
            ],
            "filename": "toPath.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020498",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                138,
                170
            ],
            "filename": "toPath.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020503",
                "name": "isSymbol",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isSymbol",
        "longname": "isSymbol",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                176,
                226
            ],
            "filename": "toPath.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020508",
                "name": "stringToPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToPath",
        "longname": "stringToPath",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                232,
                268
            ],
            "filename": "toPath.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020513",
                "name": "toKey",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toKey",
        "longname": "toKey",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                274,
                306
            ],
            "filename": "toPath.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020518",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */",
        "meta": {
            "range": [
                660,
                828
            ],
            "filename": "toPath.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020525",
                "name": "toPath",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `value` to a property path array.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new property path array."
            }
        ],
        "examples": [
            "_.toPath('a.b.c');\n// => ['a', 'b', 'c']\n\n_.toPath('a[0].b.c');\n// => ['a', '0', 'b', 'c']"
        ],
        "name": "toPath",
        "longname": "_.toPath",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                830,
                853
            ],
            "filename": "toPath.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020554",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toPath",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "toPlainObject.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020562",
                "name": "copyObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "copyObject",
        "longname": "copyObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                84
            ],
            "filename": "toPlainObject.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020567",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */",
        "meta": {
            "range": [
                658,
                734
            ],
            "filename": "toPlainObject.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020574",
                "name": "toPlainObject",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `value` to a plain object flattening inherited enumerable string\nkeyed properties of `value` to own properties of the plain object.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the converted plain object."
            }
        ],
        "examples": [
            "function Foo() {\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }"
        ],
        "name": "toPlainObject",
        "longname": "_.toPlainObject",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                736,
                766
            ],
            "filename": "toPlainObject.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020586",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toPlainObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "toSafeInteger.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020594",
                "name": "baseClamp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseClamp",
        "longname": "baseClamp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                88
            ],
            "filename": "toSafeInteger.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020599",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as references for various `Number` constants. */",
        "meta": {
            "range": [
                168,
                203
            ],
            "filename": "toSafeInteger.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020607",
                "name": "MAX_SAFE_INTEGER",
                "type": "Literal",
                "value": 9007199254740991
            }
        },
        "description": "Used as references for various `Number` constants.",
        "name": "MAX_SAFE_INTEGER",
        "longname": "MAX_SAFE_INTEGER",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to a safe integer. A safe integer can be compared and\n * represented correctly.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toSafeInteger(3.2);\n * // => 3\n *\n * _.toSafeInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toSafeInteger(Infinity);\n * // => 9007199254740991\n *\n * _.toSafeInteger('3.2');\n * // => 3\n */",
        "meta": {
            "range": [
                674,
                826
            ],
            "filename": "toSafeInteger.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020610",
                "name": "toSafeInteger",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `value` to a safe integer. A safe integer can be compared and\nrepresented correctly.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Returns the converted integer."
            }
        ],
        "examples": [
            "_.toSafeInteger(3.2);\n// => 3\n\n_.toSafeInteger(Number.MIN_VALUE);\n// => 0\n\n_.toSafeInteger(Infinity);\n// => 9007199254740991\n\n_.toSafeInteger('3.2');\n// => 3"
        ],
        "name": "toSafeInteger",
        "longname": "_.toSafeInteger",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                828,
                858
            ],
            "filename": "toSafeInteger.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020632",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toSafeInteger",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "toString.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020640",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */",
        "meta": {
            "range": [
                496,
                575
            ],
            "filename": "toString.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020647",
                "name": "toString",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `value` to a string. An empty string is returned for `null`\nand `undefined` values. The sign of `-0` is preserved.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Lang",
                "value": "Lang"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to convert.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the converted string."
            }
        ],
        "examples": [
            "_.toString(null);\n// => ''\n\n_.toString(-0);\n// => '-0'\n\n_.toString([1, 2, 3]);\n// => '1,2,3'"
        ],
        "name": "toString",
        "longname": "_.toString",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                577,
                602
            ],
            "filename": "toString.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020661",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Gets a date and retuns the timestamp of the number of seconds that have elapsed from that date since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @param {date} date\n * @author time\n * @returns {seconds} The concept of time.\n */",
        "meta": {
            "range": [
                320,
                408
            ],
            "filename": "toTime.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020670",
                "name": "toTime",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "date"
                ]
            },
            "vars": {
                "temp": "_.toTime~temp"
            }
        },
        "description": "Gets a date and retuns the timestamp of the number of seconds that have elapsed from that date since\nthe Unix epoch (1 January 1970 00:00:00 UTC).",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Date",
                "value": "Date"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "date"
                    ]
                },
                "name": "date"
            }
        ],
        "author": [
            "time"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "seconds"
                    ]
                },
                "description": "The concept of time."
            }
        ],
        "name": "toTime",
        "longname": "_.toTime",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                350,
                371
            ],
            "filename": "toTime.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020675",
                "name": "temp",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "temp",
        "longname": "_.toTime~temp",
        "kind": "member",
        "memberof": "_.toTime",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                410,
                433
            ],
            "filename": "toTime.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020688",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toTime",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "toUpper.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020696",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string`, as a whole, to upper case just like\n * [String#toUpperCase](https://mdn.io/toUpperCase).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the upper cased string.\n * @example\n *\n * _.toUpper('--foo-bar--');\n * // => '--FOO-BAR--'\n *\n * _.toUpper('fooBar');\n * // => 'FOOBAR'\n *\n * _.toUpper('__foo_bar__');\n * // => '__FOO_BAR__'\n */",
        "meta": {
            "range": [
                512,
                579
            ],
            "filename": "toUpper.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020703",
                "name": "toUpper",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "description": "Converts `string`, as a whole, to upper case just like\n[String#toUpperCase](https://mdn.io/toUpperCase).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the upper cased string."
            }
        ],
        "examples": [
            "_.toUpper('--foo-bar--');\n// => '--FOO-BAR--'\n\n_.toUpper('fooBar');\n// => 'FOOBAR'\n\n_.toUpper('__foo_bar__');\n// => '__FOO_BAR__'"
        ],
        "name": "toUpper",
        "longname": "_.toUpper",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                581,
                605
            ],
            "filename": "toUpper.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020715",
                "name": "module.exports",
                "type": "Identifier",
                "value": "toUpper",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                49
            ],
            "filename": "tokenize.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020725",
                "name": "natural",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "natural",
        "longname": "natural",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                57,
                101
            ],
            "filename": "tokenize.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020731",
                "name": "tokenizer",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tokenizer",
        "longname": "tokenizer",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                223
            ],
            "filename": "tokenize.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020738",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "string"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "transform.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020764",
                "name": "arrayEach",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayEach",
        "longname": "arrayEach",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                100
            ],
            "filename": "transform.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020769",
                "name": "baseCreate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseCreate",
        "longname": "baseCreate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                152
            ],
            "filename": "transform.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020774",
                "name": "baseForOwn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseForOwn",
        "longname": "baseForOwn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                158,
                208
            ],
            "filename": "transform.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020779",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                214,
                264
            ],
            "filename": "transform.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020784",
                "name": "getPrototype",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "getPrototype",
        "longname": "getPrototype",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                270,
                300
            ],
            "filename": "transform.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020789",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                306,
                338
            ],
            "filename": "transform.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020794",
                "name": "isBuffer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isBuffer",
        "longname": "isBuffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                344,
                380
            ],
            "filename": "transform.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020799",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                386,
                418
            ],
            "filename": "transform.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020804",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                424,
                464
            ],
            "filename": "transform.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020809",
                "name": "isTypedArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isTypedArray",
        "longname": "isTypedArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */",
        "meta": {
            "range": [
                1646,
                2310
            ],
            "filename": "transform.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020816",
                "name": "transform",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "iteratee",
                    "accumulator"
                ]
            },
            "vars": {
                "isArr": "_.transform~isArr",
                "isArrLike": "_.transform~isArrLike",
                "iteratee": "_.iteratee.iteratee",
                "Ctor": "_.transform~Ctor",
                "accumulator": "_.transform~accumulator",
                "": null
            }
        },
        "description": "An alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own\nenumerable string keyed properties thru `iteratee`, with each invocation\npotentially mutating the `accumulator` object. If `accumulator` is not\nprovided, a new object with the same `[[Prototype]]` will be used. The\niteratee is invoked with four arguments: (accumulator, value, key, object).\nIteratee functions may exit iteration early by explicitly returning `false`.",
        "scope": "static",
        "memberof": "_",
        "since": "1.3.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to iterate over.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function invoked per iteration.",
                "name": "iteratee"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "description": "The custom accumulator value.",
                "name": "accumulator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the accumulated value."
            }
        ],
        "examples": [
            "_.transform([2, 3, 4], function(result, n) {\n  result.push(n *= n);\n  return n % 2 == 0;\n}, []);\n// => [4, 9]\n\n_.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] }"
        ],
        "name": "transform",
        "longname": "_.transform",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1704,
                1727
            ],
            "filename": "transform.js",
            "lineno": 45,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020823",
                "name": "isArr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArr",
        "longname": "_.transform~isArr",
        "kind": "member",
        "memberof": "_.transform",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1735,
                1796
            ],
            "filename": "transform.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020828",
                "name": "isArrLike",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrLike",
        "longname": "_.transform~isArrLike",
        "kind": "member",
        "memberof": "_.transform",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1801,
                1837
            ],
            "filename": "transform.js",
            "lineno": 48,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020840",
                "name": "iteratee",
                "type": "CallExpression",
                "funcscope": "_.transform",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1876,
                1911
            ],
            "filename": "transform.js",
            "lineno": 50,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020852",
                "name": "Ctor",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Ctor",
        "longname": "_.transform~Ctor",
        "kind": "member",
        "memberof": "_.transform",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1940,
                1975
            ],
            "filename": "transform.js",
            "lineno": 52,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020863",
                "name": "accumulator",
                "type": "ConditionalExpression",
                "funcscope": "_.transform",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "accumulator",
        "longname": "_.transform~accumulator",
        "kind": "member",
        "memberof": "_.transform",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2022,
                2092
            ],
            "filename": "transform.js",
            "lineno": 55,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020876",
                "name": "accumulator",
                "type": "ConditionalExpression",
                "funcscope": "_.transform",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "accumulator",
        "longname": "_.transform~accumulator",
        "kind": "member",
        "memberof": "_.transform",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2117,
                2133
            ],
            "filename": "transform.js",
            "lineno": 58,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020890",
                "name": "accumulator",
                "type": "ObjectExpression",
                "funcscope": "_.transform",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "accumulator",
        "longname": "_.transform~accumulator",
        "kind": "member",
        "memberof": "_.transform",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2312,
                2338
            ],
            "filename": "transform.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020915",
                "name": "module.exports",
                "type": "Identifier",
                "value": "transform",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "trim.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020923",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "trim.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020928",
                "name": "castSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castSlice",
        "longname": "castSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                162
            ],
            "filename": "trim.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020933",
                "name": "charsEndIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "charsEndIndex",
        "longname": "charsEndIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                168,
                224
            ],
            "filename": "trim.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020938",
                "name": "charsStartIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "charsStartIndex",
        "longname": "charsStartIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                230,
                282
            ],
            "filename": "trim.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020943",
                "name": "stringToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToArray",
        "longname": "stringToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                288,
                320
            ],
            "filename": "trim.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020948",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match leading and trailing whitespace. */",
        "meta": {
            "range": [
                396,
                417
            ],
            "filename": "trim.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020956",
                "name": "reTrim",
                "type": "Literal",
                "value": "<RegExp /^\\s+|\\s+$/g>"
            }
        },
        "description": "Used to match leading and trailing whitespace.",
        "name": "reTrim",
        "longname": "reTrim",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */",
        "meta": {
            "range": [
                987,
                1469
            ],
            "filename": "trim.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020959",
                "name": "trim",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "chars",
                    "guard"
                ]
            },
            "vars": {
                "string": "_.trim~string",
                "chars": "_.trim~chars",
                "strSymbols": "_.trim~strSymbols",
                "chrSymbols": "_.trim~chrSymbols",
                "start": "_.trim~start",
                "end": "_.trim~end"
            }
        },
        "description": "Removes leading and trailing whitespace or specified characters from `string`.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to trim.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "whitespace",
                "description": "The characters to trim.",
                "name": "chars"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the trimmed string."
            }
        ],
        "examples": [
            "_.trim('  abc  ');\n// => 'abc'\n\n_.trim('-_-abc-_-', '_-');\n// => 'abc'\n\n_.map(['  foo  ', '  bar  '], _.trim);\n// => ['foo', 'bar']"
        ],
        "name": "trim",
        "longname": "_.trim",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1027,
                1052
            ],
            "filename": "trim.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020966",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.trim",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.trim~string",
        "kind": "member",
        "memberof": "_.trim",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1166,
                1193
            ],
            "filename": "trim.js",
            "lineno": 40,
            "columnno": 19,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100020992",
                "name": "chars",
                "type": "CallExpression",
                "funcscope": "_.trim",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chars",
        "longname": "_.trim~chars",
        "kind": "member",
        "memberof": "_.trim",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1227,
                1261
            ],
            "filename": "trim.js",
            "lineno": 43,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021001",
                "name": "strSymbols",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strSymbols",
        "longname": "_.trim~strSymbols",
        "kind": "member",
        "memberof": "_.trim",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1269,
                1302
            ],
            "filename": "trim.js",
            "lineno": 44,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021006",
                "name": "chrSymbols",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "chrSymbols",
        "longname": "_.trim~chrSymbols",
        "kind": "member",
        "memberof": "_.trim",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1310,
                1357
            ],
            "filename": "trim.js",
            "lineno": 45,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021011",
                "name": "start",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.trim~start",
        "kind": "member",
        "memberof": "_.trim",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1365,
                1412
            ],
            "filename": "trim.js",
            "lineno": 46,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021017",
                "name": "end",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.trim~end",
        "kind": "member",
        "memberof": "_.trim",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1471,
                1492
            ],
            "filename": "trim.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021036",
                "name": "module.exports",
                "type": "Identifier",
                "value": "trim",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "trimEnd.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021044",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "trimEnd.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021049",
                "name": "castSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castSlice",
        "longname": "castSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                162
            ],
            "filename": "trimEnd.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021054",
                "name": "charsEndIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "charsEndIndex",
        "longname": "charsEndIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                168,
                220
            ],
            "filename": "trimEnd.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021059",
                "name": "stringToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToArray",
        "longname": "stringToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                226,
                258
            ],
            "filename": "trimEnd.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021064",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match leading and trailing whitespace. */",
        "meta": {
            "range": [
                334,
                352
            ],
            "filename": "trimEnd.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021072",
                "name": "reTrimEnd",
                "type": "Literal",
                "value": "<RegExp /\\s+$/>"
            }
        },
        "description": "Used to match leading and trailing whitespace.",
        "name": "reTrimEnd",
        "longname": "reTrimEnd",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */",
        "meta": {
            "range": [
                852,
                1250
            ],
            "filename": "trimEnd.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021075",
                "name": "trimEnd",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "chars",
                    "guard"
                ]
            },
            "vars": {
                "string": "_.trimEnd~string",
                "chars": "_.trimEnd~chars",
                "strSymbols": "_.trimEnd~strSymbols",
                "end": "_.trimEnd~end"
            }
        },
        "description": "Removes trailing whitespace or specified characters from `string`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to trim.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "whitespace",
                "description": "The characters to trim.",
                "name": "chars"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the trimmed string."
            }
        ],
        "examples": [
            "_.trimEnd('  abc  ');\n// => '  abc'\n\n_.trimEnd('-_-abc-_-', '_-');\n// => '-_-abc'"
        ],
        "name": "trimEnd",
        "longname": "_.trimEnd",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                895,
                920
            ],
            "filename": "trimEnd.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021082",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.trimEnd",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.trimEnd~string",
        "kind": "member",
        "memberof": "_.trimEnd",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1037,
                1064
            ],
            "filename": "trimEnd.js",
            "lineno": 36,
            "columnno": 19,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021108",
                "name": "chars",
                "type": "CallExpression",
                "funcscope": "_.trimEnd",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chars",
        "longname": "_.trimEnd~chars",
        "kind": "member",
        "memberof": "_.trimEnd",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1098,
                1132
            ],
            "filename": "trimEnd.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021117",
                "name": "strSymbols",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strSymbols",
        "longname": "_.trimEnd~strSymbols",
        "kind": "member",
        "memberof": "_.trimEnd",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1140,
                1197
            ],
            "filename": "trimEnd.js",
            "lineno": 40,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021122",
                "name": "end",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.trimEnd~end",
        "kind": "member",
        "memberof": "_.trimEnd",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1252,
                1276
            ],
            "filename": "trimEnd.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021143",
                "name": "module.exports",
                "type": "Identifier",
                "value": "trimEnd",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "trimStart.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021151",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "trimStart.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021156",
                "name": "castSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castSlice",
        "longname": "castSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                166
            ],
            "filename": "trimStart.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021161",
                "name": "charsStartIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "charsStartIndex",
        "longname": "charsStartIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                172,
                224
            ],
            "filename": "trimStart.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021166",
                "name": "stringToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToArray",
        "longname": "stringToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                230,
                262
            ],
            "filename": "trimStart.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021171",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match leading and trailing whitespace. */",
        "meta": {
            "range": [
                338,
                358
            ],
            "filename": "trimStart.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021179",
                "name": "reTrimStart",
                "type": "Literal",
                "value": "<RegExp /^\\s+/>"
            }
        },
        "description": "Used to match leading and trailing whitespace.",
        "name": "reTrimStart",
        "longname": "reTrimStart",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */",
        "meta": {
            "range": [
                861,
                1262
            ],
            "filename": "trimStart.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021182",
                "name": "trimStart",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "chars",
                    "guard"
                ]
            },
            "vars": {
                "string": "_.trimStart~string",
                "chars": "_.trimStart~chars",
                "strSymbols": "_.trimStart~strSymbols",
                "start": "_.trimStart~start"
            }
        },
        "description": "Removes leading whitespace or specified characters from `string`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to trim.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "whitespace",
                "description": "The characters to trim.",
                "name": "chars"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the trimmed string."
            }
        ],
        "examples": [
            "_.trimStart('  abc  ');\n// => 'abc  '\n\n_.trimStart('-_-abc-_-', '_-');\n// => 'abc-_-'"
        ],
        "name": "trimStart",
        "longname": "_.trimStart",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                906,
                931
            ],
            "filename": "trimStart.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021189",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.trimStart",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.trimStart~string",
        "kind": "member",
        "memberof": "_.trimStart",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1050,
                1077
            ],
            "filename": "trimStart.js",
            "lineno": 36,
            "columnno": 19,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021215",
                "name": "chars",
                "type": "CallExpression",
                "funcscope": "_.trimStart",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chars",
        "longname": "_.trimStart~chars",
        "kind": "member",
        "memberof": "_.trimStart",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1111,
                1145
            ],
            "filename": "trimStart.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021224",
                "name": "strSymbols",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strSymbols",
        "longname": "_.trimStart~strSymbols",
        "kind": "member",
        "memberof": "_.trimStart",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1153,
                1210
            ],
            "filename": "trimStart.js",
            "lineno": 40,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021229",
                "name": "start",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "_.trimStart~start",
        "kind": "member",
        "memberof": "_.trimStart",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1264,
                1290
            ],
            "filename": "trimStart.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021247",
                "name": "module.exports",
                "type": "Identifier",
                "value": "trimStart",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "truncate.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021255",
                "name": "baseToString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseToString",
        "longname": "baseToString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                104
            ],
            "filename": "truncate.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021260",
                "name": "castSlice",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castSlice",
        "longname": "castSlice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                156
            ],
            "filename": "truncate.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021265",
                "name": "hasUnicode",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasUnicode",
        "longname": "hasUnicode",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                194
            ],
            "filename": "truncate.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021270",
                "name": "isObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                200,
                232
            ],
            "filename": "truncate.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021275",
                "name": "isRegExp",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isRegExp",
        "longname": "isRegExp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                238,
                284
            ],
            "filename": "truncate.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021280",
                "name": "stringSize",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringSize",
        "longname": "stringSize",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                290,
                342
            ],
            "filename": "truncate.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021285",
                "name": "stringToArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stringToArray",
        "longname": "stringToArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                348,
                382
            ],
            "filename": "truncate.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021290",
                "name": "toInteger",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toInteger",
        "longname": "toInteger",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                388,
                420
            ],
            "filename": "truncate.js",
            "lineno": 9,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021295",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used as default options for `_.truncate`. */",
        "meta": {
            "range": [
                491,
                516
            ],
            "filename": "truncate.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021303",
                "name": "DEFAULT_TRUNC_LENGTH",
                "type": "Literal",
                "value": 30
            }
        },
        "description": "Used as default options for `_.truncate`.",
        "name": "DEFAULT_TRUNC_LENGTH",
        "longname": "DEFAULT_TRUNC_LENGTH",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                522,
                552
            ],
            "filename": "truncate.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021306",
                "name": "DEFAULT_TRUNC_OMISSION",
                "type": "Literal",
                "value": "..."
            }
        },
        "undocumented": true,
        "name": "DEFAULT_TRUNC_OMISSION",
        "longname": "DEFAULT_TRUNC_OMISSION",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match `RegExp` flags from their coerced string values. */",
        "meta": {
            "range": [
                629,
                645
            ],
            "filename": "truncate.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021310",
                "name": "reFlags",
                "type": "Literal",
                "value": "<RegExp /\\w*$/>"
            }
        },
        "description": "Used to match `RegExp` flags from their coerced string values.",
        "name": "reFlags",
        "longname": "reFlags",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */",
        "meta": {
            "range": [
                1811,
                3388
            ],
            "filename": "truncate.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021313",
                "name": "truncate",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "options"
                ]
            },
            "vars": {
                "length": "_.truncate~length",
                "omission": "_.truncate~omission",
                "separator": "_.truncate~separator",
                "string": "_.truncate~string",
                "strLength": "_.truncate~strLength",
                "strSymbols": "_.truncate~strSymbols",
                "end": "_.truncate~end",
                "result": "_.result.result",
                "match": "_.truncate~match",
                "substring": "_.truncate~substring",
                "separator.lastIndex": "_.truncate~separator.lastIndex",
                "newEnd": "_.truncate~newEnd",
                "index": "_.truncate~index"
            }
        },
        "description": "Truncates `string` if it's longer than the given maximum string length.\nThe last characters of the truncated string are replaced with the omission\nstring which defaults to \"...\".",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to truncate.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "defaultvalue": "{}",
                "description": "The options object.",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "optional": true,
                "defaultvalue": 30,
                "description": "The maximum string length.",
                "name": "options.length"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "'...'",
                "description": "The string to indicate text is omitted.",
                "name": "options.omission"
            },
            {
                "type": {
                    "names": [
                        "RegExp",
                        "string"
                    ]
                },
                "optional": true,
                "description": "The separator pattern to truncate to.",
                "name": "options.separator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the truncated string."
            }
        ],
        "examples": [
            "_.truncate('hi-diddly-ho there, neighborino');\n// => 'hi-diddly-ho there, neighbo...'\n\n_.truncate('hi-diddly-ho there, neighborino', {\n  'length': 24,\n  'separator': ' '\n});\n// => 'hi-diddly-ho there,...'\n\n_.truncate('hi-diddly-ho there, neighborino', {\n  'length': 24,\n  'separator': /,? +/\n});\n// => 'hi-diddly-ho there...'\n\n_.truncate('hi-diddly-ho there, neighborino', {\n  'omission': ' [...]'\n});\n// => 'hi-diddly-ho there, neig [...]'"
        ],
        "name": "truncate",
        "longname": "_.truncate",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1854,
                1883
            ],
            "filename": "truncate.js",
            "lineno": 58,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021319",
                "name": "length",
                "type": "Identifier",
                "value": "DEFAULT_TRUNC_LENGTH"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.truncate~length",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1891,
                1924
            ],
            "filename": "truncate.js",
            "lineno": 59,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021322",
                "name": "omission",
                "type": "Identifier",
                "value": "DEFAULT_TRUNC_OMISSION"
            }
        },
        "undocumented": true,
        "name": "omission",
        "longname": "_.truncate~omission",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1962,
                2028
            ],
            "filename": "truncate.js",
            "lineno": 62,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021331",
                "name": "separator",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "separator",
        "longname": "_.truncate~separator",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2034,
                2099
            ],
            "filename": "truncate.js",
            "lineno": 63,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021342",
                "name": "length",
                "type": "ConditionalExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.truncate~length",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2105,
                2181
            ],
            "filename": "truncate.js",
            "lineno": 64,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021355",
                "name": "omission",
                "type": "ConditionalExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "omission",
        "longname": "_.truncate~omission",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2189,
                2214
            ],
            "filename": "truncate.js",
            "lineno": 66,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021368",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.truncate~string",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2223,
                2248
            ],
            "filename": "truncate.js",
            "lineno": 68,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021374",
                "name": "strLength",
                "type": "MemberExpression",
                "value": "string.length"
            }
        },
        "undocumented": true,
        "name": "strLength",
        "longname": "_.truncate~strLength",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2286,
                2320
            ],
            "filename": "truncate.js",
            "lineno": 70,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021385",
                "name": "strSymbols",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strSymbols",
        "longname": "_.truncate~strSymbols",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2326,
                2355
            ],
            "filename": "truncate.js",
            "lineno": 71,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021391",
                "name": "strLength",
                "type": "MemberExpression",
                "funcscope": "_.truncate",
                "value": "strSymbols.length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "strLength",
        "longname": "_.truncate~strLength",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2419,
                2454
            ],
            "filename": "truncate.js",
            "lineno": 76,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021404",
                "name": "end",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.truncate~end",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2504,
                2595
            ],
            "filename": "truncate.js",
            "lineno": 80,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021419",
                "name": "result",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.truncate~result",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2689,
                2717
            ],
            "filename": "truncate.js",
            "lineno": 88,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021451",
                "name": "end",
                "type": "BinaryExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "end",
        "longname": "_.truncate~end",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2809,
                2814
            ],
            "filename": "truncate.js",
            "lineno": 92,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021475",
                "name": "match"
            }
        },
        "undocumented": true,
        "name": "match",
        "longname": "_.truncate~match",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2826,
                2844
            ],
            "filename": "truncate.js",
            "lineno": 93,
            "columnno": 10,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021477",
                "name": "substring",
                "type": "Identifier",
                "value": "result"
            }
        },
        "undocumented": true,
        "name": "substring",
        "longname": "_.truncate~substring",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2886,
                2963
            ],
            "filename": "truncate.js",
            "lineno": 96,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021487",
                "name": "separator",
                "type": "CallExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "separator",
        "longname": "_.truncate~separator",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2979,
                3002
            ],
            "filename": "truncate.js",
            "lineno": 98,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021504",
                "name": "separator.lastIndex",
                "type": "Literal",
                "funcscope": "_.truncate",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "lastIndex",
        "longname": "_.truncate~separator.lastIndex",
        "kind": "member",
        "memberof": "_.truncate~separator",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3018,
                3051
            ],
            "filename": "truncate.js",
            "lineno": 99,
            "columnno": 14,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021510",
                "name": "match",
                "type": "CallExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "match",
        "longname": "_.truncate~match",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3068,
                3088
            ],
            "filename": "truncate.js",
            "lineno": 100,
            "columnno": 12,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021519",
                "name": "newEnd",
                "type": "MemberExpression",
                "value": "match.index"
            }
        },
        "undocumented": true,
        "name": "newEnd",
        "longname": "_.truncate~newEnd",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3104,
                3165
            ],
            "filename": "truncate.js",
            "lineno": 102,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021525",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.result.result",
        "kind": "member",
        "memberof": "_.result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3249,
                3286
            ],
            "filename": "truncate.js",
            "lineno": 105,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021551",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "_.truncate~index",
        "kind": "member",
        "memberof": "_.truncate",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3316,
                3347
            ],
            "filename": "truncate.js",
            "lineno": 107,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021565",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "_.truncate",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.result.result",
        "kind": "member",
        "memberof": "_.result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3390,
                3415
            ],
            "filename": "truncate.js",
            "lineno": 113,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021578",
                "name": "module.exports",
                "type": "Identifier",
                "value": "truncate",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                26
            ],
            "filename": "unary.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021586",
                "name": "ary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ary",
        "longname": "ary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that accepts up to one argument, ignoring any\n * additional arguments.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.unary(parseInt));\n * // => [6, 8, 10]\n */",
        "meta": {
            "range": [
                411,
                458
            ],
            "filename": "unary.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021593",
                "name": "unary",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func"
                ]
            }
        },
        "description": "Creates a function that accepts up to one argument, ignoring any\nadditional arguments.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to cap arguments for.",
                "name": "func"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new capped function."
            }
        ],
        "examples": [
            "_.map(['6', '8', '10'], _.unary(parseInt));\n// => [6, 8, 10]"
        ],
        "name": "unary",
        "longname": "_.unary",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                460,
                482
            ],
            "filename": "unary.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021603",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unary",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "unescape.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021611",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                100
            ],
            "filename": "unescape.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021616",
                "name": "unescapeHtmlChar",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unescapeHtmlChar",
        "longname": "unescapeHtmlChar",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to match HTML entities and HTML characters. */",
        "meta": {
            "range": [
                178,
                221
            ],
            "filename": "unescape.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021624",
                "name": "reEscapedHtml",
                "type": "Literal",
                "value": "<RegExp /&(?:amp|lt|gt|quot|#39);/g>"
            }
        },
        "description": "Used to match HTML entities and HTML characters.",
        "name": "reEscapedHtml",
        "longname": "reEscapedHtml",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                227,
                274
            ],
            "filename": "unescape.js",
            "lineno": 8,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021627",
                "name": "reHasEscapedHtml",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reHasEscapedHtml",
        "longname": "reHasEscapedHtml",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {escaped} string The string to unescape.\n * @author string\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */",
        "meta": {
            "range": [
                888,
                1065
            ],
            "filename": "unescape.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021634",
                "name": "unescape",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string"
                ]
            },
            "vars": {
                "string": "_.unescape~string"
            }
        },
        "description": "The inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\ntheir corresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional\nHTML entities use a third-party library like [_he_](https://mths.be/he).",
        "scope": "static",
        "memberof": "_",
        "since": "0.6.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "escaped"
                    ]
                },
                "description": "The string to unescape.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the unescaped string."
            }
        ],
        "examples": [
            "_.unescape('fred, barney, &amp; pebbles');\n// => 'fred, barney, & pebbles'"
        ],
        "name": "unescape",
        "longname": "_.unescape",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                918,
                943
            ],
            "filename": "unescape.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021639",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.unescape",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.unescape~string",
        "kind": "member",
        "memberof": "_.unescape",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1067,
                1092
            ],
            "filename": "unescape.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021661",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unescape",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "union.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021669",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                100
            ],
            "filename": "union.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021674",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                148
            ],
            "filename": "union.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021679",
                "name": "baseUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUniq",
        "longname": "baseUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                204
            ],
            "filename": "union.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021684",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {arrays} arrays The arrays to inspect.\n * @param {or} boolean_operator A boolean operator (e.g and, or etc)\n * @author array\n * @returns {array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */",
        "meta": {
            "range": [
                740,
                846
            ],
            "filename": "union.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021692",
                "name": "union",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of unique values, in order, from all given arrays using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "arrays"
                    ]
                },
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "or"
                    ]
                },
                "description": "A boolean operator (e.g and, or etc)",
                "name": "boolean_operator"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the new array of combined values."
            }
        ],
        "examples": [
            "_.union([2], [1, 2]);\n// => [2, 1]"
        ],
        "name": "union",
        "longname": "_.union",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                849,
                871
            ],
            "filename": "union.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021709",
                "name": "module.exports",
                "type": "Identifier",
                "value": "union",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "unionBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021717",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                108
            ],
            "filename": "unionBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021722",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                156
            ],
            "filename": "unionBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021727",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                204
            ],
            "filename": "unionBy.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021732",
                "name": "baseUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUniq",
        "longname": "baseUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                210,
                260
            ],
            "filename": "unionBy.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021737",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                266,
                290
            ],
            "filename": "unionBy.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021742",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */",
        "meta": {
            "range": [
                1109,
                1342
            ],
            "filename": "unionBy.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021750",
                "name": "unionBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.union` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich uniqueness is computed. Result values are chosen from the first\narray in which the value occurs. The iteratee is invoked with one argument:\n(value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of combined values."
            }
        ],
        "examples": [
            "_.unionBy([2.1], [1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n\n// The `_.property` iteratee shorthand.\n_.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]"
        ],
        "name": "unionBy",
        "longname": "_.unionBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1153,
                1176
            ],
            "filename": "unionBy.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021758",
                "name": "iteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1219,
                1239
            ],
            "filename": "unionBy.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021769",
                "name": "iteratee",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1345,
                1369
            ],
            "filename": "unionBy.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021786",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unionBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "unionWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021794",
                "name": "baseFlatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseFlatten",
        "longname": "baseFlatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                100
            ],
            "filename": "unionWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021799",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                148
            ],
            "filename": "unionWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021804",
                "name": "baseUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUniq",
        "longname": "baseUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                204
            ],
            "filename": "unionWith.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021809",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                210,
                234
            ],
            "filename": "unionWith.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021814",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */",
        "meta": {
            "range": [
                1027,
                1266
            ],
            "filename": "unionWith.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021822",
                "name": "unionWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.union` except that it accepts `comparator` which\nis invoked to compare elements of `arrays`. Result values are chosen from\nthe first array in which the value occurs. The comparator is invoked\nwith two arguments: (arrVal, othVal).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The comparator invoked per element.",
                "name": "comparator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of combined values."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.unionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]"
        ],
        "name": "unionWith",
        "longname": "_.unionWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1073,
                1098
            ],
            "filename": "unionWith.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021830",
                "name": "comparator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1102,
                1171
            ],
            "filename": "unionWith.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021836",
                "name": "comparator",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1269,
                1295
            ],
            "filename": "unionWith.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021857",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unionWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "uniq.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021865",
                "name": "baseUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUniq",
        "longname": "baseUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {array} array The array to inspect.\n * @author array\n * @returns {unique} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */",
        "meta": {
            "range": [
                624,
                705
            ],
            "filename": "uniq.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021872",
                "name": "uniq",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            }
        },
        "description": "Creates a duplicate-free version of an array, using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons, in which only the first occurrence of each element\nis kept. The order of result values is determined by the order they occur\nin the array.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "unique"
                    ]
                },
                "description": "Returns the new duplicate free array."
            }
        ],
        "examples": [
            "_.uniq([2, 1, 2]);\n// => [2, 1]"
        ],
        "name": "uniq",
        "longname": "_.uniq",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                707,
                728
            ],
            "filename": "uniq.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021888",
                "name": "module.exports",
                "type": "Identifier",
                "value": "uniq",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "uniqBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021896",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                102
            ],
            "filename": "uniqBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021901",
                "name": "baseUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUniq",
        "longname": "baseUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */",
        "meta": {
            "range": [
                899,
                1019
            ],
            "filename": "uniqBy.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021908",
                "name": "uniqBy",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            }
        },
        "description": "This method is like `_.uniq` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nuniqueness is computed. The order of result values is determined by the\norder they occur in the array. The iteratee is invoked with one argument:\n(value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new duplicate free array."
            }
        ],
        "examples": [
            "_.uniqBy([2.1, 1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n\n// The `_.property` iteratee shorthand.\n_.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]"
        ],
        "name": "uniqBy",
        "longname": "_.uniqBy",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1021,
                1044
            ],
            "filename": "uniqBy.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021929",
                "name": "module.exports",
                "type": "Identifier",
                "value": "uniqBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "uniqWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021937",
                "name": "baseUniq",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUniq",
        "longname": "baseUniq",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */",
        "meta": {
            "range": [
                760,
                953
            ],
            "filename": "uniqWith.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021944",
                "name": "uniqWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "comparator"
                ]
            },
            "vars": {
                "comparator": "_.uniqWith~comparator"
            }
        },
        "description": "This method is like `_.uniq` except that it accepts `comparator` which\nis invoked to compare elements of `array`. The order of result values is\ndetermined by the order they occur in the array.The comparator is invoked\nwith two arguments: (arrVal, othVal).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The comparator invoked per element.",
                "name": "comparator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new duplicate free array."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.uniqWith(objects, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]"
        ],
        "name": "uniqWith",
        "longname": "_.uniqWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                801,
                870
            ],
            "filename": "uniqWith.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021950",
                "name": "comparator",
                "type": "ConditionalExpression",
                "funcscope": "_.uniqWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "_.uniqWith~comparator",
        "kind": "member",
        "memberof": "_.uniqWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                955,
                980
            ],
            "filename": "uniqWith.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021973",
                "name": "module.exports",
                "type": "Identifier",
                "value": "uniqWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                36
            ],
            "filename": "uniqueId.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021981",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to generate unique IDs. */",
        "meta": {
            "range": [
                94,
                107
            ],
            "filename": "uniqueId.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021989",
                "name": "idCounter",
                "type": "Literal",
                "value": 0
            }
        },
        "description": "Used to generate unique IDs.",
        "name": "idCounter",
        "longname": "idCounter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */",
        "meta": {
            "range": [
                463,
                548
            ],
            "filename": "uniqueId.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021992",
                "name": "uniqueId",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "prefix"
                ]
            },
            "vars": {
                "id": "_.uniqueId~id"
            }
        },
        "description": "Generates a unique ID. If `prefix` is given, the ID is appended to it.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Util",
                "value": "Util"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The value to prefix the ID with.",
                "name": "prefix"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the unique ID."
            }
        ],
        "examples": [
            "_.uniqueId('contact_');\n// => 'contact_104'\n\n_.uniqueId();\n// => '105'"
        ],
        "name": "uniqueId",
        "longname": "_.uniqueId",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                497,
                513
            ],
            "filename": "uniqueId.js",
            "lineno": 26,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100021997",
                "name": "id",
                "type": "UpdateExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "_.uniqueId~id",
        "kind": "member",
        "memberof": "_.uniqueId",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                550,
                575
            ],
            "filename": "uniqueId.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022008",
                "name": "module.exports",
                "type": "Identifier",
                "value": "uniqueId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                48
            ],
            "filename": "unset.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022016",
                "name": "baseUnset",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUnset",
        "longname": "baseUnset",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */",
        "meta": {
            "range": [
                712,
                802
            ],
            "filename": "unset.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022023",
                "name": "unset",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path"
                ]
            }
        },
        "description": "Removes the property at `path` of `object`.\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to modify.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to unset.",
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "Returns `true` if the property is deleted, else `false`."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': 7 } }] };\n_.unset(object, 'a[0].b.c');\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n\n_.unset(object, ['a', '0', 'b', 'c']);\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };"
        ],
        "name": "unset",
        "longname": "_.unset",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                804,
                826
            ],
            "filename": "unset.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022039",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unset",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "unzip.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022047",
                "name": "arrayFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayFilter",
        "longname": "arrayFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                100
            ],
            "filename": "unzip.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022052",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                156
            ],
            "filename": "unzip.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022057",
                "name": "baseProperty",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseProperty",
        "longname": "baseProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                206
            ],
            "filename": "unzip.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022062",
                "name": "baseTimes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseTimes",
        "longname": "baseTimes",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                212,
                262
            ],
            "filename": "unzip.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022067",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                373,
                393
            ],
            "filename": "unzip.js",
            "lineno": 10,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022075",
                "name": "nativeMax",
                "type": "MemberExpression",
                "value": "Math.max"
            }
        },
        "undocumented": true,
        "name": "nativeMax",
        "longname": "nativeMax",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */",
        "meta": {
            "range": [
                949,
                1307
            ],
            "filename": "unzip.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022080",
                "name": "unzip",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array"
                ]
            },
            "vars": {
                "length": "_.unzip~length",
                "array": "_.unzip~array",
                "": null
            }
        },
        "description": "This method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-zip\nconfiguration.",
        "scope": "static",
        "memberof": "_",
        "since": "1.2.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array of grouped elements to process.",
                "name": "array"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of regrouped elements."
            }
        ],
        "examples": [
            "var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]\n\n_.unzip(zipped);\n// => [['a', 'b'], [1, 2], [true, false]]"
        ],
        "name": "unzip",
        "longname": "_.unzip",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1032,
                1042
            ],
            "filename": "unzip.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022095",
                "name": "length",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "_.unzip~length",
        "kind": "member",
        "memberof": "_.unzip",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1046,
                1204
            ],
            "filename": "unzip.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022099",
                "name": "array",
                "type": "CallExpression",
                "funcscope": "_.unzip",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "array",
        "longname": "_.unzip~array",
        "kind": "member",
        "memberof": "_.unzip",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1133,
                1173
            ],
            "filename": "unzip.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022113",
                "name": "length",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1309,
                1331
            ],
            "filename": "unzip.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022138",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unzip",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                40
            ],
            "filename": "unzipWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022146",
                "name": "apply",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                46,
                88
            ],
            "filename": "unzipWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022151",
                "name": "arrayMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayMap",
        "longname": "arrayMap",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                94,
                120
            ],
            "filename": "unzipWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022156",
                "name": "unzip",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unzip",
        "longname": "unzip",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */",
        "meta": {
            "range": [
                786,
                1052
            ],
            "filename": "unzipWith.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022163",
                "name": "unzipWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "array",
                    "iteratee"
                ]
            },
            "vars": {
                "result": "_.unzipWith~result",
                "": null
            }
        },
        "description": "This method is like `_.unzip` except that it accepts `iteratee` to specify\nhow regrouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
        "scope": "static",
        "memberof": "_",
        "since": "3.8.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array of grouped elements to process.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The function to combine\n regrouped values.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of regrouped elements."
            }
        ],
        "examples": [
            "var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n// => [[1, 10, 100], [2, 20, 200]]\n\n_.unzipWith(zipped, _.add);\n// => [3, 30, 300]"
        ],
        "name": "unzipWith",
        "longname": "_.unzipWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                883,
                904
            ],
            "filename": "unzipWith.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022179",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "_.unzipWith~result",
        "kind": "member",
        "memberof": "_.unzipWith",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1054,
                1080
            ],
            "filename": "unzipWith.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022205",
                "name": "module.exports",
                "type": "Identifier",
                "value": "unzipWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "update.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022213",
                "name": "baseUpdate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUpdate",
        "longname": "baseUpdate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                106
            ],
            "filename": "update.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022218",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.set` except that accepts `updater` to produce the\n * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n * is invoked with one argument: (value).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n * console.log(object.a[0].b.c);\n * // => 9\n *\n * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n * console.log(object.x[0].y.z);\n * // => 0\n */",
        "meta": {
            "range": [
                956,
                1082
            ],
            "filename": "update.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022225",
                "name": "update",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path",
                    "updater"
                ]
            }
        },
        "description": "This method is like `_.set` except that accepts `updater` to produce the\nvalue to set. Use `_.updateWith` to customize `path` creation. The `updater`\nis invoked with one argument: (value).\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.6.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to modify.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to set.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to produce the updated value.",
                "name": "updater"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.update(object, 'a[0].b.c', function(n) { return n * n; });\nconsole.log(object.a[0].b.c);\n// => 9\n\n_.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\nconsole.log(object.x[0].y.z);\n// => 0"
        ],
        "name": "update",
        "longname": "_.update",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1084,
                1107
            ],
            "filename": "update.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022245",
                "name": "module.exports",
                "type": "Identifier",
                "value": "update",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "updateWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022253",
                "name": "baseUpdate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseUpdate",
        "longname": "baseUpdate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                106
            ],
            "filename": "updateWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022258",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.update` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n * // => { '0': { '1': 'a' } }\n */",
        "meta": {
            "range": [
                962,
                1189
            ],
            "filename": "updateWith.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022265",
                "name": "updateWith",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object",
                    "path",
                    "updater",
                    "customizer"
                ]
            },
            "vars": {
                "customizer": "_.updateWith~customizer"
            }
        },
        "description": "This method is like `_.update` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
        "scope": "static",
        "memberof": "_",
        "since": "4.6.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to modify.",
                "name": "object"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "string"
                    ]
                },
                "description": "The path of the property to set.",
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The function to produce the updated value.",
                "name": "updater"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The function to customize assigned values.",
                "name": "customizer"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns `object`."
            }
        ],
        "examples": [
            "var object = {};\n\n_.updateWith(object, '[0][1]', _.constant('a'), Object);\n// => { '0': { '1': 'a' } }"
        ],
        "name": "updateWith",
        "longname": "_.updateWith",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1021,
                1090
            ],
            "filename": "updateWith.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022273",
                "name": "customizer",
                "type": "ConditionalExpression",
                "funcscope": "_.updateWith",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "customizer",
        "longname": "_.updateWith~customizer",
        "kind": "member",
        "memberof": "_.updateWith",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1191,
                1218
            ],
            "filename": "updateWith.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022297",
                "name": "module.exports",
                "type": "Identifier",
                "value": "updateWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "upperCase.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022305",
                "name": "createCompounder",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCompounder",
        "longname": "createCompounder",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts `string`, as space separated words, to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} string The string to convert.\n * @author string\n * @returns {upper_cased} Returns the upper cased string.\n * @example\n *\n * _.upperCase('--foo-bar');\n * // => 'FOO BAR'\n *\n * _.upperCase('fooBar');\n * // => 'FOO BAR'\n *\n * _.upperCase('__foo_bar__');\n * // => 'FOO BAR'\n */",
        "meta": {
            "range": [
                509,
                631
            ],
            "filename": "upperCase.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022313",
                "name": "upperCase",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts `string`, as space separated words, to upper case.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "author": [
            "string"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "upper_cased"
                    ]
                },
                "description": "Returns the upper cased string."
            }
        ],
        "examples": [
            "_.upperCase('--foo-bar');\n// => 'FOO BAR'\n\n_.upperCase('fooBar');\n// => 'FOO BAR'\n\n_.upperCase('__foo_bar__');\n// => 'FOO BAR'"
        ],
        "name": "upperCase",
        "longname": "_.upperCase",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                634,
                660
            ],
            "filename": "upperCase.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022335",
                "name": "module.exports",
                "type": "Identifier",
                "value": "upperCase",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                60
            ],
            "filename": "upperFirst.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022343",
                "name": "createCaseFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createCaseFirst",
        "longname": "createCaseFirst",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */",
        "meta": {
            "range": [
                419,
                462
            ],
            "filename": "upperFirst.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022351",
                "name": "upperFirst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Converts the first character of `string` to upper case.",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to convert.",
                "name": "string"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Returns the converted string."
            }
        ],
        "examples": [
            "_.upperFirst('fred');\n// => 'Fred'\n\n_.upperFirst('FRED');\n// => 'FRED'"
        ],
        "name": "upperFirst",
        "longname": "_.upperFirst",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                465,
                492
            ],
            "filename": "upperFirst.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022357",
                "name": "module.exports",
                "type": "Identifier",
                "value": "upperFirst",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                1175
            ],
            "filename": "util.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022365",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                52
            ],
            "filename": "util.js",
            "lineno": 2,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022370",
                "name": "attempt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "attempt",
        "longname": "module.exports.attempt",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                87
            ],
            "filename": "util.js",
            "lineno": 3,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022374",
                "name": "bindAll",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "bindAll",
        "longname": "module.exports.bindAll",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                91,
                116
            ],
            "filename": "util.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022378",
                "name": "cond",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "cond",
        "longname": "module.exports.cond",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                120,
                153
            ],
            "filename": "util.js",
            "lineno": 5,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022382",
                "name": "conforms",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "conforms",
        "longname": "module.exports.conforms",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                157,
                190
            ],
            "filename": "util.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022386",
                "name": "constant",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "constant",
        "longname": "module.exports.constant",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                194,
                229
            ],
            "filename": "util.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022390",
                "name": "defaultTo",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "defaultTo",
        "longname": "module.exports.defaultTo",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                233,
                258
            ],
            "filename": "util.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022394",
                "name": "flow",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flow",
        "longname": "module.exports.flow",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                262,
                297
            ],
            "filename": "util.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022398",
                "name": "flowRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flowRight",
        "longname": "module.exports.flowRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                301,
                334
            ],
            "filename": "util.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022402",
                "name": "identity",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "module.exports.identity",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                338,
                371
            ],
            "filename": "util.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022406",
                "name": "iteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "module.exports.iteratee",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                375,
                406
            ],
            "filename": "util.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022410",
                "name": "matches",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "matches",
        "longname": "module.exports.matches",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                410,
                457
            ],
            "filename": "util.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022414",
                "name": "matchesProperty",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "matchesProperty",
        "longname": "module.exports.matchesProperty",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                461,
                490
            ],
            "filename": "util.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022418",
                "name": "method",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "method",
        "longname": "module.exports.method",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                527
            ],
            "filename": "util.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022422",
                "name": "methodOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "methodOf",
        "longname": "module.exports.methodOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                531,
                558
            ],
            "filename": "util.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022426",
                "name": "mixin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mixin",
        "longname": "module.exports.mixin",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                562,
                587
            ],
            "filename": "util.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022430",
                "name": "noop",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "noop",
        "longname": "module.exports.noop",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                591,
                620
            ],
            "filename": "util.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022434",
                "name": "nthArg",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nthArg",
        "longname": "module.exports.nthArg",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                624,
                649
            ],
            "filename": "util.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022438",
                "name": "over",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "over",
        "longname": "module.exports.over",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                653,
                688
            ],
            "filename": "util.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022442",
                "name": "overEvery",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "overEvery",
        "longname": "module.exports.overEvery",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                692,
                725
            ],
            "filename": "util.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022446",
                "name": "overSome",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "overSome",
        "longname": "module.exports.overSome",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                729,
                762
            ],
            "filename": "util.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022450",
                "name": "property",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "property",
        "longname": "module.exports.property",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                766,
                803
            ],
            "filename": "util.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022454",
                "name": "propertyOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "propertyOf",
        "longname": "module.exports.propertyOf",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                807,
                834
            ],
            "filename": "util.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022458",
                "name": "range",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "range",
        "longname": "module.exports.range",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                838,
                875
            ],
            "filename": "util.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022462",
                "name": "rangeRight",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "rangeRight",
        "longname": "module.exports.rangeRight",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                879,
                914
            ],
            "filename": "util.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022466",
                "name": "stubArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stubArray",
        "longname": "module.exports.stubArray",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                918,
                953
            ],
            "filename": "util.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022470",
                "name": "stubFalse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stubFalse",
        "longname": "module.exports.stubFalse",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                957,
                994
            ],
            "filename": "util.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022474",
                "name": "stubObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stubObject",
        "longname": "module.exports.stubObject",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                998,
                1035
            ],
            "filename": "util.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022478",
                "name": "stubString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stubString",
        "longname": "module.exports.stubString",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1039,
                1072
            ],
            "filename": "util.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022482",
                "name": "stubTrue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stubTrue",
        "longname": "module.exports.stubTrue",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1076,
                1103
            ],
            "filename": "util.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022486",
                "name": "times",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "times",
        "longname": "module.exports.times",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1107,
                1136
            ],
            "filename": "util.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022490",
                "name": "toPath",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toPath",
        "longname": "module.exports.toPath",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1140,
                1173
            ],
            "filename": "util.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022494",
                "name": "uniqueId",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "uniqueId",
        "longname": "module.exports.uniqueId",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                42
            ],
            "filename": "value.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022501",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                0,
                42
            ],
            "filename": "valueOf.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022511",
                "name": "module.exports",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "values.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022521",
                "name": "baseValues",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseValues",
        "longname": "baseValues",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                80
            ],
            "filename": "values.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022526",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {string} string The object to query.\n * @author array\n * @returns {array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */",
        "meta": {
            "range": [
                655,
                747
            ],
            "filename": "values.js",
            "lineno": 33,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022533",
                "name": "values",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            }
        },
        "description": "Creates an array of the own enumerable string keyed property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
        "scope": "static",
        "since": "0.1.0",
        "memberof": "_",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The object to query.",
                "name": "string"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the array of property values."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.values(new Foo);\n// => [1, 2] (iteration order is not guaranteed)\n\n_.values('hi');\n// => ['h', 'i']"
        ],
        "name": "values",
        "longname": "_.values",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                749,
                772
            ],
            "filename": "values.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022550",
                "name": "module.exports",
                "type": "Identifier",
                "value": "values",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "valuesIn.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022558",
                "name": "baseValues",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseValues",
        "longname": "baseValues",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                84
            ],
            "filename": "valuesIn.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022563",
                "name": "keysIn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of the own and inherited enumerable string keyed property\n * values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.valuesIn(new Foo);\n * // => [1, 2, 3] (iteration order is not guaranteed)\n */",
        "meta": {
            "range": [
                622,
                718
            ],
            "filename": "valuesIn.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022570",
                "name": "valuesIn",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "object"
                ]
            }
        },
        "description": "Creates an array of the own and inherited enumerable string keyed property\nvalues of `object`.\n\n**Note:** Non-object values are coerced to objects.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Object",
                "value": "Object"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object to query.",
                "name": "object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the array of property values."
            }
        ],
        "examples": [
            "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.valuesIn(new Foo);\n// => [1, 2, 3] (iteration order is not guaranteed)"
        ],
        "name": "valuesIn",
        "longname": "_.valuesIn",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                720,
                745
            ],
            "filename": "valuesIn.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022587",
                "name": "module.exports",
                "type": "Identifier",
                "value": "valuesIn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                58
            ],
            "filename": "without.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022595",
                "name": "baseDifference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseDifference",
        "longname": "baseDifference",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                64,
                106
            ],
            "filename": "without.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022600",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                162
            ],
            "filename": "without.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022605",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {array} array The array to inspect.\n * @param {values} values The values to exclude.\n * @param {xor} boolean_operator\n * @author array\n * @returns {array} Returns the new array of filtered values.\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */",
        "meta": {
            "range": [
                757,
                884
            ],
            "filename": "without.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022613",
                "name": "without",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array excluding all given values using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.\n\n**Note:** Unlike `_.pull`, this method returns a new array.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "The array to inspect.",
                "name": "array"
            },
            {
                "type": {
                    "names": [
                        "values"
                    ]
                },
                "description": "The values to exclude.",
                "name": "values"
            },
            {
                "type": {
                    "names": [
                        "xor"
                    ]
                },
                "name": "boolean_operator"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "_.without([2, 1, 2, 3], 1, 2);\n// => [3]"
        ],
        "name": "without",
        "longname": "_.without",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                887,
                911
            ],
            "filename": "without.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022632",
                "name": "module.exports",
                "type": "Identifier",
                "value": "without",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                50
            ],
            "filename": "words.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022640",
                "name": "asciiWords",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "asciiWords",
        "longname": "asciiWords",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                110
            ],
            "filename": "words.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022645",
                "name": "hasUnicodeWord",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasUnicodeWord",
        "longname": "hasUnicodeWord",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                148
            ],
            "filename": "words.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022650",
                "name": "toString",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "toString",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                154,
                204
            ],
            "filename": "words.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022655",
                "name": "unicodeWords",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unicodeWords",
        "longname": "unicodeWords",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */",
        "meta": {
            "range": [
                782,
                1047
            ],
            "filename": "words.js",
            "lineno": 27,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022662",
                "name": "words",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "string",
                    "pattern",
                    "guard"
                ]
            },
            "vars": {
                "string": "_.words~string",
                "pattern": "_.words~pattern"
            }
        },
        "description": "Splits `string` into an array of its words.",
        "scope": "static",
        "memberof": "_",
        "since": "3.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "String",
                "value": "String"
            },
            {
                "originalTitle": "param-",
                "title": "param-",
                "text": "{Object} [guard] Enables use as an iteratee for methods like `_.map`.",
                "value": "{Object} [guard] Enables use as an iteratee for methods like `_.map`."
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "defaultvalue": "''",
                "description": "The string to inspect.",
                "name": "string"
            },
            {
                "type": {
                    "names": [
                        "RegExp",
                        "string"
                    ]
                },
                "optional": true,
                "description": "The pattern to match words.",
                "name": "pattern"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the words of `string`."
            }
        ],
        "examples": [
            "_.words('fred, barney, & pebbles');\n// => ['fred', 'barney', 'pebbles']\n\n_.words('fred, barney, & pebbles', /[^, ]+/g);\n// => ['fred', 'barney', '&', 'pebbles']"
        ],
        "name": "words",
        "longname": "_.words",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                825,
                850
            ],
            "filename": "words.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022669",
                "name": "string",
                "type": "CallExpression",
                "funcscope": "_.words",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "string",
        "longname": "_.words~string",
        "kind": "member",
        "memberof": "_.words",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                854,
                891
            ],
            "filename": "words.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022675",
                "name": "pattern",
                "type": "ConditionalExpression",
                "funcscope": "_.words",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "pattern",
        "longname": "_.words~pattern",
        "kind": "member",
        "memberof": "_.words",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1049,
                1071
            ],
            "filename": "words.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022706",
                "name": "module.exports",
                "type": "Identifier",
                "value": "words",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                54
            ],
            "filename": "wrap.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022714",
                "name": "castFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "castFunction",
        "longname": "castFunction",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                60,
                90
            ],
            "filename": "wrap.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022719",
                "name": "partial",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "partial",
        "longname": "partial",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a function that provides `value` to `wrapper` as its first\n * argument. Any additional arguments provided to the function are appended\n * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n * binding of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {*} value The value to wrap.\n * @param {Function} [wrapper=identity] The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('fred, barney, & pebbles');\n * // => '<p>fred, barney, &amp; pebbles</p>'\n */",
        "meta": {
            "range": [
                789,
                870
            ],
            "filename": "wrap.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022726",
                "name": "wrap",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "wrapper"
                ]
            }
        },
        "description": "Creates a function that provides `value` to `wrapper` as its first\nargument. Any additional arguments provided to the function are appended\nto those provided to the `wrapper`. The wrapper is invoked with the `this`\nbinding of the created function.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Function",
                "value": "Function"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to wrap.",
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "identity",
                "description": "The wrapper function.",
                "name": "wrapper"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Returns the new function."
            }
        ],
        "examples": [
            "var p = _.wrap(_.escape, function(func, text) {\n  return '<p>' + func(text) + '</p>';\n});\n\np('fred, barney, & pebbles');\n// => '<p>fred, barney, &amp; pebbles</p>'"
        ],
        "name": "wrap",
        "longname": "_.wrap",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                872,
                893
            ],
            "filename": "wrap.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022739",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrap",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "wrapperAt.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022747",
                "name": "LazyWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LazyWrapper",
        "longname": "LazyWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                110
            ],
            "filename": "wrapperAt.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022752",
                "name": "LodashWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LodashWrapper",
        "longname": "LodashWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                154
            ],
            "filename": "wrapperAt.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022757",
                "name": "baseAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseAt",
        "longname": "baseAt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                160,
                202
            ],
            "filename": "wrapperAt.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022762",
                "name": "flatRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatRest",
        "longname": "flatRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                208,
                248
            ],
            "filename": "wrapperAt.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022767",
                "name": "isIndex",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isIndex",
        "longname": "isIndex",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                254,
                278
            ],
            "filename": "wrapperAt.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022772",
                "name": "thru",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "thru",
        "longname": "thru",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */",
        "meta": {
            "filename": "wrapperAt.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "This method is the wrapper version of `_.at`.",
        "name": "at",
        "memberof": "_",
        "since": "1.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "Array.<string>"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The property paths to pick.",
                "name": "paths"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\n_(object).at(['a[0].b.c', 'a[1]']).value();\n// => [3, 4]"
        ],
        "scope": "static",
        "longname": "_.at",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                685,
                1370
            ],
            "filename": "wrapperAt.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022780",
                "name": "wrapperAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "wrapperAt",
        "longname": "wrapperAt",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                730,
                751
            ],
            "filename": "wrapperAt.js",
            "lineno": 27,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022788",
                "name": "length",
                "type": "MemberExpression",
                "value": "paths.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                759,
                788
            ],
            "filename": "wrapperAt.js",
            "lineno": 28,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022793",
                "name": "start",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "start",
        "longname": "<anonymous>~start",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                796,
                820
            ],
            "filename": "wrapperAt.js",
            "lineno": 29,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022801",
                "name": "value",
                "type": "MemberExpression",
                "value": "this.__wrapped__"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "<anonymous>~value",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                828,
                892
            ],
            "filename": "wrapperAt.js",
            "lineno": 30,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022806",
                "name": "interceptor",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "interceptor",
        "longname": "<anonymous>~interceptor",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1043,
                1096
            ],
            "filename": "wrapperAt.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022844",
                "name": "value",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "<anonymous>~value",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1129,
                1141
            ],
            "filename": "wrapperAt.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022866",
                "name": "func",
                "type": "Identifier",
                "value": "thru"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1147,
                1168
            ],
            "filename": "wrapperAt.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022868",
                "name": "args",
                "type": "ArrayExpression",
                "value": "[\"interceptor\"]"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "args",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1174,
                1194
            ],
            "filename": "wrapperAt.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022871",
                "name": "thisArg",
                "type": "Identifier",
                "value": "undefined"
            }
        },
        "undocumented": true,
        "name": "thisArg",
        "longname": "thisArg",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1373,
                1399
            ],
            "filename": "wrapperAt.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022903",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperAt",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                30
            ],
            "filename": "wrapperChain.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022911",
                "name": "chain",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "chain",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n *\n * @name chain\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 }\n * ];\n *\n * // A sequence without explicit chaining.\n * _(users).head();\n * // => { 'user': 'barney', 'age': 36 }\n *\n * // A sequence with explicit chaining.\n * _(users)\n *   .chain()\n *   .head()\n *   .pick('user')\n *   .value();\n * // => { 'user': 'barney' }\n */",
        "meta": {
            "filename": "wrapperChain.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Creates a `lodash` wrapper instance with explicit method chain sequences enabled.",
        "name": "chain",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "var users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// A sequence without explicit chaining.\n_(users).head();\n// => { 'user': 'barney', 'age': 36 }\n\n// A sequence with explicit chaining.\n_(users)\n  .chain()\n  .head()\n  .pick('user')\n  .value();\n// => { 'user': 'barney' }"
        ],
        "scope": "static",
        "longname": "_.chain",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                639,
                688
            ],
            "filename": "wrapperChain.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022918",
                "name": "wrapperChain",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrapperChain",
        "longname": "wrapperChain",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                690,
                719
            ],
            "filename": "wrapperChain.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022926",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperChain",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "wrapperLodash.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022934",
                "name": "LazyWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LazyWrapper",
        "longname": "LazyWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                110
            ],
            "filename": "wrapperLodash.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022939",
                "name": "LodashWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LodashWrapper",
        "longname": "LodashWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                162
            ],
            "filename": "wrapperLodash.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022944",
                "name": "baseLodash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseLodash",
        "longname": "baseLodash",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                168,
                198
            ],
            "filename": "wrapperLodash.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022949",
                "name": "isArray",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                204,
                244
            ],
            "filename": "wrapperLodash.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022954",
                "name": "isObjectLike",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isObjectLike",
        "longname": "isObjectLike",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                250,
                300
            ],
            "filename": "wrapperLodash.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022959",
                "name": "wrapperClone",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "wrapperClone",
        "longname": "wrapperClone",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used for built-in method references. */",
        "meta": {
            "range": [
                366,
                396
            ],
            "filename": "wrapperLodash.js",
            "lineno": 11,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022967",
                "name": "objectProto",
                "type": "MemberExpression",
                "value": "Object.prototype"
            }
        },
        "description": "Used for built-in method references.",
        "name": "objectProto",
        "longname": "objectProto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/** Used to check objects for own properties. */",
        "meta": {
            "range": [
                452,
                495
            ],
            "filename": "wrapperLodash.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022973",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "objectProto.hasOwnProperty"
            }
        },
        "description": "Used to check objects for own properties.",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */",
        "meta": {
            "filename": "wrapperLodash.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Creates a `lodash` object which wraps `value` to enable implicit method\nchain sequences. Methods that operate on and return arrays, collections,\nand functions can be chained together. Methods that retrieve a single value\nor may return a primitive value will automatically end the chain sequence\nand return the unwrapped value. Otherwise, the value must be unwrapped\nwith `_#value`.\n\nExplicit chain sequences, which must be unwrapped with `_#value`, may be\nenabled using `_.chain`.\n\nThe execution of chained methods is lazy, that is, it's deferred until\n`_#value` is implicitly or explicitly called.\n\nLazy evaluation allows several methods to support shortcut fusion.\nShortcut fusion is an optimization to merge iteratee calls; this avoids\nthe creation of intermediate arrays and can greatly reduce the number of\niteratee executions. Sections of a chain sequence qualify for shortcut\nfusion if the section is applied to an array and iteratees accept only\none argument. The heuristic for whether a section qualifies for shortcut\nfusion is subject to change.\n\nChaining is supported in custom builds as long as the `_#value` method is\ndirectly or indirectly included in the build.\n\nIn addition to lodash methods, wrappers have `Array` and `String` methods.\n\nThe wrapper `Array` methods are:\n`concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\nThe wrapper `String` methods are:\n`replace` and `split`\n\nThe wrapper methods that support shortcut fusion are:\n`at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n`findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n`tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\nThe chainable wrapper methods are:\n`after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n`before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n`commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n`curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n`difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n`dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n`flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n`flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n`functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n`intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n`keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n`memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n`nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n`overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n`pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n`pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n`remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n`slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n`takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n`toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n`union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n`unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n`valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n`zipObject`, `zipObjectDeep`, and `zipWith`\n\nThe wrapper methods that are **not** chainable by default are:\n`add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n`cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n`defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n`escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n`findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n`forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n`hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n`isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n`isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n`isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n`isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n`isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n`isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n`isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n`lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n`min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n`padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n`repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n`snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n`sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n`stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n`template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n`toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n`trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n`upperFirst`, `value`, and `words`",
        "name": "_",
        "kind": "class",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The value to wrap in a `lodash` instance.",
                "name": "value"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "function square(n) {\n  return n * n;\n}\n\nvar wrapped = _([1, 2, 3]);\n\n// Returns an unwrapped value.\nwrapped.reduce(_.add);\n// => 6\n\n// Returns a wrapped value.\nvar squares = wrapped.map(square);\n\n_.isArray(squares);\n// => false\n\n_.isArray(squares.value());\n// => true"
        ],
        "longname": "_",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6526,
                6835
            ],
            "filename": "wrapperLodash.js",
            "lineno": 133,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100022978",
                "name": "lodash",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value"
                ]
            }
        },
        "undocumented": true,
        "name": "lodash",
        "longname": "lodash",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6928,
                6965
            ],
            "filename": "wrapperLodash.js",
            "lineno": 147,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023029",
                "name": "lodash.prototype.constructor",
                "type": "Identifier",
                "value": "lodash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "constructor",
        "longname": "lodash#constructor",
        "kind": "member",
        "memberof": "lodash",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6968,
                6991
            ],
            "filename": "wrapperLodash.js",
            "lineno": 149,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023037",
                "name": "module.exports",
                "type": "Identifier",
                "value": "lodash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "wrapperReverse.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023045",
                "name": "LazyWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LazyWrapper",
        "longname": "LazyWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                110
            ],
            "filename": "wrapperReverse.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023050",
                "name": "LodashWrapper",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LodashWrapper",
        "longname": "LodashWrapper",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                146
            ],
            "filename": "wrapperReverse.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023055",
                "name": "reverse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "reverse",
        "longname": "reverse",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                152,
                176
            ],
            "filename": "wrapperReverse.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023060",
                "name": "thru",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "thru",
        "longname": "thru",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is the wrapper version of `_.reverse`.\n *\n * **Note:** This method mutates the wrapped array.\n *\n * @name reverse\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _(array).reverse().value()\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */",
        "meta": {
            "filename": "wrapperReverse.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "This method is the wrapper version of `_.reverse`.\n\n**Note:** This method mutates the wrapped array.",
        "name": "reverse",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new `lodash` wrapper instance."
            }
        ],
        "examples": [
            "var array = [1, 2, 3];\n\n_(array).reverse().value()\n// => [3, 2, 1]\n\nconsole.log(array);\n// => [3, 2, 1]"
        ],
        "scope": "static",
        "longname": "_.reverse",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                581,
                1017
            ],
            "filename": "wrapperReverse.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023067",
                "name": "wrapperReverse",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "value": "wrapperReverse~value",
                "wrapped": "wrapperReverse~wrapped"
            }
        },
        "undocumented": true,
        "name": "wrapperReverse",
        "longname": "wrapperReverse",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                615,
                639
            ],
            "filename": "wrapperReverse.js",
            "lineno": 29,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023071",
                "name": "value",
                "type": "MemberExpression",
                "value": "this.__wrapped__"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "wrapperReverse~value",
        "kind": "member",
        "memberof": "wrapperReverse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                687,
                702
            ],
            "filename": "wrapperReverse.js",
            "lineno": 31,
            "columnno": 8,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023082",
                "name": "wrapped",
                "type": "Identifier",
                "value": "value"
            }
        },
        "undocumented": true,
        "name": "wrapped",
        "longname": "wrapperReverse~wrapped",
        "kind": "member",
        "memberof": "wrapperReverse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                745,
                776
            ],
            "filename": "wrapperReverse.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023093",
                "name": "wrapped",
                "type": "NewExpression",
                "funcscope": "wrapperReverse",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrapped",
        "longname": "wrapperReverse~wrapped",
        "kind": "member",
        "memberof": "wrapperReverse",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                788,
                815
            ],
            "filename": "wrapperReverse.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023099",
                "name": "wrapped",
                "type": "CallExpression",
                "funcscope": "wrapperReverse",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrapped",
        "longname": "wrapperReverse~wrapped",
        "kind": "member",
        "memberof": "wrapperReverse",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                854,
                866
            ],
            "filename": "wrapperReverse.js",
            "lineno": 37,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023113",
                "name": "func",
                "type": "Identifier",
                "value": "thru"
            }
        },
        "undocumented": true,
        "name": "func",
        "longname": "func",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                874,
                891
            ],
            "filename": "wrapperReverse.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023115",
                "name": "args",
                "type": "ArrayExpression",
                "value": "[\"reverse\"]"
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "args",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                899,
                919
            ],
            "filename": "wrapperReverse.js",
            "lineno": 39,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023118",
                "name": "thisArg",
                "type": "Identifier",
                "value": "undefined"
            }
        },
        "undocumented": true,
        "name": "thisArg",
        "longname": "thisArg",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1019,
                1050
            ],
            "filename": "wrapperReverse.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023134",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperReverse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                62
            ],
            "filename": "wrapperValue.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023142",
                "name": "baseWrapperValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseWrapperValue",
        "longname": "baseWrapperValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Executes the chain sequence to resolve the unwrapped value.\n *\n * @name value\n * @memberOf _\n * @since 0.1.0\n * @alias toJSON, valueOf\n * @category Seq\n * @returns {*} Returns the resolved unwrapped value.\n * @example\n *\n * _([1, 2, 3]).value();\n * // => [1, 2, 3]\n */",
        "meta": {
            "filename": "wrapperValue.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {}
        },
        "description": "Executes the chain sequence to resolve the unwrapped value.",
        "name": "value",
        "memberof": "_",
        "since": "0.1.0",
        "alias": "toJSON, valueOf",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Seq",
                "value": "Seq"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Returns the resolved unwrapped value."
            }
        ],
        "examples": [
            "_([1, 2, 3]).value();\n// => [1, 2, 3]"
        ],
        "longname": "value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                356,
                446
            ],
            "filename": "wrapperValue.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023149",
                "name": "wrapperValue",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "wrapperValue",
        "longname": "wrapperValue",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                448,
                477
            ],
            "filename": "wrapperValue.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023162",
                "name": "module.exports",
                "type": "Identifier",
                "value": "wrapperValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21,
                39
            ],
            "filename": "writeFile.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023172",
                "name": "fs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fs",
        "longname": "fs",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                42,
                140
            ],
            "filename": "writeFile.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023178",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "data",
                    "file"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "xor.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023200",
                "name": "arrayFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayFilter",
        "longname": "arrayFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                100
            ],
            "filename": "xor.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023205",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                146
            ],
            "filename": "xor.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023210",
                "name": "baseXor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseXor",
        "longname": "baseXor",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                152,
                202
            ],
            "filename": "xor.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023215",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of unique values that is the\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the given arrays. The order of result values is determined by the order\n * they occur in the arrays.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Array\n * @param {arrays} arrays The arrays to inspect.\n * @param {xor} boolean_operator A boolean operator (e.g and, or etc)\n * @author array\n * @returns {array} Returns the new array of filtered values.\n * @example\n *\n * _.xor([2, 1], [2, 3]);\n * // => [1, 3]\n */",
        "meta": {
            "range": [
                785,
                879
            ],
            "filename": "xor.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023223",
                "name": "xor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of unique values that is the\n[symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\nof the given arrays. The order of result values is determined by the order\nthey occur in the arrays.",
        "scope": "static",
        "memberof": "_",
        "since": "2.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "arrays"
                    ]
                },
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "xor"
                    ]
                },
                "description": "A boolean operator (e.g and, or etc)",
                "name": "boolean_operator"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "_.xor([2, 1], [2, 3]);\n// => [1, 3]"
        ],
        "name": "xor",
        "longname": "_.xor",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                882,
                902
            ],
            "filename": "xor.js",
            "lineno": 31,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023238",
                "name": "module.exports",
                "type": "Identifier",
                "value": "xor",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "xorBy.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023246",
                "name": "arrayFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayFilter",
        "longname": "arrayFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                108
            ],
            "filename": "xorBy.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023251",
                "name": "baseIteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseIteratee",
        "longname": "baseIteratee",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                156
            ],
            "filename": "xorBy.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023256",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                202
            ],
            "filename": "xorBy.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023261",
                "name": "baseXor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseXor",
        "longname": "baseXor",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                208,
                258
            ],
            "filename": "xorBy.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023266",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                264,
                288
            ],
            "filename": "xorBy.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023271",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The order of result values is determined\n * by the order they occur in the arrays. The iteratee is invoked with one\n * argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2, 3.4]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */",
        "meta": {
            "range": [
                1104,
                1325
            ],
            "filename": "xorBy.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023279",
                "name": "xorBy",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.xor` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich by which they're compared. The order of result values is determined\nby the order they occur in the arrays. The iteratee is invoked with one\nargument: (value).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "_.identity",
                "description": "The iteratee invoked per element.",
                "name": "iteratee"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "_.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2, 3.4]\n\n// The `_.property` iteratee shorthand.\n_.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 2 }]"
        ],
        "name": "xorBy",
        "longname": "_.xorBy",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1146,
                1169
            ],
            "filename": "xorBy.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023287",
                "name": "iteratee",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1212,
                1232
            ],
            "filename": "xorBy.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023298",
                "name": "iteratee",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1328,
                1350
            ],
            "filename": "xorBy.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023313",
                "name": "module.exports",
                "type": "Identifier",
                "value": "xorBy",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "xorWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023321",
                "name": "arrayFilter",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arrayFilter",
        "longname": "arrayFilter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                100
            ],
            "filename": "xorWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023326",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                146
            ],
            "filename": "xorWith.js",
            "lineno": 3,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023331",
                "name": "baseXor",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseXor",
        "longname": "baseXor",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                152,
                202
            ],
            "filename": "xorWith.js",
            "lineno": 4,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023336",
                "name": "isArrayLikeObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isArrayLikeObject",
        "longname": "isArrayLikeObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                208,
                232
            ],
            "filename": "xorWith.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023341",
                "name": "last",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.xor` except that it accepts `comparator` which is\n * invoked to compare elements of `arrays`. The order of result values is\n * determined by the order they occur in the arrays. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.xorWith(objects, others, _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */",
        "meta": {
            "range": [
                1008,
                1235
            ],
            "filename": "xorWith.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023349",
                "name": "xorWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.xor` except that it accepts `comparator` which is\ninvoked to compare elements of `arrays`. The order of result values is\ndetermined by the order they occur in the arrays. The comparator is invoked\nwith two arguments: (arrVal, othVal).",
        "scope": "static",
        "memberof": "_",
        "since": "4.0.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to inspect.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The comparator invoked per element.",
                "name": "comparator"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of filtered values."
            }
        ],
        "examples": [
            "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.xorWith(objects, others, _.isEqual);\n// => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]"
        ],
        "name": "xorWith",
        "longname": "_.xorWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1052,
                1077
            ],
            "filename": "xorWith.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023357",
                "name": "comparator",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1081,
                1150
            ],
            "filename": "xorWith.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023363",
                "name": "comparator",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "<anonymous>~comparator",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1238,
                1262
            ],
            "filename": "xorWith.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023382",
                "name": "module.exports",
                "type": "Identifier",
                "value": "xorWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "zip.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023390",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                78
            ],
            "filename": "zip.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023395",
                "name": "unzip",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unzip",
        "longname": "unzip",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n */",
        "meta": {
            "range": [
                587,
                608
            ],
            "filename": "zip.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023403",
                "name": "zip",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Creates an array of grouped elements, the first of which contains the\nfirst elements of the given arrays, the second of which contains the\nsecond elements of the given arrays, and so on.",
        "scope": "static",
        "memberof": "_",
        "since": "0.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "variable": true,
                "description": "The arrays to process.",
                "name": "arrays"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Returns the new array of grouped elements."
            }
        ],
        "examples": [
            "_.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]"
        ],
        "name": "zip",
        "longname": "_.zip",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                611,
                631
            ],
            "filename": "zip.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023409",
                "name": "module.exports",
                "type": "Identifier",
                "value": "zip",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                52
            ],
            "filename": "zipObject.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023417",
                "name": "assignValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "assignValue",
        "longname": "assignValue",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                58,
                110
            ],
            "filename": "zipObject.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023422",
                "name": "baseZipObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseZipObject",
        "longname": "baseZipObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */",
        "meta": {
            "range": [
                566,
                667
            ],
            "filename": "zipObject.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023429",
                "name": "zipObject",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "props",
                    "values"
                ]
            }
        },
        "description": "This method is like `_.fromPairs` except that it accepts two arrays,\none of property identifiers and one of corresponding values.",
        "scope": "static",
        "memberof": "_",
        "since": "0.4.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "defaultvalue": "[]",
                "description": "The property identifiers.",
                "name": "props"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "defaultvalue": "[]",
                "description": "The property values.",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "_.zipObject(['a', 'b'], [1, 2]);\n// => { 'a': 1, 'b': 2 }"
        ],
        "name": "zipObject",
        "longname": "_.zipObject",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                669,
                695
            ],
            "filename": "zipObject.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023445",
                "name": "module.exports",
                "type": "Identifier",
                "value": "zipObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                44
            ],
            "filename": "zipObjectDeep.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023453",
                "name": "baseSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseSet",
        "longname": "baseSet",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                102
            ],
            "filename": "zipObjectDeep.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023458",
                "name": "baseZipObject",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseZipObject",
        "longname": "baseZipObject",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.zipObject` except that it supports property paths.\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n */",
        "meta": {
            "range": [
                541,
                642
            ],
            "filename": "zipObjectDeep.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023465",
                "name": "zipObjectDeep",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "props",
                    "values"
                ]
            }
        },
        "description": "This method is like `_.zipObject` except that it supports property paths.",
        "scope": "static",
        "memberof": "_",
        "since": "4.1.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "defaultvalue": "[]",
                "description": "The property identifiers.",
                "name": "props"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "optional": true,
                "defaultvalue": "[]",
                "description": "The property values.",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Returns the new object."
            }
        ],
        "examples": [
            "_.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n// => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }"
        ],
        "name": "zipObjectDeep",
        "longname": "_.zipObjectDeep",
        "kind": "function"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                644,
                674
            ],
            "filename": "zipObjectDeep.js",
            "lineno": 25,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023481",
                "name": "module.exports",
                "type": "Identifier",
                "value": "zipObjectDeep",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4,
                46
            ],
            "filename": "zipWith.js",
            "lineno": 1,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023489",
                "name": "baseRest",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "baseRest",
        "longname": "baseRest",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                52,
                86
            ],
            "filename": "zipWith.js",
            "lineno": 2,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023494",
                "name": "unzipWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "unzipWith",
        "longname": "unzipWith",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {arrays} arrays An array of arrays.\n * @param {function} iteratee A function to combine grouped values.\n * @author array\n * @returns {array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */",
        "meta": {
            "range": [
                692,
                946
            ],
            "filename": "zipWith.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023502",
                "name": "zipWith",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "This method is like `_.zip` except that it accepts `iteratee` to specify\nhow grouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
        "scope": "static",
        "memberof": "_",
        "since": "3.8.0",
        "tags": [
            {
                "originalTitle": "category",
                "title": "category",
                "text": "Array",
                "value": "Array"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "arrays"
                    ]
                },
                "description": "An array of arrays.",
                "name": "arrays"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "A function to combine grouped values.",
                "name": "iteratee"
            }
        ],
        "author": [
            "array"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Returns the new array of grouped elements."
            }
        ],
        "examples": [
            "_.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n  return a + b + c;\n});\n// => [111, 222]"
        ],
        "name": "zipWith",
        "longname": "_.zipWith",
        "kind": "member"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                736,
                758
            ],
            "filename": "zipWith.js",
            "lineno": 27,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023510",
                "name": "length",
                "type": "MemberExpression",
                "value": "arrays.length"
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                766,
                820
            ],
            "filename": "zipWith.js",
            "lineno": 28,
            "columnno": 6,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023515",
                "name": "iteratee",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "<anonymous>~iteratee",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                825,
                904
            ],
            "filename": "zipWith.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023528",
                "name": "iteratee",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "iteratee",
        "longname": "_.iteratee.iteratee",
        "kind": "member",
        "memberof": "_.iteratee",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                949,
                973
            ],
            "filename": "zipWith.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library",
            "code": {
                "id": "astnode100023548",
                "name": "module.exports",
                "type": "Identifier",
                "value": "zipWith",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/add.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/after.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/array.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/ary.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/assign.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/assignIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/assignInWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/assignWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/at.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/attempt.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/before.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/bind.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/bindAll.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/bindKey.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/camelCase.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/capitalize.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/castArray.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/ceil.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/chain.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/chunk.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/clamp.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/clone.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/cloneDeep.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/cloneDeepWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/cloneWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/collection.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/commit.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/compact.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/concat.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/cond.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/conforms.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/conformsTo.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/constant.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/countBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/create.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/curry.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/curryRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/date.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/debounce.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/deburr.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/default.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/defaultTo.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/defaults.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/defaultsDeep.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/defer.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/delay.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/difference.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/differenceBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/differenceWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/divide.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/drop.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/dropRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/dropRightWhile.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/dropWhile.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/each.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/eachRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/endsWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/entries.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/entriesIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/eq.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/escape.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/escapeRegExp.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/every.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/extend.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/extendWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/fill.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/filter.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/find.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/findIndex.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/findKey.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/findLast.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/findLastIndex.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/findLastKey.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/first.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flatMap.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flatMapDeep.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flatMapDepth.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flatten.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flattenDeep.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flattenDepth.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flip.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/floor.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flow.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/flowRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/forEach.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/forEachRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/forIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/forInRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/forOwn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/forOwnRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/fromPairs.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/function.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/functions.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/functionsIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/get.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/getRepo.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/getTime.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/getZodiac.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/groupBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/gt.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/gte.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/has.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/hasIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/head.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/identity.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/inRange.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/includes.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/index.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/indexOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/initial.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/intersection.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/intersectionBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/intersectionWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/invert.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/invertBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/invoke.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/invokeMap.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isArguments.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isArray.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isArrayBuffer.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isArrayLike.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isArrayLikeObject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isBoolean.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isBuffer.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isDate.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isElement.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isEmpty.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isEqual.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isEqualWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isError.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isFinite.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isFunction.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isInteger.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isLength.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isMap.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isMatch.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isMatchWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isNaN.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isNative.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isNil.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isNull.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isNumber.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isObject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isObjectLike.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isPlainObject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isRegExp.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isSafeInteger.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isSet.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isString.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isSymbol.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isTypedArray.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isUndefined.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isWeakMap.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/isWeakSet.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/iteratee.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/join.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/jsonfn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/kebabCase.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/keyBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/keys.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/keysIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lang.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/last.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lastIndexOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lodash.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lowerCase.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lowerFirst.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lt.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/lte.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/map.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/mapKeys.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/mapValues.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/matches.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/matchesProperty.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/math.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/max.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/maxBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/mean.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/meanBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/memoize.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/merge.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/mergeWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/method.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/methodOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/min.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/minBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/mixin.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/multiply.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/negate.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/next.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/noop.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/now.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/nth.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/nthArg.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/number.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/object.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/omit.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/omitBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/once.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/orderBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/over.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/overArgs.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/overEvery.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/overSome.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pad.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/padEnd.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/padStart.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/parseInt.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/partial.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/partialRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/partition.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pick.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pickBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/plant.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/property.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/propertyOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pull.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pullAll.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pullAllBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pullAllWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/pullAt.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/random.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/range.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/rangeRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/readFile.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/rearg.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/reduce.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/reduceRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/reject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/remove.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/repeat.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/replace.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/rest.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/result.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/reverse.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/round.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sample.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sampleSize.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/seq.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/set.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/setWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/shuffle.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/size.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/slice.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/snakeCase.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/some.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedIndex.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedIndexBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedIndexOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedLastIndex.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedLastIndexBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedLastIndexOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedUniq.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sortedUniqBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/split.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/spread.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/startCase.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/startsWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/string.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/stubArray.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/stubFalse.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/stubObject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/stubString.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/stubTrue.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/subtract.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sum.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/sumBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/tail.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/take.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/takeRight.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/takeRightWhile.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/takeWhile.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/tap.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/template.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/templateSettings.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/throttle.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/thru.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/times.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toArray.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toFinite.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toInteger.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toIterator.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toJSON.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toLength.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toLower.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toNumber.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toPairs.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toPairsIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toPath.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toPlainObject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toSafeInteger.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toString.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toTime.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/toUpper.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/tokenize.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/transform.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/trim.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/trimEnd.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/trimStart.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/truncate.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unary.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unescape.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/union.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unionBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unionWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/uniq.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/uniqBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/uniqWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/uniqueId.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unset.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unzip.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/unzipWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/update.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/updateWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/upperCase.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/upperFirst.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/util.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/value.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/valueOf.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/values.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/valuesIn.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/without.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/words.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/wrap.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/wrapperAt.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/wrapperChain.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/wrapperLodash.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/wrapperReverse.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/wrapperValue.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/writeFile.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/xor.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/xorBy.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/xorWith.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/zip.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/zipObject.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/zipObjectDeep.js",
            "/Users/Napoleon/Documents/repos/cbmjs/cbm-engine/library/zipWith.js"
        ]
    }
]
